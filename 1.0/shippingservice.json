{
  "swagger": "2.0",
  "info": {
    "version": "shippingservice",
    "title": "Shipping service API"
  },
  "host": "eu-ext.linnworks.net",
  "schemes": [
    "https"
  ],
  "paths": {
    "/api/ShippingService/GetIntegrations": {
      "get": {
        "tags": [
          "ShippingService"
        ],
        "summary": "GetIntegrations",
        "description": "Gets all configured vendor integrations\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>1</b></span> / minute",
        "operationId": "GetIntegrations",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/System_ShippingAPI_Config"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ShippingService/PostShipmentUpload": {
      "post": {
        "tags": [
          "ShippingService"
        ],
        "summary": "PostShipmentUpload",
        "description": "\n<b>Permissions Required: </b> GlobalPermissions.ShippingService.PostShipmentUploadNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "PostShipmentUpload",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PostShipmentUploadRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ShippingService/GetConsignmentsByManifest": {
      "get": {
        "tags": [
          "ShippingService"
        ],
        "summary": "GetConsignmentsByManifest",
        "description": "Get paged list of consignments for a specific vendor, account id and manifest id. Use /ShippingService/GetFiledManifestsByVendor for input arguments.\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>10</b></span> / minute",
        "operationId": "GetConsignmentsByManifest",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "vendor",
            "in": "query",
            "description": "Vendor name",
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "description": "Account id",
            "type": "string"
          },
          {
            "name": "pkManifestId",
            "in": "query",
            "description": "Manifest id",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "externalManifestId",
            "in": "query",
            "description": "External manifest id. If is null, all consignments for this account will be returned",
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "manifestDate",
            "in": "query",
            "description": "The date at which the manifest was filed. Leave empty.",
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GenericPagedResult_Consignment"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ShippingService/GetFiledManifestsByVendor": {
      "get": {
        "tags": [
          "ShippingService"
        ],
        "summary": "GetFiledManifestsByVendor",
        "description": "Gets a paged list of filed manifest by vendor between two dates. Use /ShippingService/GetIntegrations to get all vendors and friendly names\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>10</b></span> / minute",
        "operationId": "GetFiledManifestsByVendor",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "vendor",
            "in": "query",
            "description": "Vendor name",
            "type": "string"
          },
          {
            "name": "vendorFriendlyName",
            "in": "query",
            "description": "Vendor friendly name",
            "type": "string"
          },
          {
            "name": "from",
            "in": "query",
            "description": "From date",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "to",
            "in": "query",
            "description": "To date",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "entriesPerPage",
            "in": "query",
            "description": "Entries per page",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GenericPagedResult_FiledManifest"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ShippingService/GetShippingQuote": {
      "get": {
        "tags": [
          "ShippingService"
        ],
        "summary": "GetShippingQuote",
        "description": "Get shipping quote for a single order. The request specifies the order id and list of integrated services for which the shipping quote should be run. You can get the list of all integrated services in ShippingService/GetIntegrations \r\nOnce a list of services obtained you can use ShippingService/SetShippingMethodFromQuote call to set the selected shipping service for an order\n<b>Permissions Required: </b> GlobalPermissions.ShippingService.ShippingQuoteNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>5</b></span> / minute",
        "operationId": "GetShippingQuote",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request.pkOrderId",
            "in": "query",
            "description": "Unique Order Identifier for which the shipping quote will be run",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "request.accounts",
            "in": "query",
            "description": "List of Integrated accounts to include in the shipping quote. Only shipping integrations that support shipping quotes will be used.",
            "required": false,
            "type": "array",
            "items": {},
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetShippingQuoteResponse"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ShippingService/CancelOrderShippingLabel": {
      "post": {
        "tags": [
          "ShippingService"
        ],
        "summary": "CancelOrderShippingLabel",
        "description": "Cancels the shipping label for an order\n<b>Permissions Required: </b> GlobalPermissions.ShippingService.ShippingLabelNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "CancelOrderShippingLabel",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ShippingService_CancelOrderShippingLabelRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ShippingService_CancelOrderShippingLabelRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CancelOrderShippingLabelResponse"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    }
  },
  "definitions": {
    "System_ShippingAPI_Config": {
      "type": "object",
      "properties": {
        "pkShippingAPIConfigId": {
          "format": "int32",
          "type": "integer"
        },
        "Vendor": {
          "type": "string"
        },
        "VendorFriendlyName": {
          "type": "string"
        },
        "VendorIcon": {
          "type": "string"
        },
        "AccountId": {
          "type": "string"
        },
        "LabelFormat": {
          "type": "string"
        },
        "Services": {
          "format": "int32",
          "type": "integer"
        },
        "ManifestPending": {
          "type": "boolean"
        },
        "LastManifestWithErrorId": {
          "format": "int32",
          "type": "integer"
        },
        "ReadOnly": {
          "type": "boolean"
        },
        "Status": {
          "type": "string"
        },
        "PrinterConfig": {
          "$ref": "#/definitions/PrinterConfig"
        },
        "QuoteEnabled": {
          "type": "boolean"
        },
        "QuoteOnlyIncludedServices": {
          "type": "boolean"
        }
      }
    },
    "PrinterConfig": {
      "type": "object",
      "properties": {
        "PrinterName": {
          "type": "string"
        },
        "TemplateId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "LabelFormat": {
          "type": "string"
        },
        "MarginLeft": {
          "format": "double",
          "type": "number"
        },
        "MarginTop": {
          "format": "double",
          "type": "number"
        },
        "Duplex": {
          "type": "boolean"
        },
        "UserConfig": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrinterUserConfig"
          }
        },
        "PrintZoneConfig": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrintZoneConfig"
          }
        }
      }
    },
    "PrinterUserConfig": {
      "type": "object",
      "properties": {
        "UserId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "PrinterName": {
          "type": "string"
        },
        "MarginLeft": {
          "format": "double",
          "type": "number"
        },
        "MarginTop": {
          "format": "double",
          "type": "number"
        },
        "TemplateId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "LabelFormat": {
          "type": "string"
        },
        "Duplex": {
          "type": "boolean"
        }
      }
    },
    "PrintZoneConfig": {
      "type": "object",
      "properties": {
        "PrintZoneCode": {
          "type": "string"
        },
        "PrinterDestination": {
          "type": "string"
        },
        "PrinterName": {
          "type": "string"
        }
      }
    },
    "PostShipmentUploadRequest": {
      "type": "object",
      "properties": {
        "FileUploadItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FileUploadItem"
          }
        }
      }
    },
    "FileUploadItem": {
      "type": "object",
      "properties": {
        "EncodedFile": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "DocType": {
          "type": "string"
        },
        "ExpirationDate": {
          "type": "string"
        },
        "DocUsageType": {
          "type": "string"
        },
        "OrderId": {
          "type": "string"
        },
        "AccountId": {
          "type": "string"
        },
        "Vendor": {
          "type": "string"
        }
      }
    },
    "GenericPagedResult_Consignment": {
      "description": "Order item object",
      "type": "object",
      "properties": {
        "PageNumber": {
          "format": "int32",
          "description": "Result page number",
          "type": "integer"
        },
        "EntriesPerPage": {
          "format": "int32",
          "description": "Result page size, quantity of records per page",
          "type": "integer"
        },
        "TotalEntries": {
          "format": "int64",
          "description": "Total records",
          "type": "integer"
        },
        "TotalPages": {
          "format": "int32",
          "description": "Total pages",
          "type": "integer",
          "readOnly": true
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Consignment"
          }
        }
      }
    },
    "Consignment": {
      "type": "object",
      "properties": {
        "ConsignmentId": {
          "format": "int32",
          "type": "integer"
        },
        "OrderId": {
          "format": "int32",
          "type": "integer"
        },
        "Customer": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "PostalCode": {
          "type": "string"
        },
        "Country": {
          "type": "string"
        },
        "Weight": {
          "format": "double",
          "type": "number"
        },
        "TrackingNumbers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Packages": {
          "format": "int32",
          "type": "integer"
        },
        "ConsignmentPackages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManifestPackage"
          }
        },
        "Properties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceProperty"
          }
        },
        "Deferred": {
          "type": "boolean"
        },
        "Service": {
          "type": "string"
        }
      }
    },
    "ManifestPackage": {
      "type": "object",
      "properties": {
        "OrderReference": {
          "type": "string"
        },
        "PackageSeqNo": {
          "format": "int32",
          "type": "integer"
        },
        "Weight": {
          "format": "double",
          "type": "number"
        },
        "Depth": {
          "format": "double",
          "type": "number"
        },
        "Width": {
          "format": "double",
          "type": "number"
        },
        "Height": {
          "format": "double",
          "type": "number"
        },
        "PackageFormat": {
          "type": "string"
        },
        "TrackingNumber": {
          "type": "string"
        },
        "Value": {
          "format": "double",
          "type": "number"
        },
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SavedItem"
          }
        }
      }
    },
    "ServiceProperty": {
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "PropertyValue": {
          "type": "string"
        },
        "ServiceId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "SavedItem": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer"
        },
        "UnitValue": {
          "format": "double",
          "type": "number"
        },
        "UnitValueCurrency": {
          "type": "string"
        }
      }
    },
    "GenericPagedResult_FiledManifest": {
      "description": "Order item object",
      "type": "object",
      "properties": {
        "PageNumber": {
          "format": "int32",
          "description": "Result page number",
          "type": "integer"
        },
        "EntriesPerPage": {
          "format": "int32",
          "description": "Result page size, quantity of records per page",
          "type": "integer"
        },
        "TotalEntries": {
          "format": "int64",
          "description": "Total records",
          "type": "integer"
        },
        "TotalPages": {
          "format": "int32",
          "description": "Total pages",
          "type": "integer",
          "readOnly": true
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FiledManifest"
          }
        }
      }
    },
    "FiledManifest": {
      "type": "object",
      "properties": {
        "ManifestId": {
          "format": "int32",
          "type": "integer"
        },
        "Date": {
          "format": "date-time",
          "type": "string"
        },
        "ExternalManifestId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Reference": {
          "type": "string"
        },
        "IsError": {
          "type": "boolean"
        },
        "Vendor": {
          "type": "string"
        },
        "AccountId": {
          "type": "string"
        },
        "NumConsignments": {
          "format": "int32",
          "type": "integer"
        },
        "fkShippingAPIConfigId": {
          "format": "int32",
          "type": "integer"
        },
        "IsComplete": {
          "type": "boolean"
        }
      }
    },
    "GetShippingQuoteRequest": {
      "description": "Request class for GetShippingQuote",
      "type": "object",
      "properties": {
        "pkOrderId": {
          "format": "uuid",
          "description": "Unique Order Identifier for which the shipping quote will be run",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Accounts": {
          "description": "List of Integrated accounts to include in the shipping quote. Only shipping integrations that support shipping quotes will be used.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShippingQuoteAccounts"
          }
        }
      }
    },
    "ShippingQuoteAccounts": {
      "description": "Integration account for shipping quote request",
      "type": "object",
      "properties": {
        "Vendor": {
          "description": "Vendor name",
          "type": "string"
        },
        "AccountId": {
          "description": "Account Id",
          "type": "string"
        },
        "VendorFriendlyName": {
          "description": "VendorFriendlyName",
          "type": "string"
        }
      }
    },
    "GetShippingQuoteResponse": {
      "description": "Shipping quote response",
      "type": "object",
      "properties": {
        "pkOrderId": {
          "format": "uuid",
          "description": "Unique order identifier",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Quotes": {
          "description": "List of quotes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShippingQuoteVendor"
          }
        },
        "Errors": {
          "description": "List of errors",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShippingQuoteVendorError"
          }
        }
      }
    },
    "ShippingQuoteVendor": {
      "description": "Single shipping quote",
      "type": "object",
      "properties": {
        "Vendor": {
          "description": "Vendor identifier",
          "type": "string"
        },
        "FriendlyName": {
          "description": "Vendor friendly name",
          "type": "string"
        },
        "ServiceVendor": {
          "description": "Service vendor name",
          "type": "string"
        },
        "IconURL": {
          "description": "Vendor icon",
          "type": "string"
        },
        "AccountId": {
          "description": "Integration Account Id",
          "type": "string"
        },
        "ServiceName": {
          "description": "Service Name",
          "type": "string"
        },
        "ServiceCode": {
          "description": "Service Code",
          "type": "string"
        },
        "ServiceId": {
          "format": "uuid",
          "description": "Service Id - must be unique from the shipping integration",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ServiceTag": {
          "description": "Service tag, normally this will match the ServiceCode",
          "type": "string"
        },
        "CollectionDate": {
          "format": "date-time",
          "description": "Earliest available collection date. If the courier doesn't support collection, this will be returned as current UTC time",
          "type": "string"
        },
        "EstimatedDeliveryDate": {
          "format": "date-time",
          "description": "Estimated delivery date",
          "type": "string"
        },
        "Currency": {
          "description": "Shipping quote currency",
          "type": "string"
        },
        "Cost": {
          "format": "double",
          "description": "Shipping quote cost  (excluding tax)",
          "type": "number"
        },
        "Tax": {
          "format": "double",
          "description": "Shipping quote tax",
          "type": "number"
        },
        "TotalCost": {
          "format": "double",
          "description": "Total shipping cost  (including tax)",
          "type": "number"
        },
        "PropertyItem": {
          "description": "List of shipping quote properties",
          "type": "array",
          "items": {
            "$ref": "#/definitions/QuoteProperty"
          }
        },
        "Options": {
          "description": "List of shipping quote options",
          "type": "array",
          "items": {
            "$ref": "#/definitions/QuoteServieOption"
          }
        }
      }
    },
    "ShippingQuoteVendorError": {
      "type": "object",
      "properties": {
        "Vendor": {
          "type": "string"
        },
        "FriendlyName": {
          "type": "string"
        },
        "IconURL": {
          "type": "string"
        },
        "AccountId": {
          "type": "string"
        },
        "ErrorMessage": {
          "type": "string"
        }
      }
    },
    "QuoteProperty": {
      "description": "Shipping quote property",
      "type": "object",
      "properties": {
        "Title": {
          "description": "Property title",
          "type": "string"
        },
        "Value": {
          "description": "Property value",
          "type": "string"
        }
      }
    },
    "QuoteServieOption": {
      "description": "Shipping quote service options",
      "type": "object",
      "properties": {
        "OptionName": {
          "description": "Options name",
          "type": "string"
        },
        "OptionValue": {
          "description": "Options value",
          "type": "string"
        }
      }
    },
    "ShippingService_CancelOrderShippingLabelRequest": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/CancelOrderShippingLabelRequest",
          "description": ""
        }
      }
    },
    "CancelOrderShippingLabelRequest": {
      "description": "Class used for reqeust parameters for CancelOrderShippingLabel",
      "type": "object",
      "properties": {
        "pkOrderId": {
          "format": "uuid",
          "description": "Unique Order id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "CancelOrderShippingLabelResponse": {
      "description": "Class used for getting shipping label cancelation parameter",
      "type": "object",
      "properties": {
        "LabelCanceled": {
          "description": "Identifies that the label is canceled successfully in the courier system",
          "type": "boolean"
        },
        "MustCancelManually": {
          "description": "Identifies that the label is canceled in Linnworks Only and must also be canceled manually with the courier. This normally indicates that the courier does not support label cancelation.",
          "type": "boolean"
        },
        "IsError": {
          "description": "Is error",
          "type": "boolean"
        },
        "ErrorMessage": {
          "description": "Error Message if IsError is true",
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "token": {
      "type": "apiKey",
      "description": "Authorization Header",
      "name": "Authorization",
      "in": "header"
    }
  }
}