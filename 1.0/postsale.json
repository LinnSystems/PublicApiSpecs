{
  "swagger": "2.0",
  "info": {
    "version": "postsale",
    "title": "Post Sale (Cancellations) API"
  },
  "host": "eu-ext.linnworks.net",
  "schemes": [
    "https"
  ],
  "paths": {
    "/api/PostSale/GetCancellationOptions": {
      "get": {
        "tags": [
          "PostSale"
        ],
        "summary": "GetCancellationOptions",
        "description": "This method is used to validate whether a channel cancellation can be submitted for a given order\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.OpenOrders.CancellationsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetCancellationOptions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "query",
            "description": "The relevant order ID",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CancellationOptions"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/PostSale/CreateCancellation": {
      "post": {
        "tags": [
          "PostSale"
        ],
        "summary": "CreateCancellation",
        "description": "This method is used to further validate and create a cancellation in Linnworks, as well as submit it to the channel where this is requested\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.OpenOrders.CancellationsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "CreateCancellation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "PostSale_CreateCancellationRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostSale_CreateCancellationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ValidatedCancellation"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    }
  },
  "definitions": {
    "CancellationOptions": {
      "type": "object",
      "properties": {
        "CanCancelInternally": {
          "type": "boolean",
          "readOnly": true
        },
        "AutomaticRefundOnCancel": {
          "type": "boolean",
          "readOnly": true
        },
        "CanCancel": {
          "type": "boolean",
          "readOnly": true
        },
        "CanCancelOrderLines": {
          "type": "boolean",
          "readOnly": true
        },
        "CanCancelPartially": {
          "type": "boolean",
          "readOnly": true
        },
        "CanCancelFreeText": {
          "type": "boolean",
          "readOnly": true
        },
        "CancelFreeTextOrNoteMaxLength": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "CancellationReasons": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChannelReason"
          },
          "readOnly": true
        },
        "Order": {
          "$ref": "#/definitions/OrderDetails",
          "readOnly": true
        },
        "CancellationHeader": {
          "$ref": "#/definitions/OrderRefundHeader"
        },
        "AllowRefundOnCancel": {
          "type": "boolean",
          "readOnly": true
        },
        "Errors": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "OrderIsLockedOnUnhandledError": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "ChannelReason": {
      "type": "object",
      "properties": {
        "Types": {
          "enum": [
            "None",
            "Cancellation",
            "ItemRefund",
            "ShippingRefund",
            "ServiceRefund",
            "ItemReturn",
            "InsufficientRefund",
            "AdditionalRefund",
            "RejectReturn",
            "RejectRefund"
          ],
          "type": "string"
        },
        "Tag": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "SubReasons": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChannelSubReason"
          }
        }
      }
    },
    "OrderDetails": {
      "type": "object",
      "properties": {
        "OrderId": {
          "format": "uuid",
          "description": "Order ID (pkOrderId)",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "NumOrderId": {
          "format": "int32",
          "description": "Linnworks order number",
          "type": "integer"
        },
        "Processed": {
          "description": "If order is processed",
          "type": "boolean"
        },
        "ProcessedDateTime": {
          "format": "date-time",
          "description": "Date and time when order was processed",
          "type": "string"
        },
        "FulfilmentLocationId": {
          "format": "uuid",
          "description": "Location ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "GeneralInfo": {
          "$ref": "#/definitions/OrderGeneralInfo",
          "description": "General information about order"
        },
        "ShippingInfo": {
          "$ref": "#/definitions/OrderShippingInfo",
          "description": "Order shipping information"
        },
        "CustomerInfo": {
          "$ref": "#/definitions/OrderCustomerInfo",
          "description": "Order Customer information (Name, email etc)"
        },
        "TotalsInfo": {
          "$ref": "#/definitions/OrderTotalsInfo",
          "description": "Order totals information"
        },
        "ExtendedProperties": {
          "description": "Extended properties of an order",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtendedProperty"
          }
        },
        "FolderName": {
          "description": "Folder names assigned to an order",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Items": {
          "description": "List of order items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderItem"
          }
        },
        "Notes": {
          "description": "List of order notes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderNote"
          }
        },
        "PaidDateTime": {
          "format": "date-time",
          "description": "Date and time when the order was marked as paid",
          "type": "string"
        },
        "TaxId": {
          "description": "Buyer's tax number.",
          "type": "string"
        }
      }
    },
    "OrderRefundHeader": {
      "type": "object",
      "properties": {
        "RefundHeaderId": {
          "format": "int32",
          "type": "integer"
        },
        "Currency": {
          "type": "string"
        },
        "Amount": {
          "format": "double",
          "type": "number"
        },
        "RefundLines": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VerifiedRefund"
          }
        },
        "RefundLink": {
          "type": "string"
        },
        "OrderId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "NumOrderId": {
          "format": "int32",
          "type": "integer"
        },
        "Status": {
          "$ref": "#/definitions/PostSaleStatus"
        },
        "OrderSource": {
          "type": "string"
        },
        "OrderSubSource": {
          "type": "string"
        },
        "ExternalReference": {
          "type": "string"
        },
        "ChannelInitiated": {
          "type": "boolean"
        },
        "CreatedDate": {
          "format": "date-time",
          "type": "string"
        },
        "Actioned": {
          "type": "boolean"
        },
        "LastActionDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "ChannelSubReason": {
      "type": "object",
      "properties": {
        "Tag": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "OrderGeneralInfo": {
      "description": "Order General Info class",
      "type": "object",
      "properties": {
        "Status": {
          "format": "int32",
          "description": "Order Status (0 = UNPAID, 1 = PAID,2 = RETURN,3 = PENDING,4 = RESEND)",
          "type": "integer"
        },
        "LabelPrinted": {
          "description": "Is label printed",
          "type": "boolean"
        },
        "LabelError": {
          "description": "Is there a label error",
          "type": "string"
        },
        "InvoicePrinted": {
          "description": "Is invoice printed",
          "type": "boolean"
        },
        "InvoicePrintError": {
          "description": "Is there invoice print error",
          "type": "string"
        },
        "PickListPrinted": {
          "description": "Is pick list printed",
          "type": "boolean"
        },
        "PickListPrintError": {
          "description": "Is there pick list print error",
          "type": "string"
        },
        "IsRuleRun": {
          "description": "If rules engine rule ran on an order",
          "type": "boolean"
        },
        "Notes": {
          "format": "int32",
          "description": "Quantity of order notes",
          "type": "integer"
        },
        "PartShipped": {
          "description": "If order partly shipped",
          "type": "boolean"
        },
        "Marker": {
          "format": "int32",
          "description": "Order marker (0 = NOT TAG,1 = Tag 1,2 = Tag 2,3 = Tag 3,4 = Tag 4,5 = Tag 5,6 = Tag 6,7 = Parked)",
          "type": "integer"
        },
        "IsParked": {
          "description": "Is the order parked?",
          "type": "boolean"
        },
        "Identifiers": {
          "description": "Order identifiers. [Prime | Scheduled]",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "ReferenceNum": {
          "description": "Order reference number (Channel defined)",
          "type": "string"
        },
        "SecondaryReference": {
          "description": "An additional reference number for the orderr (Used by some channels)",
          "type": "string"
        },
        "ExternalReferenceNum": {
          "description": "This is an additional reference number from the sales channel, typically used by eBay",
          "type": "string"
        },
        "ReceivedDate": {
          "format": "date-time",
          "description": "The date and time at which the order was placed on the sales channel",
          "type": "string"
        },
        "Source": {
          "description": "Order ChannelName/Source (e.g. EBAY)",
          "type": "string"
        },
        "SubSource": {
          "description": "Order Subsource (e.g. EBAY1)",
          "type": "string"
        },
        "SiteCode": {
          "description": "SiteCode used to differentiate between different sites from a single channel (eg. Amazon UK, Amazon US, Amazon FR...)",
          "type": "string"
        },
        "HoldOrCancel": {
          "description": "This shows whether the order has been marked as on hold, for processed orders if the order has been cancelled OnHold = 1",
          "type": "boolean"
        },
        "DespatchByDate": {
          "format": "date-time",
          "description": "Despatch by Date",
          "type": "string"
        },
        "ScheduledDelivery": {
          "$ref": "#/definitions/ScheduledDelivery",
          "description": "Scheduled delivery dates. Take priority over despatch by date"
        },
        "HasScheduledDelivery": {
          "type": "boolean",
          "readOnly": true
        },
        "Location": {
          "format": "uuid",
          "description": "Order location ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "NumItems": {
          "format": "int32",
          "description": "Quantity of order items",
          "type": "integer"
        },
        "PickwaveIds": {
          "description": "All related Pickwave Ids",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "PIIRedactionDays": {
          "format": "int32",
          "description": "Number of days after which an order is processed its pii will be redacted/obfuscate",
          "type": "integer"
        },
        "StockAllocationType": {
          "enum": [
            "NotAllocated",
            "Insuffient",
            "Partial",
            "Full",
            "OverAllocated"
          ],
          "type": "string"
        }
      }
    },
    "OrderShippingInfo": {
      "type": "object",
      "properties": {
        "Vendor": {
          "description": "Courier name (e.g. Royal Mail)",
          "type": "string"
        },
        "PostalServiceId": {
          "format": "uuid",
          "description": "Postal service ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "PostalServiceName": {
          "description": "Postal service name (e.g. Next day delivery)",
          "type": "string"
        },
        "TotalWeight": {
          "format": "double",
          "description": "Order total weight",
          "type": "number"
        },
        "ItemWeight": {
          "format": "double",
          "description": "If order is processed",
          "type": "number"
        },
        "PackageCategoryId": {
          "format": "uuid",
          "description": "Package category ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "PackageCategory": {
          "description": "Package category name",
          "type": "string"
        },
        "PackageTypeId": {
          "format": "uuid",
          "description": "Package type ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "PackageType": {
          "description": "Package type name",
          "type": "string"
        },
        "PostageCost": {
          "format": "double",
          "description": "Order postage cost",
          "type": "number"
        },
        "PostageCostExTax": {
          "format": "double",
          "description": "Order postage cost excluding tax",
          "type": "number"
        },
        "TrackingNumber": {
          "description": "Order tracking number provided by courier",
          "type": "string"
        },
        "ManualAdjust": {
          "description": "If there is an adjustment to shipping cost was made",
          "type": "boolean"
        }
      }
    },
    "OrderCustomerInfo": {
      "type": "object",
      "properties": {
        "ChannelBuyerName": {
          "description": "Username of customer (Comes from channel)",
          "type": "string"
        },
        "Address": {
          "$ref": "#/definitions/CustomerAddress",
          "description": "Customer address"
        },
        "BillingAddress": {
          "$ref": "#/definitions/CustomerAddress",
          "description": "Customer billing address"
        }
      }
    },
    "OrderTotalsInfo": {
      "type": "object",
      "properties": {
        "Subtotal": {
          "format": "double",
          "description": "Order subtotal",
          "type": "number"
        },
        "PostageCost": {
          "format": "double",
          "description": "Order postage cost",
          "type": "number"
        },
        "PostageCostExTax": {
          "format": "double",
          "description": "Order postage cost ex. tax",
          "type": "number"
        },
        "Tax": {
          "format": "double",
          "description": "Tax",
          "type": "number"
        },
        "TotalCharge": {
          "format": "double",
          "description": "Total charge",
          "type": "number"
        },
        "PaymentMethod": {
          "description": "Payment method",
          "type": "string"
        },
        "PaymentMethodId": {
          "format": "uuid",
          "description": "Payment method ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ProfitMargin": {
          "format": "double",
          "description": "Profit margin",
          "type": "number",
          "readOnly": true
        },
        "TotalDiscount": {
          "format": "double",
          "description": "Total discount applied to the order",
          "type": "number"
        },
        "Currency": {
          "description": "Order currency",
          "type": "string"
        },
        "CountryTaxRate": {
          "format": "double",
          "description": "Country tax rate",
          "type": "number"
        },
        "ConversionRate": {
          "format": "double",
          "description": "Currency conversion rate. Set at point of save by the currency",
          "type": "number"
        }
      }
    },
    "ExtendedProperty": {
      "type": "object",
      "properties": {
        "RowId": {
          "format": "uuid",
          "description": "Record row ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Name": {
          "description": "Extended property name",
          "type": "string"
        },
        "Value": {
          "description": "Extended property value",
          "type": "string"
        },
        "Type": {
          "description": "Extended property type",
          "type": "string"
        }
      }
    },
    "OrderItem": {
      "description": "Order item object",
      "type": "object",
      "properties": {
        "ItemId": {
          "format": "uuid",
          "description": "Stock Item ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ItemNumber": {
          "description": "Item number as on channel",
          "type": "string"
        },
        "SKU": {
          "description": "Product SKU",
          "type": "string"
        },
        "ItemSource": {
          "description": "Item source / channel name",
          "type": "string"
        },
        "Title": {
          "description": "Item title",
          "type": "string"
        },
        "Quantity": {
          "format": "int32",
          "description": "Quantity",
          "type": "integer"
        },
        "CategoryName": {
          "description": "Product category",
          "type": "string"
        },
        "CompositeAvailablity": {
          "format": "int32",
          "description": "Composite availability",
          "type": "integer"
        },
        "StockLevelsSpecified": {
          "description": "If stock level specified",
          "type": "boolean"
        },
        "OnOrder": {
          "format": "int32",
          "description": "Level due in purchase orders",
          "type": "integer"
        },
        "OnPurchaseOrder": {
          "$ref": "#/definitions/OrderItemOnOrder",
          "description": "Purchase order bound to this item"
        },
        "InOrderBook": {
          "format": "int32",
          "description": "Quantity currently in open orders",
          "type": "integer"
        },
        "Level": {
          "format": "int32",
          "description": "Current stock level",
          "type": "integer"
        },
        "MinimumLevel": {
          "format": "int32",
          "description": "Minimum level",
          "type": "integer"
        },
        "AvailableStock": {
          "format": "int32",
          "description": "Currently available stock level (Level-InOrderBook)",
          "type": "integer"
        },
        "PricePerUnit": {
          "format": "double",
          "description": "Unit price",
          "type": "number"
        },
        "UnitCost": {
          "format": "double",
          "description": "Unit cost",
          "type": "number"
        },
        "DespatchStockUnitCost": {
          "format": "double",
          "description": "Despatch stock unit cost",
          "type": "number"
        },
        "Discount": {
          "format": "double",
          "description": "Percentage (0%, 10%, 20%, etc...)",
          "type": "number"
        },
        "Tax": {
          "format": "double",
          "description": "Actual tax value on an item",
          "type": "number",
          "readOnly": true
        },
        "TaxRate": {
          "format": "double",
          "description": "Tax rate",
          "type": "number"
        },
        "Cost": {
          "format": "double",
          "description": "Total item cost (exc tax)",
          "type": "number"
        },
        "CostIncTax": {
          "format": "double",
          "description": "Total item cost (inc tax)",
          "type": "number"
        },
        "CompositeSubItems": {
          "description": "List of order items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderItem"
          }
        },
        "IsService": {
          "description": "if item is a service",
          "type": "boolean"
        },
        "SalesTax": {
          "format": "double",
          "description": "Sales Tax",
          "type": "number"
        },
        "TaxCostInclusive": {
          "description": "If tax is included in a cost",
          "type": "boolean"
        },
        "PartShipped": {
          "description": "If order is partly shipped",
          "type": "boolean"
        },
        "Weight": {
          "format": "double",
          "description": "Order weight",
          "type": "number"
        },
        "BarcodeNumber": {
          "description": "Product barcode",
          "type": "string"
        },
        "Market": {
          "format": "int32",
          "description": "Market",
          "type": "integer"
        },
        "ChannelSKU": {
          "description": "Channel product SKU",
          "type": "string"
        },
        "ChannelTitle": {
          "description": "Channel product title",
          "type": "string"
        },
        "DiscountValue": {
          "format": "double",
          "type": "number",
          "readOnly": true
        },
        "HasImage": {
          "description": "If item got an image",
          "type": "boolean",
          "readOnly": true
        },
        "ImageId": {
          "format": "uuid",
          "description": "Image ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "AdditionalInfo": {
          "description": "List of order item options",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderItemOption"
          }
        },
        "StockLevelIndicator": {
          "format": "int32",
          "description": "Stock level indicator",
          "type": "integer"
        },
        "ShippingCost": {
          "format": "double",
          "description": "If batch number scan required",
          "type": "number"
        },
        "PartShippedQty": {
          "format": "int32",
          "description": "ShippingCost",
          "type": "integer"
        },
        "ItemName": {
          "description": "PartShippedQty",
          "type": "string"
        },
        "BatchNumberScanRequired": {
          "description": "ItemName",
          "type": "boolean"
        },
        "SerialNumberScanRequired": {
          "description": "If serial number scan required",
          "type": "boolean"
        },
        "BinRack": {
          "description": "Binrack location",
          "type": "string"
        },
        "BinRacks": {
          "description": "List of BinRacks used for OrderItem",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderItemBinRack"
          }
        },
        "InventoryTrackingType": {
          "format": "int32",
          "description": "Identifies whether the item has a sell by date or other defined order in which inventory is to be sold",
          "type": "integer"
        },
        "isBatchedStockItem": {
          "description": "If item has batches",
          "type": "boolean",
          "readOnly": true
        },
        "IsWarehouseManaged": {
          "type": "boolean"
        },
        "IsUnlinked": {
          "type": "boolean",
          "readOnly": true
        },
        "StockItemIntId": {
          "format": "int32",
          "type": "integer"
        },
        "Boxes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StockItemBoxConfiguration"
          }
        },
        "AddedDate": {
          "format": "date-time",
          "type": "string"
        },
        "RowId": {
          "format": "uuid",
          "description": "Record row ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "OrderId": {
          "format": "uuid",
          "description": "Order ID (pkOrderID)",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "StockItemId": {
          "format": "uuid",
          "description": "Stock Item ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "OrderNote": {
      "type": "object",
      "properties": {
        "OrderNoteId": {
          "format": "uuid",
          "description": "Order note ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "OrderId": {
          "format": "uuid",
          "description": "Order Id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "NoteDate": {
          "format": "date-time",
          "description": "Date and time when note was added",
          "type": "string"
        },
        "Internal": {
          "description": "order note type (Internal or External)",
          "type": "boolean"
        },
        "Note": {
          "description": "Note's text",
          "type": "string"
        },
        "CreatedBy": {
          "description": "User that created note",
          "type": "string"
        },
        "NoteTypeId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "VerifiedRefund": {
      "type": "object",
      "properties": {
        "RefundRowId": {
          "format": "uuid",
          "description": "A unique identifier for the refund line",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "RefundHeaderId": {
          "format": "int32",
          "description": "A unique identifier for the refund header this line belongs to",
          "type": "integer"
        },
        "Status": {
          "$ref": "#/definitions/PostSaleStatus",
          "description": "A detailed description of this refund line's status"
        },
        "RefundedUnit": {
          "description": "Identifies the type of refund for this line",
          "enum": [
            "Item",
            "Shipping",
            "Service",
            "Additional"
          ],
          "type": "string"
        },
        "IsShippingRefund": {
          "description": "Identifies whether the refund is a shipping refund",
          "type": "boolean",
          "readOnly": true
        },
        "IsAdditionalRefund": {
          "description": "Identifies whether the refund is an additional refund",
          "type": "boolean",
          "readOnly": true
        },
        "IsCancellation": {
          "description": "Identifies whether the refund row is a cancellation",
          "type": "boolean",
          "readOnly": true
        },
        "RefundedItem": {
          "$ref": "#/definitions/VerifiedRefundItem",
          "description": "Used mainly to associate an item with an error, this identifies the order item to which the refund line applies"
        },
        "ValidationError": {
          "description": "If validation has failed for this item, the field will be populated with the appropriate error message",
          "type": "string"
        },
        "Error": {
          "type": "string"
        },
        "Errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RefundError"
          }
        },
        "Actioned": {
          "description": "Line-level indicator of whether the refund has been actioned",
          "type": "boolean"
        },
        "ActionedDate": {
          "format": "date-time",
          "description": "If a refund has been actioned, this denotes the date it was actioned. For not actioned lines, this value is null",
          "type": "string"
        },
        "ChannelInitiated": {
          "description": "Identifies whether the refund was created manually in Linnworks, or downloaded from the channel automatically",
          "type": "boolean"
        },
        "Internal": {
          "description": "Identifies whether the line is processed only internally or also on a third-party channel",
          "type": "boolean"
        },
        "Deleted": {
          "description": "Identifies whether the line has been removed from the refund, and is pending an update to the database to reflect this",
          "type": "boolean"
        },
        "ExternalReference": {
          "description": "The channel reference number for this refund",
          "type": "string"
        },
        "IsFreeText": {
          "description": "Identifies whether the refund reason is provided in freetext, or as one of a predefined set of options",
          "type": "boolean",
          "readOnly": true
        },
        "FreeTextOrNote": {
          "description": "For freetext refund reasons, this is the reason that will be sent to the channel. Otherwise, it is considered an internal note",
          "type": "string"
        },
        "Amount": {
          "format": "double",
          "description": "The amount to be refunded for this line",
          "type": "number"
        },
        "Quantity": {
          "format": "int32",
          "description": "Used when the refund is part of a return",
          "type": "integer"
        },
        "ReasonTag": {
          "description": "For channels that support predefined refund reasons, this is the tag that identifies a predefined reason",
          "type": "string"
        },
        "SubReasonTag": {
          "description": "For channels that support a secondary predefined refund reason, this is the tag that identifies a predefined secondary reason",
          "type": "string"
        },
        "InsufficientRefundTag": {
          "description": "For channels that require a reason when the refund is lower than the full line amount, this is the tag that identifies a predefined insufficient refund reason",
          "type": "string"
        },
        "InsufficientRefundNote": {
          "description": "For channels that require a reason when the refund is lower than the full line amount, and support a freetext note, this field populates that note",
          "type": "string"
        },
        "ReasonCategory": {
          "description": "Internal reason category",
          "type": "string"
        }
      }
    },
    "PostSaleStatus": {
      "type": "object",
      "properties": {
        "StatusHeader": {
          "description": "Identifies whether the refund is open, processed, or in an erroneous state",
          "enum": [
            "OPEN",
            "PROCESSED",
            "ERROR",
            "ERROR_ACKED",
            "PENDING"
          ],
          "type": "string"
        },
        "StatusDetail": {
          "$ref": "#/definitions/PostSaleSubStatus",
          "description": "Further identifies the state the refund is in, along with whether it can be actioned"
        }
      }
    },
    "Identifier": {
      "type": "object",
      "properties": {
        "IdentifierId": {
          "format": "int32",
          "description": "Internal identifier id. Use to update image and name.",
          "type": "integer"
        },
        "Name": {
          "description": "Name displayed where the tag is used",
          "type": "string"
        },
        "Tag": {
          "description": "Internal tag for identification purposes",
          "type": "string"
        },
        "IsCustom": {
          "description": "Is the tag user or system defined?",
          "type": "boolean"
        },
        "ImageId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ImageUrl": {
          "type": "string"
        }
      }
    },
    "ScheduledDelivery": {
      "type": "object",
      "properties": {
        "From": {
          "format": "date-time",
          "type": "string"
        },
        "To": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "CustomerAddress": {
      "type": "object",
      "properties": {
        "EmailAddress": {
          "description": "Customer's email address.",
          "type": "string"
        },
        "Address1": {
          "description": "First line of customer address.",
          "type": "string"
        },
        "Address2": {
          "description": "Second line of customer address.",
          "type": "string"
        },
        "Address3": {
          "description": "Third line of customer address.",
          "type": "string"
        },
        "Town": {
          "description": "Customer's town.",
          "type": "string"
        },
        "Region": {
          "description": "Customer's region.",
          "type": "string"
        },
        "PostCode": {
          "description": "Customer's postcode.",
          "type": "string"
        },
        "Country": {
          "description": "Customer's country.",
          "type": "string"
        },
        "Continent": {
          "description": "Customer's continent",
          "type": "string"
        },
        "FullName": {
          "description": "Customer's first and second name.",
          "type": "string"
        },
        "Company": {
          "description": "Customer's company name.",
          "type": "string"
        },
        "PhoneNumber": {
          "description": "Customer's telephone number.",
          "type": "string"
        },
        "CountryId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "OrderItemOnOrder": {
      "type": "object",
      "properties": {
        "pkPurchaseItemId": {
          "format": "uuid",
          "description": "Primary key of the bound",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Rowid": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "pkPurchaseId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ExternalInvoiceNumber": {
          "type": "string"
        },
        "fkSupplierId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "DateOfDelivery": {
          "format": "date-time",
          "type": "string"
        },
        "QuotedDeliveryDate": {
          "format": "date-time",
          "type": "string"
        },
        "SupplierName": {
          "type": "string"
        },
        "fkLocationId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "OrderItemOption": {
      "type": "object",
      "properties": {
        "pkOptionId": {
          "format": "uuid",
          "description": "Option ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Property": {
          "description": "Option property",
          "type": "string"
        },
        "Value": {
          "description": "Value of the option",
          "type": "string"
        }
      }
    },
    "OrderItemBinRack": {
      "description": "OrderItem BinRack",
      "type": "object",
      "properties": {
        "Quantity": {
          "format": "int32",
          "description": "Quantity for BinRack per Location",
          "type": "integer"
        },
        "BinRack": {
          "description": "BinRack",
          "type": "string"
        },
        "Location": {
          "format": "uuid",
          "description": "LocationId of the BinRack",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "BatchId": {
          "format": "int32",
          "description": "If the item is batched, identifies the batch number",
          "type": "integer"
        },
        "OrderItemBatchId": {
          "format": "int32",
          "description": "If the item is batched, identifies the unique order item batch row",
          "type": "integer"
        }
      }
    },
    "StockItemBoxConfiguration": {
      "description": "Stock item box configuration, dimennsions",
      "type": "object",
      "properties": {
        "BoxId": {
          "format": "int32",
          "description": "Unique box id.",
          "type": "integer"
        },
        "StockItemIntId": {
          "format": "int32",
          "description": "",
          "type": "integer"
        },
        "BoxName": {
          "description": "Box name max 16 characters",
          "type": "string"
        },
        "Width": {
          "format": "double",
          "description": "Width of the box",
          "type": "number"
        },
        "Height": {
          "format": "double",
          "description": "Height of the box",
          "type": "number"
        },
        "Length": {
          "format": "double",
          "description": "Depth of the box",
          "type": "number"
        },
        "Weight": {
          "format": "double",
          "description": "Total weight of the box.",
          "type": "number"
        },
        "ValuePercentage": {
          "format": "double",
          "description": "Value break down percentage",
          "type": "number"
        },
        "Barcode": {
          "description": "Box barcode, max 64 characters.",
          "type": "string"
        },
        "PackagingTypeId": {
          "format": "uuid",
          "description": "Packaging type id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "LogicalDelete": {
          "description": "IsDeleted flag.",
          "type": "boolean"
        }
      }
    },
    "VerifiedRefundItem": {
      "type": "object",
      "properties": {
        "OrderItemRowId": {
          "format": "uuid",
          "description": "The unique order item identifier",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ReturnRowId": {
          "format": "int32",
          "description": "A unique identifier for the return line this refund relates to. If null, it is an independent refund",
          "type": "integer"
        },
        "ItemSKU": {
          "description": "The Linnworks SKU for the item, assuming it is linked. If it is not, this matches the channel SKU",
          "type": "string"
        },
        "ChannelSKU": {
          "description": "The channel's SKU for the item",
          "type": "string"
        },
        "ItemTitle": {
          "description": "For a linked item, the Linnworks item title for this channel (or the default item title where a specific channel title does not exist). For an unlinked item, this is the title\r\nprovided by the channel",
          "type": "string"
        },
        "Cost": {
          "format": "double",
          "description": "The tax-inclusive cost for this line",
          "type": "number"
        },
        "CancelledQuantity": {
          "format": "int32",
          "description": "If a refund is linked to a cancellation request, this field denotes the amount of the item cancelled",
          "type": "integer"
        }
      }
    },
    "RefundError": {
      "type": "object",
      "properties": {
        "RefundRowId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ErrorMessage": {
          "type": "string"
        },
        "DateStamp": {
          "format": "date-time",
          "type": "string"
        },
        "Acknowledged": {
          "type": "boolean"
        }
      }
    },
    "PostSaleSubStatus": {
      "type": "object",
      "properties": {
        "StatusTag": {
          "description": "For an individual refund line, this identifies the line's state on the channel. For the header, if all its lines have the same StatusTag, it will also have the same StatusTag. If not,\r\nit will determine an appropriate StatusTag based on those of its lines",
          "type": "string"
        },
        "StatusDescription": {
          "description": "A user-friendly descriptor of the StatusTag",
          "type": "string"
        },
        "Actionable": {
          "description": "Determines whether the refund is in a state where it requires action from the user",
          "type": "boolean"
        },
        "ActionDescription": {
          "description": "A user-friendly descriptor of what \"actioning\" the refund will do on the channel",
          "type": "string"
        },
        "EditableFields": {
          "description": "Where certain fields need to be modified for the refund to be successfully actioned, this list is populated with a list of the field names, allowing them to be edited as necessary",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PostSale_CreateCancellationRequest": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/CancellationRequest",
          "description": "The requested cancellation settings, including whether or not to submit the cancellation to the channel"
        }
      }
    },
    "CancellationRequest": {
      "type": "object",
      "properties": {
        "IsChannelCancellation": {
          "type": "boolean"
        },
        "IsChannelInitiated": {
          "type": "boolean"
        },
        "IsChannelCancellationConfirmed": {
          "type": "boolean"
        },
        "IsFreeText": {
          "type": "boolean"
        },
        "FreeTextOrNote": {
          "type": "string"
        },
        "ReasonTag": {
          "type": "string"
        },
        "SubReasonTag": {
          "type": "string"
        },
        "CreateFullRefund": {
          "type": "boolean"
        },
        "RefundAlreadyProcessed": {
          "type": "boolean"
        },
        "RefundStatusTag": {
          "type": "string"
        },
        "RefundReference": {
          "type": "string"
        },
        "HeaderId": {
          "format": "int32",
          "type": "integer"
        },
        "OrderId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "InternalOnly": {
          "type": "boolean"
        },
        "IsRetry": {
          "type": "boolean"
        },
        "ActionForm": {
          "$ref": "#/definitions/ActionForm"
        }
      }
    },
    "ActionForm": {
      "type": "object",
      "properties": {
        "caption": {
          "type": "string"
        },
        "controls": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ActionFormControl"
          }
        }
      }
    },
    "ActionFormControl": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "caption": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "group": {
          "type": "string"
        }
      }
    },
    "ValidatedCancellation": {
      "type": "object",
      "properties": {
        "Status": {
          "enum": [
            "OPEN",
            "PROCESSED",
            "ERROR",
            "ERROR_ACKED",
            "PENDING"
          ],
          "type": "string",
          "readOnly": true
        },
        "SubStatus": {
          "$ref": "#/definitions/PostSaleSubStatus",
          "readOnly": true
        },
        "ChannelExistingCancellations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChannelExistingCancellation"
          },
          "readOnly": true
        },
        "NeedsConfirmation": {
          "type": "boolean",
          "readOnly": true
        },
        "RefundReference": {
          "type": "string",
          "readOnly": true
        },
        "Errors": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "Order": {
          "$ref": "#/definitions/OrderDetails",
          "readOnly": true
        },
        "CancellationHeader": {
          "$ref": "#/definitions/OrderRefundHeader"
        },
        "AllowRefundOnCancel": {
          "type": "boolean",
          "readOnly": true
        },
        "OrderIsLockedOnUnhandledError": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "ChannelExistingCancellation": {
      "type": "object",
      "properties": {
        "Sku": {
          "type": "string"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer"
        },
        "Reason": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "token": {
      "type": "apiKey",
      "description": "Authorization Header",
      "name": "Authorization",
      "in": "header"
    }
  }
}