{
  "swagger": "2.0",
  "info": {
    "version": "inventory",
    "title": "Inventory API"
  },
  "host": "eu-ext.linnworks.net",
  "schemes": [
    "https"
  ],
  "paths": {
    "/api/Inventory/UpdateInventoryItemPrices": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "UpdateInventoryItemPrices",
        "description": "Use this call to update stock item prices\n<b>Permissions Required: </b> GlobalPermissions.Inventory.Stock.StockWrite.ChangeStockItemDetailsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>250</b></span> / minute",
        "operationId": "UpdateInventoryItemPrices",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_UpdateInventoryItemPricesRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_UpdateInventoryItemPricesRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/DeleteInventoryItemPrices": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "DeleteInventoryItemPrices",
        "description": "Use this call to delete stock item prices\n<b>Permissions Required: </b> GlobalPermissions.Inventory.Stock.StockWrite.ChangeStockItemDetailsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "DeleteInventoryItemPrices",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_DeleteInventoryItemPricesRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_DeleteInventoryItemPricesRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/GetInventoryItemPriceChannelSuffixes": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "GetInventoryItemPriceChannelSuffixes",
        "description": "Use this call to get all possible price change subsource suffices for all channels\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetInventoryItemPriceChannelSuffixes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/GetInventoryItemPriceTags": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "GetInventoryItemPriceTags",
        "description": "Use this call to get all possible price change tags for all channels\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetInventoryItemPriceTags",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/GetInventoryItemPriceRulesById": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "GetInventoryItemPriceRulesById",
        "description": "Use this call to get stock item price rules by price id\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetInventoryItemPriceRulesById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "stockItemPriceId",
            "in": "query",
            "description": "Price ID of an item",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StockItemPricingRule"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/GetInventoryItemPriceRulesBySource": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "GetInventoryItemPriceRulesBySource",
        "description": "Use this call to get stock item price rules by item id, source and subsource\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetInventoryItemPriceRulesBySource",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "stockItemId",
            "in": "query",
            "description": "Stock item id",
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "source",
            "in": "query",
            "description": "Channel source",
            "type": "string"
          },
          {
            "name": "subSource",
            "in": "query",
            "description": "Channel subsource",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StockItemPricingRule"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/CreateInventoryItemPricingRules": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "CreateInventoryItemPricingRules",
        "description": "Use this call to create stock item price rules\n<b>Permissions Required: </b> GlobalPermissions.Inventory.Stock.StockWrite.ChangeStockItemDetailsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "CreateInventoryItemPricingRules",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_CreateInventoryItemPricingRulesRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_CreateInventoryItemPricingRulesRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/DeleteInventoryItemPricingRules": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "DeleteInventoryItemPricingRules",
        "description": "Use this call to update stock item price rules\n<b>Permissions Required: </b> GlobalPermissions.Inventory.Stock.StockWrite.ChangeStockItemDetailsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "DeleteInventoryItemPricingRules",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_DeleteInventoryItemPricingRulesRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_DeleteInventoryItemPricingRulesRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/UpdateInventoryItemPricingRules": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "UpdateInventoryItemPricingRules",
        "description": "Use this call to update stock item price rules\n<b>Permissions Required: </b> GlobalPermissions.Inventory.Stock.StockWrite.ChangeStockItemDetailsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "UpdateInventoryItemPricingRules",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_UpdateInventoryItemPricingRulesRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_UpdateInventoryItemPricingRulesRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/GetInventoryItemDescriptions": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "GetInventoryItemDescriptions",
        "description": "Use this call to get stockitem Descriptions\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>250</b></span> / minute",
        "operationId": "GetInventoryItemDescriptions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "inventoryItemId",
            "in": "query",
            "description": "stockitem id",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StockItemDescription"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/CreateInventoryItemDescriptions": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "CreateInventoryItemDescriptions",
        "description": "Use this call to create stockitem Descriptions\n<b>Permissions Required: </b> GlobalPermissions.Inventory.Stock.StockWrite.ChangeStockItemDetailsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "CreateInventoryItemDescriptions",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_CreateInventoryItemDescriptionsRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_CreateInventoryItemDescriptionsRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/UpdateInventoryItemDescriptions": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "UpdateInventoryItemDescriptions",
        "description": "Use this call to update stockitem Descriptions\n<b>Permissions Required: </b> GlobalPermissions.Inventory.Stock.StockWrite.ChangeStockItemDetailsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "UpdateInventoryItemDescriptions",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_UpdateInventoryItemDescriptionsRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_UpdateInventoryItemDescriptionsRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/DeleteInventoryItemDescriptions": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "DeleteInventoryItemDescriptions",
        "description": "Use this call to delete stockitem Descriptions\n<b>Permissions Required: </b> GlobalPermissions.Inventory.Stock.StockWrite.ChangeStockItemDetailsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "DeleteInventoryItemDescriptions",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_DeleteInventoryItemDescriptionsRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_DeleteInventoryItemDescriptionsRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/GetStockItemLabels": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "GetStockItemLabels",
        "description": "Use this call to get labels by search token\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetStockItemLabels",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Inventory_GetStockItemLabelsRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_GetStockItemLabelsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StockItemLabel"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/GetBatchesByStockItemId": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "GetBatchesByStockItemId",
        "description": "Used to get batch info for stock item for all locations\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>250</b></span> / minute",
        "operationId": "GetBatchesByStockItemId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "stockItemId",
            "in": "query",
            "description": "Item id",
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "onlyAvailable",
            "in": "query",
            "description": "If true, only available batches will be returned",
            "type": "boolean"
          },
          {
            "name": "stockLocationId",
            "in": "query",
            "description": "",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StockItemBatch"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/GetBatchInventoryById": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "GetBatchInventoryById",
        "description": "Retruns batch header and only batch inventory for provided batch\n<b>Permissions Required: </b> GlobalPermissions.Inventory.MyInventoryNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetBatchInventoryById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetBatchInventoryByIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetBatchInventoryByIdResponse"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/GetStockItemBatchesByLocation": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "GetStockItemBatchesByLocation",
        "description": "Used to get batch info by stock item id and location id\n<b>Permissions Required: </b> GlobalPermissions.Inventory.MyInventoryNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetStockItemBatchesByLocation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Inventory_GetStockItemBatchesByLocationRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_GetStockItemBatchesByLocationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetStockItemBatchesByLocationResponse"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/GetBatchAudit": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "GetBatchAudit",
        "description": "Get audit trail for batches\n<b>Permissions Required: </b> GlobalPermissions.Inventory.MyInventoryNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetBatchAudit",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Inventory_GetBatchAuditRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_GetBatchAuditRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetBatchAuditResponse"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/DeleteBatchInventoryInBulk": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "DeleteBatchInventoryInBulk",
        "description": "Used to delete batch inventory info\n<b>Permissions Required: </b> GlobalPermissions.Inventory.Stock.StockWrite.ChangeStockItemDetailsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "DeleteBatchInventoryInBulk",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_DeleteBatchInventoryInBulkRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_DeleteBatchInventoryInBulkRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/DeleteBatchesByStockItemId": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "DeleteBatchesByStockItemId",
        "description": "Used to delete batches by stock item id\n<b>Permissions Required: </b> GlobalPermissions.Inventory.Stock.StockWrite.ChangeStockItemDetailsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "DeleteBatchesByStockItemId",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_DeleteBatchesByStockItemIdRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_DeleteBatchesByStockItemIdRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/UpdateBatchesWithInventory": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "UpdateBatchesWithInventory",
        "description": "Used to update batches and batch inventory info\n<b>Permissions Required: </b> GlobalPermissions.Inventory.Stock.StockWrite.ChangeStockItemDetailsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "UpdateBatchesWithInventory",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_UpdateBatchesWithInventoryRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_UpdateBatchesWithInventoryRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/CreateBatches": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "CreateBatches",
        "description": "Used to create new batches\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "CreateBatches",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_CreateBatchesRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_CreateBatchesRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/HasStockItemBatches": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "HasStockItemBatches",
        "description": "Used to check if stock item has batches\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "HasStockItemBatches",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "stockItemId",
            "in": "query",
            "description": "Stock item unique identifier",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/UpdateCompositeParentStockLevel": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "UpdateCompositeParentStockLevel",
        "description": "Updates the stock level of the composite parent item\n<b>Permissions Required: </b> GlobalPermissions.Inventory.Stock.StockWrite.ChangeStockItemDetailsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "UpdateCompositeParentStockLevel",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Inventory_UpdateCompositeParentStockLevelRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_UpdateCompositeParentStockLevelRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/GetEbayCompatibilityList": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "GetEbayCompatibilityList",
        "description": "Use this call to get a list of Ebay Compatibility\n<b>Permissions Required: </b> GlobalPermissions.Inventory.MyInventoryNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetEbayCompatibilityList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "stockItemId",
            "in": "query",
            "description": "Stock Item Id",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StockItemEbayCompatibility"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/InsertUpdateEbayCompatibilityList": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "InsertUpdateEbayCompatibilityList",
        "description": "Use this call to insert and update a list of Ebay Compatibility\n<b>Permissions Required: </b> GlobalPermissions.Inventory.MyInventoryNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "InsertUpdateEbayCompatibilityList",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Inventory_InsertUpdateEbayCompatibilityListRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_InsertUpdateEbayCompatibilityListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InsertUpdateEbayCompatibilityListResponse"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/DeleteEbayCompatibilityList": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "DeleteEbayCompatibilityList",
        "description": "Use this call to delete a list of Ebay Compatibility\n<b>Permissions Required: </b> GlobalPermissions.Inventory.MyInventoryNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "DeleteEbayCompatibilityList",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Inventory_DeleteEbayCompatibilityListRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_DeleteEbayCompatibilityListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeleteEbayCompatibilityListResponse"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/GetScrapCategories": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "GetScrapCategories",
        "description": "Used to get scrap categories\n<b>Permissions Required: </b> GlobalPermissions.Inventory.ScrapItemsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetScrapCategories",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetScrapCategoriesResponse"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/AddScrapCategories": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "AddScrapCategories",
        "description": "Used to add scrap categories\n<b>Permissions Required: </b> GlobalPermissions.Inventory.ScrapItems.ScrapCategoriesNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "AddScrapCategories",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Inventory_AddScrapCategoriesRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_AddScrapCategoriesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AddScrapCategoriesResponse"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/DeleteScrapCategories": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "DeleteScrapCategories",
        "description": "Used to delete scrap categories\n<b>Permissions Required: </b> GlobalPermissions.Inventory.ScrapItems.ScrapCategoriesNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "DeleteScrapCategories",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_DeleteScrapCategoriesRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_DeleteScrapCategoriesRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/UpdateScrapCategories": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "UpdateScrapCategories",
        "description": "Used to update scrap categories\n<b>Permissions Required: </b> GlobalPermissions.Inventory.ScrapItems.ScrapCategoriesNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "UpdateScrapCategories",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_UpdateScrapCategoriesRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_UpdateScrapCategoriesRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/GetScrapHistory": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "GetScrapHistory",
        "description": "Used to get scrap history\n<b>Permissions Required: </b> GlobalPermissions.Inventory.ScrapItems.ScrapHistoryNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetScrapHistory",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Inventory_GetScrapHistoryRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_GetScrapHistoryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetScrapHistoryResponse"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/AddScrapItem": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "AddScrapItem",
        "description": "Used to add scrap item\n<b>Permissions Required: </b> GlobalPermissions.Inventory.ScrapItems.ScrapStockNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "AddScrapItem",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Inventory_AddScrapItemRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_AddScrapItemRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AddScrapItemResponse"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/ScrapBatchedItem": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "ScrapBatchedItem",
        "description": "Used to scrap batched item\n<b>Permissions Required: </b> GlobalPermissions.Inventory.ScrapItems.ScrapStockNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "ScrapBatchedItem",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Inventory_ScrapBatchedItemRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_ScrapBatchedItemRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ScrapBatchedItemResponse"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/BulkScrapBatchedItems": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "BulkScrapBatchedItems",
        "description": "Scrap batched items in bulk without consumption\n<b>Permissions Required: </b> GlobalPermissions.Inventory.ScrapItems.ScrapStockNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "BulkScrapBatchedItems",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/BulkScrapBatchedItemsRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/GetProductIdentifiersByStockItemId": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "GetProductIdentifiersByStockItemId",
        "description": "Used to get product identifiers for a stock item\n<b>Permissions Required: </b> GlobalPermissions.Inventory.MyInventoryNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>250</b></span> / minute",
        "operationId": "GetProductIdentifiersByStockItemId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Inventory_GetProductIdentifiersByStockItemIdRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_GetProductIdentifiersByStockItemIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetProductIdentifiersByStockItemIdResponse"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/AddProductIdentifiers": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "AddProductIdentifiers",
        "description": "Used to add product identifiers\n<b>Permissions Required: </b> GlobalPermissions.Inventory.Stock.StockWrite.ChangeStockItemDetailsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>250</b></span> / minute",
        "operationId": "AddProductIdentifiers",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_AddProductIdentifiersRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_AddProductIdentifiersRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/UpdateProductIdentifiers": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "UpdateProductIdentifiers",
        "description": "Used to update product identifiers\n<b>Permissions Required: </b> GlobalPermissions.Inventory.Stock.StockWrite.ChangeStockItemDetailsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "UpdateProductIdentifiers",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_UpdateProductIdentifiersRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_UpdateProductIdentifiersRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/DeleteProductIdentifiers": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "DeleteProductIdentifiers",
        "description": "Used to delete product identifiers\n<b>Permissions Required: </b> GlobalPermissions.Inventory.Stock.StockWrite.ChangeStockItemDetailsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "DeleteProductIdentifiers",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_DeleteProductIdentifiersRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_DeleteProductIdentifiersRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/GetProductIdentifierTypes": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "GetProductIdentifierTypes",
        "description": "Use this call to get available Product Identifier types\n<b>Permissions Required: </b> GlobalPermissions.Inventory.MyInventoryNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetProductIdentifierTypes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetProductIdentifierTypesRequest"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/GetProductIdentifiersBulkByStockItemId": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "GetProductIdentifiersBulkByStockItemId",
        "description": "Used to get product identifiers for multiple stock items\n<b>Permissions Required: </b> GlobalPermissions.Inventory.MyInventoryNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetProductIdentifiersBulkByStockItemId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Object containing a list of stock item ids",
            "schema": {
              "$ref": "#/definitions/GetProductIdentifiersBulkByStockItemIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetProductIdentifiersByStockItemIdResponse"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/GetChannels": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "GetChannels",
        "description": "Use this call to get all channels\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetChannels",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AnyConfig"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/GetChannelsBySource": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "GetChannelsBySource",
        "description": "Use this call to get channels by source\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetChannelsBySource",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "source",
            "in": "query",
            "description": "Channel source",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/HeaderConfig"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/GetExtendedPropertyNames": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "GetExtendedPropertyNames",
        "description": "Use this call to get all available extended property names\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetExtendedPropertyNames",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "propertyType",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/GetAllExtendedPropertyNames": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "GetAllExtendedPropertyNames",
        "description": "Use this call to get extended properties for all types\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetAllExtendedPropertyNames",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/GetExtendedPropertyTypes": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "GetExtendedPropertyTypes",
        "description": "Use this call to get default extended property types\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetExtendedPropertyTypes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/GetPackageGroups": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "GetPackageGroups",
        "description": "Use this call to get all package groups\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>250</b></span> / minute",
        "operationId": "GetPackageGroups",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/KeyGuidValue"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/GetPostalServices": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "GetPostalServices",
        "description": "Use this call to get all postal services\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetPostalServices",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/KeyGuidValue"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/AddImageToInventoryItem": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "AddImageToInventoryItem",
        "description": "Adds an image to the stock item\n<b>Permissions Required: </b> GlobalPermissions.Inventory.MyInventoryNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "AddImageToInventoryItem",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Inventory_AddImageToInventoryItemRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_AddImageToInventoryItemRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AddImageToInventoryItemResponse"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/UpdateInventoryItemField": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "UpdateInventoryItemField",
        "description": "\n<b>Permissions Required: </b> GlobalPermissions.Inventory.Stock.StockWrite.ChangeStockItemDetailsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>250</b></span> / minute",
        "operationId": "UpdateInventoryItemField",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Inventory_UpdateInventoryItemFieldRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_UpdateInventoryItemFieldRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/UpdateInventoryItemStockField": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "UpdateInventoryItemStockField",
        "description": "Update and return stock level\n<b>Permissions Required: </b> GlobalPermissions.Inventory.Stock.StockWrite.ChangeStockItemDetailsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>250</b></span> / minute",
        "operationId": "UpdateInventoryItemStockField",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Inventory_UpdateInventoryItemStockFieldRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_UpdateInventoryItemStockFieldRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/UpdateInventoryItemLevels": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "UpdateInventoryItemLevels",
        "description": "Update and return stock level records for the stock item and any composite related items\n<b>Permissions Required: </b> GlobalPermissions.Inventory.Stock.StockWrite.ChangeStockLevelsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>250</b></span> / minute",
        "operationId": "UpdateInventoryItemLevels",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Inventory_UpdateInventoryItemLevelsRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_UpdateInventoryItemLevelsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/UpdateInventoryItemLocationField": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "UpdateInventoryItemLocationField",
        "description": "Update and return stock level records for the stock item\n<b>Permissions Required: </b> GlobalPermissions.Inventory.Stock.StockWrite.ChangeStockItemBinRackNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "UpdateInventoryItemLocationField",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Inventory_UpdateInventoryItemLocationFieldRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_UpdateInventoryItemLocationFieldRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/GetInventoryItemById": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "GetInventoryItemById",
        "description": "Use this call to get all product details\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>250</b></span> / minute",
        "operationId": "GetInventoryItemById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StockItemInv"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/GetUserSpecificViews": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "GetUserSpecificViews",
        "description": "Use this call to get user-specific views from database\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetUserSpecificViews",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InventoryView"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/CreateUserSpecificView": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "CreateUserSpecificView",
        "description": "Use this call to create a new user-specific view\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "CreateUserSpecificView",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_CreateUserSpecificViewRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_CreateUserSpecificViewRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/UpdateUserSpecificView": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "UpdateUserSpecificView",
        "description": "Use this call to update an existing user-specific view\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "UpdateUserSpecificView",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_UpdateUserSpecificViewRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_UpdateUserSpecificViewRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/DeleteUserSpecificView": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "DeleteUserSpecificView",
        "description": "Use this call to delete user-specific view from database\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "DeleteUserSpecificView",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_DeleteUserSpecificViewRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_DeleteUserSpecificViewRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/GetPreDefinedViews": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "GetPreDefinedViews",
        "description": "Use this call to get pre-defined (standard) views\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetPreDefinedViews",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InventoryView"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/GetInventoryItemsCount": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "GetInventoryItemsCount",
        "description": "Use this call to get total items count\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetInventoryItemsCount",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "includeDeleted",
            "in": "query",
            "description": "Include deleted items",
            "type": "boolean"
          },
          {
            "name": "includeArchived",
            "in": "query",
            "description": "Include archived items",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/AddInventoryItem": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "AddInventoryItem",
        "description": "Use this call to add stock item.\n<b>Permissions Required: </b> GlobalPermissions.Inventory.MyInventoryNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "AddInventoryItem",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_AddInventoryItemRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_AddInventoryItemRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/AddInventoryItemBulk": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "AddInventoryItemBulk",
        "description": "Use this call to add up to 200 stock items.\n<b>Permissions Required: </b> GlobalPermissions.Inventory.MyInventoryNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "AddInventoryItemBulk",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Inventory_AddInventoryItemBulkRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_AddInventoryItemBulkRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BatchedAPIResponse_Guid"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/DuplicateInventoryItem": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "DuplicateInventoryItem",
        "description": "Use this call to add stock item by duplicating existing one\n<b>Permissions Required: </b> GlobalPermissions.Inventory.MyInventoryNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "DuplicateInventoryItem",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_DuplicateInventoryItemRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_DuplicateInventoryItemRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/ArchiveInventoryItems": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "ArchiveInventoryItems",
        "description": "Use this call to archive inventory items. Send only list of IDs and empty list of regions.\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "ArchiveInventoryItems",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_ArchiveInventoryItemsRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_ArchiveInventoryItemsRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/UnarchiveInventoryItems": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "UnarchiveInventoryItems",
        "description": "Use this call to unarchive inventory items\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "UnarchiveInventoryItems",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_UnarchiveInventoryItemsRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_UnarchiveInventoryItemsRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/GetNewItemNumber": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "GetNewItemNumber",
        "description": "Use this call to get next unused SKU\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetNewItemNumber",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/UpdateInventoryItem": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "UpdateInventoryItem",
        "description": "Use this call to update stock item with images\n<b>Permissions Required: </b> GlobalPermissions.Inventory.Stock.StockWrite.ChangeStockItemDetailsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>250</b></span> / minute",
        "operationId": "UpdateInventoryItem",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_UpdateInventoryItemRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_UpdateInventoryItemRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/DeleteInventoryItems": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "DeleteInventoryItems",
        "description": "Use this call to delete inventory item.\r\nAll associated information will be unlinked/removed from this stock item.\n<b>Permissions Required: </b> GlobalPermissions.Inventory.DeleteMyInventoryItems.DeleteItemsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "DeleteInventoryItems",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_DeleteInventoryItemsRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_DeleteInventoryItemsRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/AdjustTemplatesInstant": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "AdjustTemplatesInstant",
        "description": "Use this call to adjust templates\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "AdjustTemplatesInstant",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_AdjustTemplatesInstantRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_AdjustTemplatesInstantRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/AdjustEbayTemplatesInstantLMS": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "AdjustEbayTemplatesInstantLMS",
        "description": "Use this call to create LMS Update (Only works for fixed price templates)\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "AdjustEbayTemplatesInstantLMS",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_AdjustEbayTemplatesInstantLMSRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_AdjustEbayTemplatesInstantLMSRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/AdjustEbayTemplatesDispatchLMS": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "AdjustEbayTemplatesDispatchLMS",
        "description": "Use this call to create LMS Update for dispatch time only (Mr Auto)\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "AdjustEbayTemplatesDispatchLMS",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_AdjustEbayTemplatesDispatchLMSRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_AdjustEbayTemplatesDispatchLMSRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/GetInventoryItemChannelSKUs": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "GetInventoryItemChannelSKUs",
        "description": "Use this call to get stockitem channel skus\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetInventoryItemChannelSKUs",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "inventoryItemId",
            "in": "query",
            "description": "stockitem id",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StockItemChannelSKU"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/BatchGetInventoryItemChannelSKUs": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "BatchGetInventoryItemChannelSKUs",
        "description": "Use this call to get stock item channel skus for a list of inventory items\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "BatchGetInventoryItemChannelSKUs",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Inventory_BatchGetInventoryItemChannelSKUsRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_BatchGetInventoryItemChannelSKUsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StockItemChannelSkuResponse"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/GetInventoryItemChannelSKUsWithLocation": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "GetInventoryItemChannelSKUsWithLocation",
        "description": "Use this call to retrieve all stock item channel sku's with location for a given channel sku RowId\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetInventoryItemChannelSKUsWithLocation",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "channelSKURowId",
            "in": "query",
            "description": "ChannelSKU record Id",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StockItemChannelSKUWithLocation"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/UpdateInventoryItemChannelSKUs": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "UpdateInventoryItemChannelSKUs",
        "description": "Update inventory Channel SKU's properties, such as Max Listed Quantity\n<b>Permissions Required: </b> GlobalPermissions.Inventory.Stock.StockWrite.ChangeStockItemDetailsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>250</b></span> / minute",
        "operationId": "UpdateInventoryItemChannelSKUs",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_UpdateInventoryItemChannelSKUsRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_UpdateInventoryItemChannelSKUsRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/UpdateInventoryItemChannelSKUsWithLocation": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "UpdateInventoryItemChannelSKUsWithLocation",
        "description": "Update inventory Channel SKU's with location properties, such as Max Listed Quantity\n<b>Permissions Required: </b> GlobalPermissions.Inventory.Stock.StockWrite.ChangeStockItemDetailsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "UpdateInventoryItemChannelSKUsWithLocation",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_UpdateInventoryItemChannelSKUsWithLocationRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_UpdateInventoryItemChannelSKUsWithLocationRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/CreateInventoryItemChannelSKUs": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "CreateInventoryItemChannelSKUs",
        "description": "Use this call to create stockitem channel skus\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "CreateInventoryItemChannelSKUs",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_CreateInventoryItemChannelSKUsRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_CreateInventoryItemChannelSKUsRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/DeleteInventoryItemChannelSKUs": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "DeleteInventoryItemChannelSKUs",
        "description": "Use this call to delete stockitem channel skus\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "DeleteInventoryItemChannelSKUs",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_DeleteInventoryItemChannelSKUsRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_DeleteInventoryItemChannelSKUsRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/IsInventoryItemChannelSKULinked": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "IsInventoryItemChannelSKULinked",
        "description": "Use this call to check if ChannelSKU is linked\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>250</b></span> / minute",
        "operationId": "IsInventoryItemChannelSKULinked",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "channelSKU",
            "in": "query",
            "description": "Product Channel SKU",
            "type": "string"
          },
          {
            "name": "source",
            "in": "query",
            "description": "ChannelName/Source (e.g. EBAY)",
            "type": "string"
          },
          {
            "name": "subSource",
            "in": "query",
            "description": "Subsource (e.g. EBAY1)",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/UnlinkChannelListing": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "UnlinkChannelListing",
        "description": "Use this call to unlink  inventory listing from inventory item\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "UnlinkChannelListing",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_UnlinkChannelListingRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_UnlinkChannelListingRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/GetInventoryItemAuditTrail": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "GetInventoryItemAuditTrail",
        "description": "Use this call to get StockItem AuditTrail\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>250</b></span> / minute",
        "operationId": "GetInventoryItemAuditTrail",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "inventoryItemId",
            "in": "query",
            "description": "StockItem unique identifier",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StockItemAuditTrail"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/GetInventoryItemAuditTrailPaged": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "GetInventoryItemAuditTrailPaged",
        "description": "Use this call to retrieve StockItem AuditTrail list by filters\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetInventoryItemAuditTrailPaged",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Inventory_GetInventoryItemAuditTrailPagedRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_GetInventoryItemAuditTrailPagedRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResult_StockItemAuditTrail"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/GetInventoryItemBatchInformation": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "GetInventoryItemBatchInformation",
        "description": "Used to get the batch information of a specific item\n<b>Permissions Required: </b> GlobalPermissions.Inventory.Stock.StockReadNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetInventoryItemBatchInformation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Inventory_GetInventoryItemBatchInformationRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_GetInventoryItemBatchInformationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StockItemBatch"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/GetInventoryItemBatchInformationByIds": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "GetInventoryItemBatchInformationByIds",
        "description": "\n<b>Permissions Required: </b> GlobalPermissions.Inventory.Stock.StockReadNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetInventoryItemBatchInformationByIds",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Inventory_GetInventoryItemBatchInformationByIdsRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_GetInventoryItemBatchInformationByIdsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetInventoryItemBatchInformationByIdsResponse"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/HasStockItemStockLevel": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "HasStockItemStockLevel",
        "description": "Used to check has stock item stock level or not\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "HasStockItemStockLevel",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Inventory_HasStockItemStockLevelRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_HasStockItemStockLevelRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HasStockItemStockLevelResponse"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/UpdateBatchDetails": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "UpdateBatchDetails",
        "description": "Used to update batch details for stock item\n<b>Permissions Required: </b> GlobalPermissions.Inventory.Stock.StockWrite.ChangeStockItemDetailsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "UpdateBatchDetails",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_UpdateBatchDetailsRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_UpdateBatchDetailsRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/GetInventoryItemImages": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "GetInventoryItemImages",
        "description": "Use this call to Get inventory item images\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>250</b></span> / minute",
        "operationId": "GetInventoryItemImages",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "inventoryItemId",
            "in": "query",
            "description": "Id of StockItem",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StockItemImage"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/GetStockItemIdsBySKU": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "GetStockItemIdsBySKU",
        "description": "Use this call to Get inventory item images\n<b>Permissions Required: </b> GlobalPermissions.Inventory.Stock.StockReadNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>250</b></span> / minute",
        "operationId": "GetStockItemIdsBySKU",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Inventory_GetStockItemIdsBySKURequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_GetStockItemIdsBySKURequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetStockItemIdsBySKU"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/GetImagesInBulk": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "GetImagesInBulk",
        "description": "Use this call to Get inventory item images\n<b>Permissions Required: </b> GlobalPermissions.Inventory.Stock.StockReadNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetImagesInBulk",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Inventory_GetImagesInBulkRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_GetImagesInBulkRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetImagesInBulkResponse"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/SetInventoryItemImageAsMain": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "SetInventoryItemImageAsMain",
        "description": "Use this call to update inventory item main image\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "SetInventoryItemImageAsMain",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_SetInventoryItemImageAsMainRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_SetInventoryItemImageAsMainRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/UploadImagesToInventoryItem": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "UploadImagesToInventoryItem",
        "description": "Use this call to upload images from Uploader to StockItem\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "UploadImagesToInventoryItem",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Inventory_UploadImagesToInventoryItemRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_UploadImagesToInventoryItemRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PictureSource"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/UpdateImages": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "UpdateImages",
        "description": "Update properties on images\n<b>Permissions Required: </b> GlobalPermissions.Inventory.Stock.StockWrite.ChangeStockItemDetailsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "UpdateImages",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_UpdateImagesRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_UpdateImagesRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/DeleteImagesFromInventoryItem": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "DeleteImagesFromInventoryItem",
        "description": "Use this call to delete images from inventory items\n<b>Permissions Required: </b> GlobalPermissions.Inventory.Stock.StockWrite.ChangeStockItemDetailsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "DeleteImagesFromInventoryItem",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_DeleteImagesFromInventoryItemRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_DeleteImagesFromInventoryItemRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/GetCategories": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "GetCategories",
        "description": "Use this call to get categories\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetCategories",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LinnworksCategory"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/GetInventoryBatchTypes": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "GetInventoryBatchTypes",
        "description": "Use this call to get available inventory batch types\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetInventoryBatchTypes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "format": "int32",
                "type": "integer"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/CreateCategory": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "CreateCategory",
        "description": "Use this call to create new category\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "CreateCategory",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Inventory_CreateCategoryRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_CreateCategoryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LinnworksCategory"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/UpdateCategory": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "UpdateCategory",
        "description": "Use this call to update category name\n<b>Permissions Required: </b> GlobalPermissions.Inventory.Stock.StockWrite.ChangeStockItemDetailsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "UpdateCategory",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_UpdateCategoryRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_UpdateCategoryRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/DeleteCategoryById": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "DeleteCategoryById",
        "description": "Use this call to delete category by id.\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "DeleteCategoryById",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_DeleteCategoryByIdRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_DeleteCategoryByIdRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/GetCountryCodes": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "GetCountryCodes",
        "description": "Use this call to get all country codes from ebay channel\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetCountryCodes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/GetCountries": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "GetCountries",
        "description": "Use this call to get list of all countries\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetCountries",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Country"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/CreateCountries": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "CreateCountries",
        "description": "Use this call to create new countries\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "CreateCountries",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_CreateCountriesRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_CreateCountriesRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/UpdateCountries": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "UpdateCountries",
        "description": "Use this call to udpate countries\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "UpdateCountries",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_UpdateCountriesRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_UpdateCountriesRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/DeleteCountries": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "DeleteCountries",
        "description": "Use this call to delete countries\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "DeleteCountries",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_DeleteCountriesRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_DeleteCountriesRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/CreateCountryRegions": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "CreateCountryRegions",
        "description": "Create regions for country\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "CreateCountryRegions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Inventory_CreateCountryRegionsRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_CreateCountryRegionsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateCountryRegionsResponse"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/UpdateCountryRegions": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "UpdateCountryRegions",
        "description": "Update regions for country\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "UpdateCountryRegions",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_UpdateCountryRegionsRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_UpdateCountryRegionsRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/GetStockLocations": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "GetStockLocations",
        "description": "Use this call to get all stock locations\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetStockLocations",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StockLocation"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/IsOwnedStockLocation": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "IsOwnedStockLocation",
        "description": "Checks whether a location is FBA or has an enabled inventory update import\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "IsOwnedStockLocation",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "locationId",
            "in": "query",
            "description": "Location ID",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/GetInventoryItemLocations": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "GetInventoryItemLocations",
        "description": "Use this call to get stock item locations bin/rack\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>250</b></span> / minute",
        "operationId": "GetInventoryItemLocations",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "inventoryItemId",
            "in": "query",
            "description": "Stock item ID",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StockItemLocation"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/AddItemLocations": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "AddItemLocations",
        "description": "Use this call to add stock item locations bin/rack\n<b>Permissions Required: </b> GlobalPermissions.Inventory.Stock.StockWrite.ChangeStockItemBinRackNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "AddItemLocations",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_AddItemLocationsRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_AddItemLocationsRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/UpdateItemLocations": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "UpdateItemLocations",
        "description": "Use this call to update stock item locations bin/rack\n<b>Permissions Required: </b> GlobalPermissions.Inventory.Stock.StockWrite.ChangeStockItemBinRackNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "UpdateItemLocations",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_UpdateItemLocationsRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_UpdateItemLocationsRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/DeleteItemLocations": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "DeleteItemLocations",
        "description": "Use this call to delete stock item locations bin/rack\n<b>Permissions Required: </b> GlobalPermissions.Inventory.Stock.StockWrite.ChangeStockItemBinRackNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "DeleteItemLocations",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_DeleteItemLocationsRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_DeleteItemLocationsRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/GetInventoryItemCompositions": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "GetInventoryItemCompositions",
        "description": "Use this call to get all StockItem Compositions\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>250</b></span> / minute",
        "operationId": "GetInventoryItemCompositions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "inventoryItemId",
            "in": "query",
            "description": "Id of StockItem",
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "getFullDetail",
            "in": "query",
            "description": "Indicate if the method has to be recursive, going throw inner composites, getting only real items",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StockItemComposition"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/GetInventoryItemsCompositionByIds": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "GetInventoryItemsCompositionByIds",
        "description": "Use this call to get all StockItem Compositions\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>250</b></span> / minute",
        "operationId": "GetInventoryItemsCompositionByIds",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Inventory_GetInventoryItemsCompositionByIdsRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_GetInventoryItemsCompositionByIdsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetInventoryItemsCompositionByIdsResponse"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/CreateInventoryItemCompositions": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "CreateInventoryItemCompositions",
        "description": "Use this call to create compositions for stockItem\n<b>Permissions Required: </b> GlobalPermissions.Inventory.Stock.StockWrite.ChangeStockItemDetailsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "CreateInventoryItemCompositions",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_CreateInventoryItemCompositionsRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_CreateInventoryItemCompositionsRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/UpdateInventoryItemCompositions": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "UpdateInventoryItemCompositions",
        "description": "Use this call to update stockItem compositions\n<b>Permissions Required: </b> GlobalPermissions.Inventory.Stock.StockWrite.ChangeStockItemDetailsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "UpdateInventoryItemCompositions",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_UpdateInventoryItemCompositionsRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_UpdateInventoryItemCompositionsRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/DeleteInventoryItemCompositions": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "DeleteInventoryItemCompositions",
        "description": "Use this call to delete stockItem compositions\n<b>Permissions Required: </b> GlobalPermissions.Inventory.Stock.StockWrite.ChangeStockItemDetailsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "DeleteInventoryItemCompositions",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_DeleteInventoryItemCompositionsRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_DeleteInventoryItemCompositionsRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/GetInventoryItemExtendedProperties": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "GetInventoryItemExtendedProperties",
        "description": "Use this call to get stockitem Extended Properties\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>250</b></span> / minute",
        "operationId": "GetInventoryItemExtendedProperties",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Inventory_GetInventoryItemExtendedPropertiesRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_GetInventoryItemExtendedPropertiesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StockItemExtendedProperty"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/CreateInventoryItemExtendedProperties": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "CreateInventoryItemExtendedProperties",
        "description": "Use this call to create stockitem Extended Properties\n<b>Permissions Required: </b> GlobalPermissions.Inventory.Stock.StockWrite.ChangeStockItemDetailsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>250</b></span> / minute",
        "operationId": "CreateInventoryItemExtendedProperties",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_CreateInventoryItemExtendedPropertiesRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_CreateInventoryItemExtendedPropertiesRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/UpdateInventoryItemExtendedProperties": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "UpdateInventoryItemExtendedProperties",
        "description": "Use this call to update stockitem Extended Properties\n<b>Permissions Required: </b> GlobalPermissions.Inventory.Stock.StockWrite.ChangeStockItemDetailsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "UpdateInventoryItemExtendedProperties",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_UpdateInventoryItemExtendedPropertiesRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_UpdateInventoryItemExtendedPropertiesRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/DeleteInventoryItemExtendedProperties": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "DeleteInventoryItemExtendedProperties",
        "description": "Use this call to delete stockitem Extended Properties\n<b>Permissions Required: </b> GlobalPermissions.Inventory.Stock.StockWrite.ChangeStockItemDetailsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>250</b></span> / minute",
        "operationId": "DeleteInventoryItemExtendedProperties",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_DeleteInventoryItemExtendedPropertiesRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_DeleteInventoryItemExtendedPropertiesRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/GetInventoryItemTitles": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "GetInventoryItemTitles",
        "description": "Use this call to get stockitem Titles\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>250</b></span> / minute",
        "operationId": "GetInventoryItemTitles",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "inventoryItemId",
            "in": "query",
            "description": "stockitem id",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StockItemTitle"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/CreateInventoryItemTitles": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "CreateInventoryItemTitles",
        "description": "Use this call to create stockitem Titles\n<b>Permissions Required: </b> GlobalPermissions.Inventory.Stock.StockWrite.ChangeStockItemDetailsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "CreateInventoryItemTitles",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_CreateInventoryItemTitlesRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_CreateInventoryItemTitlesRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/UpdateInventoryItemTitles": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "UpdateInventoryItemTitles",
        "description": "Use this call to update stockitem Titles\n<b>Permissions Required: </b> GlobalPermissions.Inventory.Stock.StockWrite.ChangeStockItemDetailsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "UpdateInventoryItemTitles",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_UpdateInventoryItemTitlesRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_UpdateInventoryItemTitlesRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/DeleteInventoryItemTitles": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "DeleteInventoryItemTitles",
        "description": "Use this call to delete stockitem Titles\n<b>Permissions Required: </b> GlobalPermissions.Inventory.Stock.StockWrite.ChangeStockItemDetailsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "DeleteInventoryItemTitles",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_DeleteInventoryItemTitlesRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_DeleteInventoryItemTitlesRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/GetSuppliers": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "GetSuppliers",
        "description": "Use this call to retrieve list of all Suppliers' names\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetSuppliers",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Supplier"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/GetSupplierDetails": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "GetSupplierDetails",
        "description": "Use this call to retrieve details of one Supplier\n<b>Permissions Required: </b> GlobalPermissions.Inventory.InventorySettings.SuppliersNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetSupplierDetails",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "supplierId",
            "in": "query",
            "description": "Supplier ID",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Supplier"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/AddSupplier": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "AddSupplier",
        "description": "Use this call to create a new supplier\n<b>Permissions Required: </b> GlobalPermissions.Inventory.InventorySettings.SuppliersNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "AddSupplier",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Inventory_AddSupplierRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_AddSupplierRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Supplier"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/UpdateSupplier": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "UpdateSupplier",
        "description": "Use this call to update supplier\n<b>Permissions Required: </b> GlobalPermissions.Inventory.InventorySettings.SuppliersNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "UpdateSupplier",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_UpdateSupplierRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_UpdateSupplierRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/DeleteSuppliers": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "DeleteSuppliers",
        "description": "Use this call delete Supplied by Id\r\n<param name=\"suppliersIds\">List of Supplier IDs</param>\n<b>Permissions Required: </b> GlobalPermissions.Inventory.InventorySettings.SuppliersNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "DeleteSuppliers",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_DeleteSuppliersRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_DeleteSuppliersRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/GetStockSupplierStat": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "GetStockSupplierStat",
        "description": "Use this call to retrieve report about \"item supplier stat\"\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>250</b></span> / minute",
        "operationId": "GetStockSupplierStat",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "inventoryItemId",
            "in": "query",
            "description": "Used to specify report stock item id",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StockItemSupplierStat"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/GetStockSupplierStatsBulk": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "GetStockSupplierStatsBulk",
        "description": "Use this call to retrieve report about \"item supplier stat\"\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetStockSupplierStatsBulk",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "inventoryItemIds",
            "in": "query",
            "description": "Used to specify report stock item ids",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StockItemSupplierStat"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/CreateStockSupplierStat": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "CreateStockSupplierStat",
        "description": "Use this call to create item supplier stat\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "CreateStockSupplierStat",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_CreateStockSupplierStatRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_CreateStockSupplierStatRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/UpdateStockSupplierStat": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "UpdateStockSupplierStat",
        "description": "Use this call to update item supplier stat\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "UpdateStockSupplierStat",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_UpdateStockSupplierStatRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_UpdateStockSupplierStatRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/DeleteStockSupplierStat": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "DeleteStockSupplierStat",
        "description": "Use this call to delete item supplier stat\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "DeleteStockSupplierStat",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_DeleteStockSupplierStatRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_DeleteStockSupplierStatRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/GetInventoryItemPrices": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "GetInventoryItemPrices",
        "description": "Use this call to get stock item prices by channel\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>250</b></span> / minute",
        "operationId": "GetInventoryItemPrices",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "inventoryItemId",
            "in": "query",
            "description": "Stock item id",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StockItemPrice"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Inventory/CreateInventoryItemPrices": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "CreateInventoryItemPrices",
        "description": "Use this call to create stock item prices for a specific channel\n<b>Permissions Required: </b> GlobalPermissions.Inventory.Stock.StockWrite.ChangeStockItemDetailsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>250</b></span> / minute",
        "operationId": "CreateInventoryItemPrices",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Inventory_CreateInventoryItemPricesRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory_CreateInventoryItemPricesRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    }
  },
  "definitions": {
    "Inventory_UpdateInventoryItemPricesRequest": {
      "type": "object",
      "properties": {
        "inventoryItemPrices": {
          "description": "List of stock item prices to update",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StockItemPrice"
          }
        }
      }
    },
    "StockItemPrice": {
      "type": "object",
      "properties": {
        "Rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StockItemPricingRule"
          }
        },
        "pkRowId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Source": {
          "type": "string"
        },
        "SubSource": {
          "type": "string"
        },
        "Price": {
          "format": "double",
          "type": "number"
        },
        "Tag": {
          "type": "string"
        },
        "UpdateStatus": {
          "enum": [
            "NoChange",
            "Pending",
            "SentNotConfirmed",
            "Success",
            "Error"
          ],
          "type": "string"
        },
        "StockItemId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "StockItemIntId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "StockItemPricingRule": {
      "type": "object",
      "properties": {
        "pkRowId": {
          "format": "int32",
          "type": "integer"
        },
        "fkStockPricingId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Type": {
          "type": "string"
        },
        "LowerBound": {
          "format": "int32",
          "type": "integer"
        },
        "Value": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "Inventory_DeleteInventoryItemPricesRequest": {
      "type": "object",
      "properties": {
        "inventoryItemPriceIds": {
          "description": "List of stock item prices",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        }
      }
    },
    "Inventory_CreateInventoryItemPricingRulesRequest": {
      "type": "object",
      "properties": {
        "rules": {
          "description": "List of stock item pricing rules",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StockItemPricingRule"
          }
        }
      }
    },
    "Inventory_DeleteInventoryItemPricingRulesRequest": {
      "type": "object",
      "properties": {
        "pricingRuleIds": {
          "description": "List of stock item pricing rule ids to delete",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        }
      }
    },
    "Inventory_UpdateInventoryItemPricingRulesRequest": {
      "type": "object",
      "properties": {
        "rules": {
          "description": "List of stock item pricing rules to update",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StockItemPricingRule"
          }
        }
      }
    },
    "StockItemDescription": {
      "type": "object",
      "properties": {
        "pkRowId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Source": {
          "type": "string"
        },
        "SubSource": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "StockItemId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "StockItemIntId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Inventory_CreateInventoryItemDescriptionsRequest": {
      "type": "object",
      "properties": {
        "inventoryItemDescriptions": {
          "description": "list of stockitem Descriptions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StockItemDescription"
          }
        }
      }
    },
    "Inventory_UpdateInventoryItemDescriptionsRequest": {
      "type": "object",
      "properties": {
        "inventoryItemDescriptions": {
          "description": "list of stockitem Descriptions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StockItemDescription"
          }
        }
      }
    },
    "Inventory_DeleteInventoryItemDescriptionsRequest": {
      "type": "object",
      "properties": {
        "inventoryItemDescriptionIds": {
          "description": "list of stockitem Descriptions",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        }
      }
    },
    "Inventory_GetStockItemLabelsRequest": {
      "type": "object",
      "properties": {
        "selectedRegions": {
          "description": "Row numbers to retrieve item ids for",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tuple_Int32_Int32"
          }
        },
        "token": {
          "format": "uuid",
          "description": "Search Token",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "location": {
          "format": "uuid",
          "description": "Location id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "Tuple_Int32_Int32": {
      "type": "object",
      "properties": {
        "Item1": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "Item2": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "StockItemLabel": {
      "type": "object",
      "properties": {
        "StockItemId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ItemNumber": {
          "type": "string"
        },
        "ItemTitle": {
          "type": "string"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer"
        },
        "BinRack": {
          "type": "string"
        },
        "BatchNumber": {
          "type": "string"
        },
        "BatchInventoryId": {
          "format": "int32",
          "type": "integer"
        },
        "LocationId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "StockItemIntId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "StockItemBatch": {
      "type": "object",
      "properties": {
        "BatchId": {
          "format": "int32",
          "type": "integer"
        },
        "SKU": {
          "type": "string"
        },
        "InventoryTrackingType": {
          "format": "int32",
          "type": "integer"
        },
        "StockItemId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "BatchNumber": {
          "type": "string"
        },
        "ExpiresOn": {
          "format": "date-time",
          "type": "string"
        },
        "SellBy": {
          "format": "date-time",
          "type": "string"
        },
        "Inventory": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StockItemBatchInventory"
          }
        },
        "IsDeleted": {
          "type": "boolean"
        }
      }
    },
    "StockItemBatchInventory": {
      "type": "object",
      "properties": {
        "BatchInventoryId": {
          "format": "int32",
          "type": "integer"
        },
        "BatchId": {
          "format": "int32",
          "type": "integer"
        },
        "StockLocationId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "BinRack": {
          "type": "string"
        },
        "PrioritySequence": {
          "format": "int32",
          "type": "integer"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer"
        },
        "StockValue": {
          "format": "double",
          "type": "number"
        },
        "StartQuantity": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "PickedQuantity": {
          "format": "int32",
          "type": "integer"
        },
        "BatchStatus": {
          "type": "string"
        },
        "IsDeleted": {
          "type": "boolean"
        },
        "WarehouseBinrackStandardType": {
          "format": "int32",
          "type": "integer"
        },
        "WarehouseBinrackTypeName": {
          "type": "string"
        },
        "InTransfer": {
          "format": "int32",
          "type": "integer"
        },
        "BinRackId": {
          "format": "int32",
          "type": "integer"
        },
        "WarehouseBinrackTypeId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "GetBatchInventoryByIdRequest": {
      "type": "object",
      "properties": {
        "BatchInventoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "LoadRelatedInventoryLines": {
          "type": "boolean"
        }
      }
    },
    "GetBatchInventoryByIdResponse": {
      "type": "object",
      "properties": {
        "Batches": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StockItemBatch"
          }
        }
      }
    },
    "Inventory_GetStockItemBatchesByLocationRequest": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/GetStockItemBatchesByLocationRequest",
          "description": "Contains Guid StockItemId, Guid LocationId, bool OnlyAvailable"
        }
      }
    },
    "GetStockItemBatchesByLocationRequest": {
      "type": "object",
      "properties": {
        "StockItemId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "LocationId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "OnlyAvailable": {
          "type": "boolean"
        }
      }
    },
    "GetStockItemBatchesByLocationResponse": {
      "type": "object",
      "properties": {
        "Batches": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StockItemBatch"
          }
        }
      }
    },
    "Inventory_GetBatchAuditRequest": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/GetBatchAuditRequest",
          "description": ""
        }
      }
    },
    "GetBatchAuditRequest": {
      "type": "object",
      "properties": {
        "ItemId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "GetBatchAuditResponse": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StockItemBatchAudit"
          }
        }
      }
    },
    "StockItemBatchAudit": {
      "type": "object",
      "properties": {
        "BatchId": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "BatchInventoryId": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "QuantityDelta": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "StockValueDelta": {
          "format": "double",
          "type": "number",
          "readOnly": true
        },
        "ChangeNote": {
          "type": "string",
          "readOnly": true
        },
        "Username": {
          "type": "string",
          "readOnly": true
        },
        "ChangeDate": {
          "format": "date-time",
          "type": "string",
          "readOnly": true
        },
        "BinRack": {
          "type": "string",
          "readOnly": true
        },
        "BatchNumber": {
          "type": "string",
          "readOnly": true
        },
        "Location": {
          "type": "string",
          "readOnly": true
        },
        "fkJobId": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "OrderId": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "Inventory_DeleteBatchInventoryInBulkRequest": {
      "type": "object",
      "properties": {
        "batchInventoryIds": {
          "description": "List of batch inventory ids",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        }
      }
    },
    "Inventory_DeleteBatchesByStockItemIdRequest": {
      "type": "object",
      "properties": {
        "stockItemId": {
          "format": "uuid",
          "description": "Stock item unique identifier",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "Inventory_UpdateBatchesWithInventoryRequest": {
      "type": "object",
      "properties": {
        "batches": {
          "description": "List of batches to update",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StockItemBatch"
          }
        }
      }
    },
    "Inventory_CreateBatchesRequest": {
      "type": "object",
      "properties": {
        "batches": {
          "description": "List of batches to create",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StockItemBatch"
          }
        }
      }
    },
    "Inventory_UpdateCompositeParentStockLevelRequest": {
      "type": "object",
      "properties": {
        "stockItemId": {
          "format": "uuid",
          "description": "Stock item id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "locationId": {
          "format": "uuid",
          "description": "Stock location id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "fieldValue": {
          "format": "int32",
          "description": "Stock tracked status",
          "type": "integer"
        }
      }
    },
    "StockItemEbayCompatibility": {
      "type": "object",
      "properties": {
        "FkStockItemId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "FkCompatibilityListId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "SKU": {
          "type": "string"
        },
        "CompatibilityNotes": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        },
        "IncludeYears": {
          "type": "string"
        },
        "ExcludeYears": {
          "type": "string"
        },
        "Culture": {
          "type": "string"
        },
        "EbayCompitibilityType": {
          "enum": [
            "KType",
            "ePID"
          ],
          "type": "string"
        }
      }
    },
    "Inventory_InsertUpdateEbayCompatibilityListRequest": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/InsertUpdateEbayCompatibilityListRequest",
          "description": "List of Ebay Compatibility"
        }
      }
    },
    "InsertUpdateEbayCompatibilityListRequest": {
      "type": "object",
      "properties": {
        "EbayCompatibilityList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StockItemEbayCompatibility"
          }
        }
      }
    },
    "InsertUpdateEbayCompatibilityListResponse": {
      "type": "object",
      "properties": {
        "EbayCompatibilityList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StockItemEbayCompatibility"
          }
        }
      }
    },
    "Inventory_DeleteEbayCompatibilityListRequest": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/DeleteEbayCompatibilityListRequest",
          "description": "List of Ebay Compatibility"
        }
      }
    },
    "DeleteEbayCompatibilityListRequest": {
      "type": "object",
      "properties": {
        "EbayCompatibilityList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StockItemEbayCompatibility"
          }
        }
      }
    },
    "DeleteEbayCompatibilityListResponse": {
      "type": "object",
      "properties": {
        "EbayCompatibilityList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StockItemEbayCompatibility"
          }
        }
      }
    },
    "GetScrapCategoriesResponse": {
      "type": "object",
      "properties": {
        "ScrapCategories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScrapCategory"
          }
        }
      }
    },
    "ScrapCategory": {
      "type": "object",
      "properties": {
        "CategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "CategoryName": {
          "type": "string"
        }
      }
    },
    "Inventory_AddScrapCategoriesRequest": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/AddScrapCategoriesRequest",
          "description": "Object with List of scrap category names"
        }
      }
    },
    "AddScrapCategoriesRequest": {
      "type": "object",
      "properties": {
        "CategoryNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AddScrapCategoriesResponse": {
      "type": "object",
      "properties": {
        "ScrapCategories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScrapCategory"
          }
        }
      }
    },
    "Inventory_DeleteScrapCategoriesRequest": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/DeleteScrapCategoriesRequest",
          "description": "Object with List of scrap category ids"
        }
      }
    },
    "DeleteScrapCategoriesRequest": {
      "type": "object",
      "properties": {
        "CategoryIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        }
      }
    },
    "Inventory_UpdateScrapCategoriesRequest": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/UpdateScrapCategoriesRequest",
          "description": "Object with List of scrap categories"
        }
      }
    },
    "UpdateScrapCategoriesRequest": {
      "type": "object",
      "properties": {
        "Categories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScrapCategory"
          }
        }
      }
    },
    "Inventory_GetScrapHistoryRequest": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/GetScrapHistoryRequest"
        }
      }
    },
    "GetScrapHistoryRequest": {
      "type": "object",
      "properties": {
        "PageNumber": {
          "format": "int32",
          "type": "integer"
        },
        "EntriesPerPage": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "GetScrapHistoryResponse": {
      "type": "object",
      "properties": {
        "ScrapHistory": {
          "$ref": "#/definitions/GenericPagedResult_ScrapItem"
        }
      }
    },
    "GenericPagedResult_ScrapItem": {
      "type": "object",
      "properties": {
        "PageNumber": {
          "format": "int32",
          "type": "integer"
        },
        "EntriesPerPage": {
          "format": "int32",
          "type": "integer"
        },
        "TotalEntries": {
          "format": "int64",
          "type": "integer"
        },
        "TotalPages": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScrapItem"
          }
        }
      }
    },
    "ScrapItem": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "StockItemId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ItemNumber": {
          "type": "string"
        },
        "ItemTitle": {
          "type": "string"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer"
        },
        "CategoryName": {
          "type": "string"
        },
        "ScrapReason": {
          "type": "string"
        },
        "TotalCost": {
          "format": "double",
          "type": "number"
        },
        "UserName": {
          "type": "string"
        },
        "CreatedDate": {
          "format": "date-time",
          "type": "string"
        },
        "StockLocationId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "Inventory_AddScrapItemRequest": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/AddScrapItemRequest"
        }
      }
    },
    "AddScrapItemRequest": {
      "type": "object",
      "properties": {
        "ScrapItem": {
          "$ref": "#/definitions/ScrapItem"
        },
        "LocationId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "IgnoreConsumption": {
          "description": "Consumption should not be recorded for this scrap request",
          "type": "boolean"
        }
      }
    },
    "AddScrapItemResponse": {
      "type": "object",
      "properties": {
        "ScrapItem": {
          "$ref": "#/definitions/ScrapItem"
        }
      }
    },
    "Inventory_ScrapBatchedItemRequest": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/ScrapBatchedItemRequest"
        }
      }
    },
    "ScrapBatchedItemRequest": {
      "type": "object",
      "properties": {
        "ScrapItem": {
          "$ref": "#/definitions/ScrapItem"
        },
        "LocationId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "BatchInventoryId": {
          "format": "int32",
          "type": "integer"
        },
        "IgnoreConsumption": {
          "description": "Consumption should not be recorded for this scrap request",
          "type": "boolean"
        }
      }
    },
    "ScrapBatchedItemResponse": {
      "type": "object",
      "properties": {
        "ScrapItem": {
          "$ref": "#/definitions/ScrapItem"
        }
      }
    },
    "BulkScrapBatchedItemsRequest": {
      "type": "object",
      "properties": {
        "LocationId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ScrapItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScrapItemExtended"
          }
        }
      }
    },
    "ScrapItemExtended": {
      "type": "object",
      "properties": {
        "pkScrapId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "BatchInventoryId": {
          "format": "int32",
          "type": "integer"
        },
        "fkStockItemId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer"
        },
        "ScrapCategory": {
          "type": "string"
        },
        "ScrapReason": {
          "type": "string"
        }
      }
    },
    "Inventory_GetProductIdentifiersByStockItemIdRequest": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/GetProductIdentifiersByStockItemIdRequest",
          "description": "Object with StockItemId"
        }
      }
    },
    "GetProductIdentifiersByStockItemIdRequest": {
      "type": "object",
      "properties": {
        "StockItemId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "GetProductIdentifiersByStockItemIdResponse": {
      "type": "object",
      "properties": {
        "ProductIdentifiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StockItemProductIdentifier"
          }
        }
      }
    },
    "StockItemProductIdentifier": {
      "type": "object",
      "properties": {
        "PkId": {
          "format": "int64",
          "type": "integer"
        },
        "StockItemId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Type": {
          "enum": [
            "EAN",
            "MPN",
            "GTIN",
            "UPC",
            "ASIN",
            "ISBN",
            "Google",
            "CustomID",
            "PZN",
            "GCID",
            "ePID"
          ],
          "type": "string"
        },
        "Value": {
          "type": "string"
        },
        "ModifiedDate": {
          "format": "date-time",
          "type": "string"
        },
        "ModifiedUserName": {
          "type": "string"
        },
        "Site": {
          "type": "string"
        }
      }
    },
    "Inventory_AddProductIdentifiersRequest": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/AddProductIdentifiersRequest",
          "description": "Object with collection of product identifiers"
        }
      }
    },
    "AddProductIdentifiersRequest": {
      "type": "object",
      "properties": {
        "ProductIdentifiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StockItemProductIdentifier"
          }
        }
      }
    },
    "Inventory_UpdateProductIdentifiersRequest": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/UpdateProductIdentifiersRequest",
          "description": "Object with collection of product identifiers"
        }
      }
    },
    "UpdateProductIdentifiersRequest": {
      "type": "object",
      "properties": {
        "ProductIdentifiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StockItemProductIdentifier"
          }
        }
      }
    },
    "Inventory_DeleteProductIdentifiersRequest": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/DeleteProductIdentifiersRequest",
          "description": "Object with collection of product identifiers"
        }
      }
    },
    "DeleteProductIdentifiersRequest": {
      "type": "object",
      "properties": {
        "ProductIdentifierIds": {
          "type": "array",
          "items": {
            "format": "int64",
            "type": "integer"
          }
        }
      }
    },
    "GetProductIdentifierTypesRequest": {
      "type": "object",
      "properties": {
        "Types": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "GetProductIdentifiersBulkByStockItemIdRequest": {
      "type": "object",
      "properties": {
        "StockItemIds": {
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        }
      }
    },
    "AnyConfig": {
      "type": "object",
      "properties": {
        "SourceVersion": {
          "$ref": "#/definitions/ConfigItem_String"
        },
        "Enabled": {
          "$ref": "#/definitions/ConfigItem_Boolean"
        },
        "ChannelTag": {
          "$ref": "#/definitions/ConfigItem_String"
        },
        "ChannelLocationBinding": {
          "$ref": "#/definitions/ConfigChannelLocationBinding"
        },
        "IsMultiLocation": {
          "$ref": "#/definitions/ConfigItem_Boolean"
        },
        "AutoPopulatedLocations": {
          "$ref": "#/definitions/ConfigItem_Boolean"
        },
        "CanModifyLocationsOnChannel": {
          "$ref": "#/definitions/ConfigItem_Boolean"
        },
        "BopisSupported": {
          "$ref": "#/definitions/ConfigItem_Boolean"
        },
        "ProcessPosOrders": {
          "$ref": "#/definitions/ConfigProperty_Boolean"
        },
        "DespatchNotes": {
          "$ref": "#/definitions/ConfigItem_Boolean"
        },
        "CancellationNotes": {
          "$ref": "#/definitions/ConfigItem_Boolean"
        },
        "AutoRespondCancellationRequests": {
          "$ref": "#/definitions/ConfigItem_Boolean"
        },
        "CancellationResponseType": {
          "$ref": "#/definitions/ConfigPropertySelectionList_SelectStringValueOption_String"
        },
        "RefundNotes": {
          "$ref": "#/definitions/ConfigItem_Boolean"
        },
        "DownloadRefunds": {
          "$ref": "#/definitions/ConfigItem_Boolean"
        },
        "ReturnNotes": {
          "$ref": "#/definitions/ConfigItem_Boolean"
        },
        "DownloadReturns": {
          "$ref": "#/definitions/ConfigItem_Boolean"
        },
        "OrderSaveLocation": {
          "$ref": "#/definitions/ConfigPropertySelectionList_SelectStringValueOption_Guid"
        },
        "OrderSyncDate": {
          "$ref": "#/definitions/ConfigItem_DateTime"
        },
        "OrderCancellationCheckDate": {
          "$ref": "#/definitions/ConfigItem_DateTime"
        },
        "ConfigDiscount": {
          "$ref": "#/definitions/ConfigPropertySelectionList_SelectStringValueOption_String"
        },
        "OrderDownloadErrorCount": {
          "$ref": "#/definitions/ConfigItem_Int32"
        },
        "OrderDownloadGlobalErrorCount": {
          "$ref": "#/definitions/ConfigItem_Int32"
        },
        "OrderDespatchErrorCount": {
          "$ref": "#/definitions/ConfigItem_Int32"
        },
        "OrderDespatchGlobalErrorCount": {
          "$ref": "#/definitions/ConfigItem_Int32"
        },
        "OrderCancellationCheckErrorCount": {
          "$ref": "#/definitions/ConfigItem_Int32"
        },
        "OrderCancellationCheckGlobalErrorCount": {
          "$ref": "#/definitions/ConfigItem_Int32"
        },
        "RmaDownloadErrorCount": {
          "$ref": "#/definitions/ConfigItem_Int32"
        },
        "RmaDownloadGlobalErrorCount": {
          "$ref": "#/definitions/ConfigItem_Int32"
        },
        "HidesHeaderAttributes": {
          "$ref": "#/definitions/ConfigProperty_Boolean"
        },
        "InventorySync": {
          "$ref": "#/definitions/ConfigItem_Boolean"
        },
        "StockLocationBinding": {
          "$ref": "#/definitions/ConfigStockLocationBinding"
        },
        "MaxListed": {
          "$ref": "#/definitions/ConfigItem_Int32"
        },
        "StockPercentage": {
          "$ref": "#/definitions/ConfigItem_Double"
        },
        "EndWhen": {
          "$ref": "#/definitions/ConfigItem_Int32"
        },
        "InvSyncErrorCount": {
          "$ref": "#/definitions/ConfigItem_Int32"
        },
        "PriceChange": {
          "$ref": "#/definitions/ConfigItem_Boolean"
        },
        "PriceChangeErrorCount": {
          "$ref": "#/definitions/ConfigItem_Int32"
        },
        "IsInventorySyncTriggerEnabled": {
          "$ref": "#/definitions/ConfigProperty_Boolean"
        },
        "IsListingScanRunning": {
          "$ref": "#/definitions/ConfigItem_Boolean"
        },
        "ListingScanStartUpdateDate": {
          "$ref": "#/definitions/ConfigItem_DateTime"
        },
        "LastListingUpdateDate": {
          "$ref": "#/definitions/ConfigItem_DateTime"
        },
        "EstimatedInventoryScanComplete": {
          "$ref": "#/definitions/ConfigItem_DateTime"
        },
        "IsHeaderOnly": {
          "type": "boolean",
          "readOnly": true
        },
        "IsHidden": {
          "type": "boolean"
        },
        "DisplayName": {
          "type": "string",
          "readOnly": true
        },
        "DynamicProperties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigItemExternal"
          }
        },
        "ConfigDiscountTyped": {
          "enum": [
            "AllEvenly",
            "ItemsThenPostage",
            "PostageThenItems"
          ],
          "type": "string"
        },
        "PostalServiceMapping": {
          "$ref": "#/definitions/ConfigPostalServiceMapping"
        },
        "PaymentMethodMapping": {
          "$ref": "#/definitions/ConfigPaymentMethodMapping"
        },
        "PkChannelId": {
          "format": "int32",
          "type": "integer"
        },
        "Source": {
          "type": "string",
          "readOnly": true
        },
        "SourceType": {
          "type": "string",
          "readOnly": true
        },
        "FulfillmentServiceEnabled": {
          "type": "boolean",
          "readOnly": true
        },
        "FulfillmentLocation": {
          "format": "uuid",
          "type": "string",
          "readOnly": true,
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigRule"
          },
          "readOnly": true
        },
        "Buttons": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigButton"
          },
          "readOnly": true
        },
        "SubSource": {
          "type": "string"
        },
        "HeaderAuditValues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Channel_Setting_Audit"
          },
          "readOnly": true
        }
      }
    },
    "ConfigItem_String": {
      "type": "object",
      "properties": {
        "pkPropertyId": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "Loaded": {
          "type": "boolean",
          "readOnly": true
        },
        "IsChanged": {
          "type": "boolean",
          "readOnly": true
        },
        "PropertyValue": {
          "type": "string"
        },
        "PropertyType": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ConfigItem_Boolean": {
      "type": "object",
      "properties": {
        "pkPropertyId": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "Loaded": {
          "type": "boolean",
          "readOnly": true
        },
        "IsChanged": {
          "type": "boolean",
          "readOnly": true
        },
        "PropertyValue": {
          "type": "boolean"
        },
        "PropertyType": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ConfigChannelLocationBinding": {
      "type": "object",
      "properties": {
        "Locations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigChannelLocation"
          },
          "readOnly": true
        }
      }
    },
    "ConfigProperty_Boolean": {
      "type": "object",
      "properties": {
        "pkPropertyId": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "Loaded": {
          "type": "boolean",
          "readOnly": true
        },
        "IsChanged": {
          "type": "boolean",
          "readOnly": true
        },
        "PropertyValue": {
          "type": "boolean"
        },
        "PropertyType": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ConfigPropertySelectionList_SelectStringValueOption_String": {
      "type": "object",
      "properties": {
        "OnGetSelectionList": {
          "$ref": "#/definitions/GetSelectionList_SelectStringValueOption"
        },
        "pkPropertyId": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "Loaded": {
          "type": "boolean",
          "readOnly": true
        },
        "IsChanged": {
          "type": "boolean",
          "readOnly": true
        },
        "PropertyValue": {
          "type": "string"
        },
        "PropertyType": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ConfigPropertySelectionList_SelectStringValueOption_Guid": {
      "type": "object",
      "properties": {
        "OnGetSelectionList": {
          "$ref": "#/definitions/GetSelectionList_SelectStringValueOption"
        },
        "Loaded": {
          "type": "boolean",
          "readOnly": true
        },
        "pkPropertyId": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "IsChanged": {
          "type": "boolean",
          "readOnly": true
        },
        "PropertyValue": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "PropertyType": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ConfigItem_DateTime": {
      "type": "object",
      "properties": {
        "pkPropertyId": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "Loaded": {
          "type": "boolean",
          "readOnly": true
        },
        "IsChanged": {
          "type": "boolean",
          "readOnly": true
        },
        "PropertyValue": {
          "format": "date-time",
          "type": "string"
        },
        "PropertyType": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ConfigItem_Int32": {
      "type": "object",
      "properties": {
        "pkPropertyId": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "Loaded": {
          "type": "boolean",
          "readOnly": true
        },
        "IsChanged": {
          "type": "boolean",
          "readOnly": true
        },
        "PropertyValue": {
          "format": "int32",
          "type": "integer"
        },
        "PropertyType": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ConfigStockLocationBinding": {
      "type": "object",
      "properties": {
        "Locations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigStockLocation"
          },
          "readOnly": true
        }
      }
    },
    "ConfigItem_Double": {
      "type": "object",
      "properties": {
        "Loaded": {
          "type": "boolean",
          "readOnly": true
        },
        "pkPropertyId": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "IsChanged": {
          "type": "boolean",
          "readOnly": true
        },
        "PropertyValue": {
          "format": "double",
          "type": "number"
        },
        "PropertyType": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ConfigItemExternal": {
      "type": "object",
      "properties": {
        "ListValues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigItemListItem"
          }
        },
        "ValueType": {
          "enum": [
            "STRING",
            "INT",
            "DOUBLE",
            "BOOLEAN",
            "PASSWORD",
            "LIST",
            "URL",
            "BUTTON"
          ],
          "type": "string"
        },
        "ConfigItemId": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "GroupName": {
          "type": "string"
        },
        "SortOrder": {
          "format": "int32",
          "type": "integer"
        },
        "SelectedValue": {
          "type": "string"
        },
        "RegExValidation": {
          "type": "string"
        },
        "RegExError": {
          "type": "string"
        },
        "MustBeSpecified": {
          "type": "boolean"
        },
        "ReadOnly": {
          "type": "boolean"
        },
        "HidesHeaderAttribute": {
          "type": "boolean"
        }
      }
    },
    "ConfigPostalServiceMapping": {
      "type": "object",
      "properties": {
        "Mapping": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigPostalServiceMappingItem"
          },
          "readOnly": true
        },
        "ChannelServices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChannelPostalService"
          },
          "readOnly": true
        },
        "IsChanged": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "ConfigPaymentMethodMapping": {
      "type": "object",
      "properties": {
        "Mapping": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigPaymentMethodMappingItem"
          },
          "readOnly": true
        },
        "ChannelServices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChannelPaymentMethod"
          },
          "readOnly": true
        },
        "IsChanged": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "ConfigRule": {
      "type": "object",
      "properties": {
        "FieldName": {
          "type": "string"
        },
        "Rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PropertyRule"
          }
        }
      }
    },
    "ConfigButton": {
      "type": "object",
      "properties": {
        "FieldName": {
          "type": "string"
        },
        "GroupName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "FunctionName": {
          "type": "string"
        }
      }
    },
    "Channel_Setting_Audit": {
      "type": "object",
      "properties": {
        "pkAuditId": {
          "format": "int32",
          "type": "integer"
        },
        "fkChannelId": {
          "format": "int32",
          "type": "integer"
        },
        "PropertyName": {
          "type": "string"
        },
        "PropertyValueIs": {
          "type": "string"
        },
        "AuditDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "UserName": {
          "type": "string"
        }
      }
    },
    "ConfigChannelLocation": {
      "type": "object",
      "properties": {
        "pkChannelLocationId": {
          "format": "int32",
          "type": "integer"
        },
        "Identifier": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "ExternalReference": {
          "type": "string"
        },
        "OrderDownloadLocation": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "InventorySyncLocations": {
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "Types": {
          "enum": [
            "Unspecified",
            "Delivery",
            "Collection"
          ],
          "type": "string"
        },
        "Deleted": {
          "type": "boolean"
        },
        "IsFulfilment": {
          "type": "boolean"
        },
        "AdditionalFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "GetSelectionList_SelectStringValueOption": {
      "type": "object",
      "properties": {
        "Method": {
          "$ref": "#/definitions/MethodInfo",
          "readOnly": true
        },
        "Target": {
          "type": "object",
          "readOnly": true
        }
      }
    },
    "ConfigStockLocation": {
      "type": "object",
      "properties": {
        "pkStockLocationId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Deleted": {
          "type": "boolean"
        },
        "fkChannelLocationId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ConfigItemListItem": {
      "type": "object",
      "properties": {
        "Display": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        }
      }
    },
    "ConfigPostalServiceMappingItem": {
      "type": "object",
      "properties": {
        "fkChannelId": {
          "format": "int32",
          "type": "integer"
        },
        "pkRowId": {
          "format": "int32",
          "type": "integer"
        },
        "Tag": {
          "type": "string"
        },
        "fkPostalServiceId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "PostalServiceName": {
          "type": "string"
        },
        "Site": {
          "type": "string"
        },
        "IsChanged": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "ChannelPostalService": {
      "type": "object",
      "properties": {
        "fkChannelId": {
          "format": "int32",
          "type": "integer"
        },
        "pkRowId": {
          "format": "int32",
          "type": "integer"
        },
        "FriendlyName": {
          "type": "string"
        },
        "Tag": {
          "type": "string"
        },
        "Site": {
          "type": "string"
        },
        "IsChanged": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "ConfigPaymentMethodMappingItem": {
      "type": "object",
      "properties": {
        "fkChannelId": {
          "format": "int32",
          "type": "integer"
        },
        "pkRowId": {
          "format": "int32",
          "type": "integer"
        },
        "Tag": {
          "type": "string"
        },
        "fkBankId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "PaymentMethodName": {
          "type": "string"
        },
        "Site": {
          "type": "string"
        },
        "IsChanged": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "ChannelPaymentMethod": {
      "type": "object",
      "properties": {
        "fkChannelId": {
          "format": "int32",
          "type": "integer"
        },
        "pkRowId": {
          "format": "int32",
          "type": "integer"
        },
        "FriendlyName": {
          "type": "string"
        },
        "Tag": {
          "type": "string"
        },
        "Site": {
          "type": "string"
        },
        "IsChanged": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "PropertyRule": {
      "type": "object",
      "properties": {
        "RuleType": {
          "enum": [
            "GreaterThan",
            "GreaterThanOrZero",
            "LessThan",
            "NotEmpty",
            "NotEmptyOrDisabled",
            "Percent",
            "PositiveNumber",
            "Regexp",
            "Enabled",
            "Disabled",
            "DisabledSimple",
            "Action",
            "IsFilledOnce",
            "IsReadOnlyPassword",
            "ListAtLeastOneSelected",
            "ListAtLeastOneOf",
            "Hidden",
            "Shown"
          ],
          "type": "string"
        },
        "Options": {
          "type": "string"
        },
        "DependantField": {
          "type": "string"
        }
      }
    },
    "MethodInfo": {
      "type": "object",
      "properties": {
        "MemberType": {
          "enum": [
            "Constructor",
            "Event",
            "Field",
            "Method",
            "Property",
            "TypeInfo",
            "Custom",
            "NestedType",
            "All"
          ],
          "type": "string",
          "readOnly": true
        },
        "ReturnType": {
          "type": "string",
          "readOnly": true
        },
        "ReturnParameter": {
          "$ref": "#/definitions/ParameterInfo",
          "readOnly": true
        },
        "ReturnTypeCustomAttributes": {
          "$ref": "#/definitions/ICustomAttributeProvider",
          "readOnly": true
        },
        "MethodImplementationFlags": {
          "enum": [
            "CodeTypeMask",
            "IL",
            "Native",
            "OPTIL",
            "Runtime",
            "ManagedMask",
            "Unmanaged",
            "Managed",
            "ForwardRef",
            "PreserveSig",
            "InternalCall",
            "Synchronized",
            "NoInlining",
            "AggressiveInlining",
            "NoOptimization",
            "SecurityMitigations",
            "MaxMethodImplVal"
          ],
          "type": "string",
          "readOnly": true
        },
        "MethodHandle": {
          "type": "object",
          "readOnly": true
        },
        "Attributes": {
          "enum": [
            "MemberAccessMask",
            "PrivateScope",
            "Private",
            "FamANDAssem",
            "Assembly",
            "Family",
            "FamORAssem",
            "Public",
            "Static",
            "Final",
            "Virtual",
            "HideBySig",
            "CheckAccessOnOverride",
            "VtableLayoutMask",
            "ReuseSlot",
            "NewSlot",
            "Abstract",
            "SpecialName",
            "PinvokeImpl",
            "UnmanagedExport",
            "RTSpecialName",
            "ReservedMask",
            "HasSecurity",
            "RequireSecObject"
          ],
          "type": "string",
          "readOnly": true
        },
        "CallingConvention": {
          "enum": [
            "Standard",
            "VarArgs",
            "Any",
            "HasThis",
            "ExplicitThis"
          ],
          "type": "string",
          "readOnly": true
        },
        "IsGenericMethodDefinition": {
          "type": "boolean",
          "readOnly": true
        },
        "ContainsGenericParameters": {
          "type": "boolean",
          "readOnly": true
        },
        "IsGenericMethod": {
          "type": "boolean",
          "readOnly": true
        },
        "IsSecurityCritical": {
          "type": "boolean",
          "readOnly": true
        },
        "IsSecuritySafeCritical": {
          "type": "boolean",
          "readOnly": true
        },
        "IsSecurityTransparent": {
          "type": "boolean",
          "readOnly": true
        },
        "IsPublic": {
          "type": "boolean",
          "readOnly": true
        },
        "IsPrivate": {
          "type": "boolean",
          "readOnly": true
        },
        "IsFamily": {
          "type": "boolean",
          "readOnly": true
        },
        "IsAssembly": {
          "type": "boolean",
          "readOnly": true
        },
        "IsFamilyAndAssembly": {
          "type": "boolean",
          "readOnly": true
        },
        "IsFamilyOrAssembly": {
          "type": "boolean",
          "readOnly": true
        },
        "IsStatic": {
          "type": "boolean",
          "readOnly": true
        },
        "IsFinal": {
          "type": "boolean",
          "readOnly": true
        },
        "IsVirtual": {
          "type": "boolean",
          "readOnly": true
        },
        "IsHideBySig": {
          "type": "boolean",
          "readOnly": true
        },
        "IsAbstract": {
          "type": "boolean",
          "readOnly": true
        },
        "IsSpecialName": {
          "type": "boolean",
          "readOnly": true
        },
        "IsConstructor": {
          "type": "boolean",
          "readOnly": true
        },
        "Name": {
          "type": "string",
          "readOnly": true
        },
        "DeclaringType": {
          "type": "string",
          "readOnly": true
        },
        "ReflectedType": {
          "type": "string",
          "readOnly": true
        },
        "CustomAttributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomAttributeData"
          },
          "readOnly": true
        },
        "MetadataToken": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "Module": {
          "type": "object",
          "readOnly": true
        }
      }
    },
    "ParameterInfo": {
      "type": "object",
      "properties": {
        "ParameterType": {
          "type": "string",
          "readOnly": true
        },
        "Name": {
          "type": "string",
          "readOnly": true
        },
        "HasDefaultValue": {
          "type": "boolean",
          "readOnly": true
        },
        "DefaultValue": {
          "type": "object",
          "readOnly": true
        },
        "RawDefaultValue": {
          "type": "object",
          "readOnly": true
        },
        "Position": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "Attributes": {
          "enum": [
            "None",
            "In",
            "Out",
            "Lcid",
            "Retval",
            "Optional",
            "ReservedMask",
            "HasDefault",
            "HasFieldMarshal",
            "Reserved3",
            "Reserved4"
          ],
          "type": "string",
          "readOnly": true
        },
        "Member": {
          "$ref": "#/definitions/MemberInfo",
          "readOnly": true
        },
        "IsIn": {
          "type": "boolean",
          "readOnly": true
        },
        "IsOut": {
          "type": "boolean",
          "readOnly": true
        },
        "IsLcid": {
          "type": "boolean",
          "readOnly": true
        },
        "IsRetval": {
          "type": "boolean",
          "readOnly": true
        },
        "IsOptional": {
          "type": "boolean",
          "readOnly": true
        },
        "MetadataToken": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "CustomAttributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomAttributeData"
          },
          "readOnly": true
        }
      }
    },
    "ICustomAttributeProvider": {
      "type": "object",
      "properties": {}
    },
    "CustomAttributeData": {
      "type": "object",
      "properties": {
        "AttributeType": {
          "type": "string",
          "readOnly": true
        },
        "Constructor": {
          "$ref": "#/definitions/ConstructorInfo",
          "readOnly": true
        },
        "ConstructorArguments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomAttributeTypedArgument"
          },
          "readOnly": true
        },
        "NamedArguments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomAttributeNamedArgument"
          },
          "readOnly": true
        }
      }
    },
    "MemberInfo": {
      "type": "object",
      "properties": {
        "MemberType": {
          "enum": [
            "Constructor",
            "Event",
            "Field",
            "Method",
            "Property",
            "TypeInfo",
            "Custom",
            "NestedType",
            "All"
          ],
          "type": "string",
          "readOnly": true
        },
        "Name": {
          "type": "string",
          "readOnly": true
        },
        "DeclaringType": {
          "type": "string",
          "readOnly": true
        },
        "ReflectedType": {
          "type": "string",
          "readOnly": true
        },
        "CustomAttributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomAttributeData"
          },
          "readOnly": true
        },
        "MetadataToken": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "Module": {
          "type": "object",
          "readOnly": true
        }
      }
    },
    "ConstructorInfo": {
      "type": "object",
      "properties": {
        "MemberType": {
          "enum": [
            "Constructor",
            "Event",
            "Field",
            "Method",
            "Property",
            "TypeInfo",
            "Custom",
            "NestedType",
            "All"
          ],
          "type": "string",
          "readOnly": true
        },
        "MethodImplementationFlags": {
          "enum": [
            "CodeTypeMask",
            "IL",
            "Native",
            "OPTIL",
            "Runtime",
            "ManagedMask",
            "Unmanaged",
            "Managed",
            "ForwardRef",
            "PreserveSig",
            "InternalCall",
            "Synchronized",
            "NoInlining",
            "AggressiveInlining",
            "NoOptimization",
            "SecurityMitigations",
            "MaxMethodImplVal"
          ],
          "type": "string",
          "readOnly": true
        },
        "MethodHandle": {
          "type": "object",
          "readOnly": true
        },
        "Attributes": {
          "enum": [
            "MemberAccessMask",
            "PrivateScope",
            "Private",
            "FamANDAssem",
            "Assembly",
            "Family",
            "FamORAssem",
            "Public",
            "Static",
            "Final",
            "Virtual",
            "HideBySig",
            "CheckAccessOnOverride",
            "VtableLayoutMask",
            "ReuseSlot",
            "NewSlot",
            "Abstract",
            "SpecialName",
            "PinvokeImpl",
            "UnmanagedExport",
            "RTSpecialName",
            "ReservedMask",
            "HasSecurity",
            "RequireSecObject"
          ],
          "type": "string",
          "readOnly": true
        },
        "CallingConvention": {
          "enum": [
            "Standard",
            "VarArgs",
            "Any",
            "HasThis",
            "ExplicitThis"
          ],
          "type": "string",
          "readOnly": true
        },
        "IsGenericMethodDefinition": {
          "type": "boolean",
          "readOnly": true
        },
        "ContainsGenericParameters": {
          "type": "boolean",
          "readOnly": true
        },
        "IsGenericMethod": {
          "type": "boolean",
          "readOnly": true
        },
        "IsSecurityCritical": {
          "type": "boolean",
          "readOnly": true
        },
        "IsSecuritySafeCritical": {
          "type": "boolean",
          "readOnly": true
        },
        "IsSecurityTransparent": {
          "type": "boolean",
          "readOnly": true
        },
        "IsPublic": {
          "type": "boolean",
          "readOnly": true
        },
        "IsPrivate": {
          "type": "boolean",
          "readOnly": true
        },
        "IsFamily": {
          "type": "boolean",
          "readOnly": true
        },
        "IsAssembly": {
          "type": "boolean",
          "readOnly": true
        },
        "IsFamilyAndAssembly": {
          "type": "boolean",
          "readOnly": true
        },
        "IsFamilyOrAssembly": {
          "type": "boolean",
          "readOnly": true
        },
        "IsStatic": {
          "type": "boolean",
          "readOnly": true
        },
        "IsFinal": {
          "type": "boolean",
          "readOnly": true
        },
        "IsVirtual": {
          "type": "boolean",
          "readOnly": true
        },
        "IsHideBySig": {
          "type": "boolean",
          "readOnly": true
        },
        "IsAbstract": {
          "type": "boolean",
          "readOnly": true
        },
        "IsSpecialName": {
          "type": "boolean",
          "readOnly": true
        },
        "IsConstructor": {
          "type": "boolean",
          "readOnly": true
        },
        "Name": {
          "type": "string",
          "readOnly": true
        },
        "DeclaringType": {
          "type": "string",
          "readOnly": true
        },
        "ReflectedType": {
          "type": "string",
          "readOnly": true
        },
        "CustomAttributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomAttributeData"
          },
          "readOnly": true
        },
        "MetadataToken": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "Module": {
          "type": "object",
          "readOnly": true
        }
      }
    },
    "CustomAttributeTypedArgument": {
      "type": "object",
      "properties": {
        "ArgumentType": {
          "type": "string",
          "readOnly": true
        },
        "Value": {
          "type": "object",
          "readOnly": true
        }
      }
    },
    "CustomAttributeNamedArgument": {
      "type": "object",
      "properties": {
        "MemberInfo": {
          "$ref": "#/definitions/MemberInfo",
          "readOnly": true
        },
        "TypedValue": {
          "$ref": "#/definitions/CustomAttributeTypedArgument",
          "readOnly": true
        },
        "MemberName": {
          "type": "string",
          "readOnly": true
        },
        "IsField": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "HeaderConfig": {
      "type": "object",
      "properties": {
        "SourceVersion": {
          "$ref": "#/definitions/ConfigItem_String"
        },
        "Enabled": {
          "$ref": "#/definitions/ConfigItem_Boolean"
        },
        "ChannelTag": {
          "$ref": "#/definitions/ConfigItem_String"
        },
        "ChannelLocationBinding": {
          "$ref": "#/definitions/ConfigChannelLocationBinding"
        },
        "IsMultiLocation": {
          "$ref": "#/definitions/ConfigItem_Boolean"
        },
        "AutoPopulatedLocations": {
          "$ref": "#/definitions/ConfigItem_Boolean"
        },
        "CanModifyLocationsOnChannel": {
          "$ref": "#/definitions/ConfigItem_Boolean"
        },
        "BopisSupported": {
          "$ref": "#/definitions/ConfigItem_Boolean"
        },
        "ProcessPosOrders": {
          "$ref": "#/definitions/ConfigProperty_Boolean"
        },
        "DespatchNotes": {
          "$ref": "#/definitions/ConfigItem_Boolean"
        },
        "CancellationNotes": {
          "$ref": "#/definitions/ConfigItem_Boolean"
        },
        "AutoRespondCancellationRequests": {
          "$ref": "#/definitions/ConfigItem_Boolean"
        },
        "CancellationResponseType": {
          "$ref": "#/definitions/ConfigPropertySelectionList_SelectStringValueOption_String"
        },
        "RefundNotes": {
          "$ref": "#/definitions/ConfigItem_Boolean"
        },
        "DownloadRefunds": {
          "$ref": "#/definitions/ConfigItem_Boolean"
        },
        "ReturnNotes": {
          "$ref": "#/definitions/ConfigItem_Boolean"
        },
        "DownloadReturns": {
          "$ref": "#/definitions/ConfigItem_Boolean"
        },
        "OrderSaveLocation": {
          "$ref": "#/definitions/ConfigPropertySelectionList_SelectStringValueOption_Guid"
        },
        "OrderSyncDate": {
          "$ref": "#/definitions/ConfigItem_DateTime"
        },
        "OrderCancellationCheckDate": {
          "$ref": "#/definitions/ConfigItem_DateTime"
        },
        "ConfigDiscount": {
          "$ref": "#/definitions/ConfigPropertySelectionList_SelectStringValueOption_String"
        },
        "OrderDownloadErrorCount": {
          "$ref": "#/definitions/ConfigItem_Int32"
        },
        "OrderDownloadGlobalErrorCount": {
          "$ref": "#/definitions/ConfigItem_Int32"
        },
        "OrderDespatchErrorCount": {
          "$ref": "#/definitions/ConfigItem_Int32"
        },
        "OrderDespatchGlobalErrorCount": {
          "$ref": "#/definitions/ConfigItem_Int32"
        },
        "OrderCancellationCheckErrorCount": {
          "$ref": "#/definitions/ConfigItem_Int32"
        },
        "OrderCancellationCheckGlobalErrorCount": {
          "$ref": "#/definitions/ConfigItem_Int32"
        },
        "RmaDownloadErrorCount": {
          "$ref": "#/definitions/ConfigItem_Int32"
        },
        "RmaDownloadGlobalErrorCount": {
          "$ref": "#/definitions/ConfigItem_Int32"
        },
        "HidesHeaderAttributes": {
          "$ref": "#/definitions/ConfigProperty_Boolean"
        },
        "InventorySync": {
          "$ref": "#/definitions/ConfigItem_Boolean"
        },
        "StockLocationBinding": {
          "$ref": "#/definitions/ConfigStockLocationBinding"
        },
        "MaxListed": {
          "$ref": "#/definitions/ConfigItem_Int32"
        },
        "StockPercentage": {
          "$ref": "#/definitions/ConfigItem_Double"
        },
        "EndWhen": {
          "$ref": "#/definitions/ConfigItem_Int32"
        },
        "InvSyncErrorCount": {
          "$ref": "#/definitions/ConfigItem_Int32"
        },
        "PriceChange": {
          "$ref": "#/definitions/ConfigItem_Boolean"
        },
        "PriceChangeErrorCount": {
          "$ref": "#/definitions/ConfigItem_Int32"
        },
        "IsInventorySyncTriggerEnabled": {
          "$ref": "#/definitions/ConfigProperty_Boolean"
        },
        "IsListingScanRunning": {
          "$ref": "#/definitions/ConfigItem_Boolean"
        },
        "ListingScanStartUpdateDate": {
          "$ref": "#/definitions/ConfigItem_DateTime"
        },
        "LastListingUpdateDate": {
          "$ref": "#/definitions/ConfigItem_DateTime"
        },
        "EstimatedInventoryScanComplete": {
          "$ref": "#/definitions/ConfigItem_DateTime"
        },
        "IsHeaderOnly": {
          "type": "boolean",
          "readOnly": true
        },
        "IsHidden": {
          "type": "boolean"
        },
        "DisplayName": {
          "type": "string",
          "readOnly": true
        },
        "DynamicProperties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigItemExternal"
          }
        },
        "ConfigDiscountTyped": {
          "enum": [
            "AllEvenly",
            "ItemsThenPostage",
            "PostageThenItems"
          ],
          "type": "string"
        },
        "PostalServiceMapping": {
          "$ref": "#/definitions/ConfigPostalServiceMapping"
        },
        "PaymentMethodMapping": {
          "$ref": "#/definitions/ConfigPaymentMethodMapping"
        },
        "PkChannelId": {
          "format": "int32",
          "type": "integer"
        },
        "Source": {
          "type": "string",
          "readOnly": true
        },
        "SourceType": {
          "type": "string",
          "readOnly": true
        },
        "FulfillmentServiceEnabled": {
          "type": "boolean",
          "readOnly": true
        },
        "FulfillmentLocation": {
          "format": "uuid",
          "type": "string",
          "readOnly": true,
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigRule"
          },
          "readOnly": true
        },
        "Buttons": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigButton"
          },
          "readOnly": true
        },
        "SubSource": {
          "type": "string"
        },
        "HeaderAuditValues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Channel_Setting_Audit"
          },
          "readOnly": true
        }
      }
    },
    "KeyGuidValue": {
      "type": "object",
      "properties": {
        "Key": {
          "type": "string"
        },
        "Value": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "Inventory_AddImageToInventoryItemRequest": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/AddImageToInventoryItemRequest",
          "description": "Add Image object"
        }
      }
    },
    "AddImageToInventoryItemRequest": {
      "type": "object",
      "properties": {
        "ItemNumber": {
          "description": "SKU number of an item",
          "type": "string"
        },
        "StockItemId": {
          "format": "uuid",
          "description": "pkStockItemId of an item",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "IsMain": {
          "description": "Whether you want to set the image as main",
          "type": "boolean"
        },
        "ImageUrl": {
          "description": "Image URL",
          "type": "string"
        }
      }
    },
    "AddImageToInventoryItemResponse": {
      "type": "object",
      "properties": {
        "StockItemId": {
          "format": "uuid",
          "description": "pkStockItemId of an item",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ImageId": {
          "format": "uuid",
          "description": "ImageId of newly added image",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ImageUrl": {
          "description": "Image new URL",
          "type": "string"
        },
        "ImageThumbnailUrl": {
          "description": "Image Thumbnail URL",
          "type": "string"
        }
      }
    },
    "Inventory_UpdateInventoryItemFieldRequest": {
      "type": "object",
      "properties": {
        "inventoryItemId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "fieldName": {
          "enum": [
            "SKU",
            "Title",
            "VariationGroupName",
            "RetailPrice",
            "PurchasePrice",
            "Tracked",
            "Barcode",
            "Available",
            "MinimumLevel",
            "InOrder",
            "StockLevel",
            "StockValue",
            "Due",
            "BinRack",
            "Category",
            "Image",
            "Weight",
            "DimHeight",
            "DimWidth",
            "DimDepth",
            "CreatedDate",
            "ModifiedDate",
            "SerialNumberScanRequired",
            "BatchNumberScanRequired",
            "BatchType",
            "JIT",
            "ReorderAmount",
            "ReorderDate",
            "AverageConsumption",
            "DefaultSupplier"
          ],
          "type": "string"
        },
        "fieldValue": {
          "type": "string"
        }
      }
    },
    "Inventory_UpdateInventoryItemStockFieldRequest": {
      "type": "object",
      "properties": {
        "inventoryItemId": {
          "format": "uuid",
          "description": "Stock Item Id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "fieldName": {
          "description": "Name of field updated",
          "enum": [
            "SKU",
            "Title",
            "VariationGroupName",
            "RetailPrice",
            "PurchasePrice",
            "Tracked",
            "Barcode",
            "Available",
            "MinimumLevel",
            "InOrder",
            "StockLevel",
            "StockValue",
            "Due",
            "BinRack",
            "Category",
            "Image",
            "Weight",
            "DimHeight",
            "DimWidth",
            "DimDepth",
            "CreatedDate",
            "ModifiedDate",
            "SerialNumberScanRequired",
            "BatchNumberScanRequired",
            "BatchType",
            "JIT",
            "ReorderAmount",
            "ReorderDate",
            "AverageConsumption",
            "DefaultSupplier"
          ],
          "type": "string"
        },
        "fieldValue": {
          "description": "Input value",
          "type": "string"
        },
        "locationId": {
          "format": "uuid",
          "description": "Location Id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "changeSource": {
          "description": "changeSource",
          "type": "string"
        }
      }
    },
    "Inventory_UpdateInventoryItemLevelsRequest": {
      "type": "object",
      "properties": {
        "inventoryItemId": {
          "format": "uuid",
          "description": "Stock Item Id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "fieldName": {
          "description": "Name of field updated",
          "enum": [
            "SKU",
            "Title",
            "VariationGroupName",
            "RetailPrice",
            "PurchasePrice",
            "Tracked",
            "Barcode",
            "Available",
            "MinimumLevel",
            "InOrder",
            "StockLevel",
            "StockValue",
            "Due",
            "BinRack",
            "Category",
            "Image",
            "Weight",
            "DimHeight",
            "DimWidth",
            "DimDepth",
            "CreatedDate",
            "ModifiedDate",
            "SerialNumberScanRequired",
            "BatchNumberScanRequired",
            "BatchType",
            "JIT",
            "ReorderAmount",
            "ReorderDate",
            "AverageConsumption",
            "DefaultSupplier"
          ],
          "type": "string"
        },
        "fieldValue": {
          "description": "Input value",
          "type": "string"
        },
        "locationId": {
          "format": "uuid",
          "description": "Location Id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "changeSource": {
          "description": "",
          "type": "string"
        }
      }
    },
    "Inventory_UpdateInventoryItemLocationFieldRequest": {
      "type": "object",
      "properties": {
        "inventoryItemId": {
          "format": "uuid",
          "description": "Stock Item Id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "fieldName": {
          "description": "Name of field updated",
          "enum": [
            "SKU",
            "Title",
            "VariationGroupName",
            "RetailPrice",
            "PurchasePrice",
            "Tracked",
            "Barcode",
            "Available",
            "MinimumLevel",
            "InOrder",
            "StockLevel",
            "StockValue",
            "Due",
            "BinRack",
            "Category",
            "Image",
            "Weight",
            "DimHeight",
            "DimWidth",
            "DimDepth",
            "CreatedDate",
            "ModifiedDate",
            "SerialNumberScanRequired",
            "BatchNumberScanRequired",
            "BatchType",
            "JIT",
            "ReorderAmount",
            "ReorderDate",
            "AverageConsumption",
            "DefaultSupplier"
          ],
          "type": "string"
        },
        "fieldValue": {
          "description": "Input value",
          "type": "string"
        },
        "locationId": {
          "format": "uuid",
          "description": "Location Id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "changeSource": {
          "description": "",
          "type": "string"
        }
      }
    },
    "StockItemInv": {
      "type": "object",
      "properties": {
        "VariationGroupName": {
          "type": "string"
        },
        "ItemDescription": {
          "type": "string"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer"
        },
        "InOrder": {
          "format": "int32",
          "type": "integer"
        },
        "Due": {
          "format": "int32",
          "type": "integer"
        },
        "MinimumLevel": {
          "format": "int32",
          "type": "integer"
        },
        "Available": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "IsCompositeParent": {
          "type": "boolean"
        },
        "ShippedSeparately": {
          "type": "boolean"
        },
        "ItemNumber": {
          "type": "string"
        },
        "ItemTitle": {
          "type": "string"
        },
        "BarcodeNumber": {
          "type": "string"
        },
        "MetaData": {
          "type": "string"
        },
        "IsVariationParent": {
          "type": "boolean"
        },
        "isBatchedStockType": {
          "type": "boolean",
          "readOnly": true
        },
        "PurchasePrice": {
          "format": "double",
          "type": "number"
        },
        "RetailPrice": {
          "format": "double",
          "type": "number"
        },
        "TaxRate": {
          "format": "double",
          "type": "number"
        },
        "PostalServiceId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "PostalServiceName": {
          "type": "string"
        },
        "CategoryId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "CategoryName": {
          "type": "string"
        },
        "PackageGroupId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "PackageGroupName": {
          "type": "string"
        },
        "Height": {
          "format": "double",
          "type": "number"
        },
        "Width": {
          "format": "double",
          "type": "number"
        },
        "Depth": {
          "format": "double",
          "type": "number"
        },
        "Weight": {
          "format": "double",
          "type": "number"
        },
        "CreationDate": {
          "format": "date-time",
          "type": "string"
        },
        "InventoryTrackingType": {
          "format": "int32",
          "type": "integer"
        },
        "BatchNumberScanRequired": {
          "type": "boolean"
        },
        "SerialNumberScanRequired": {
          "type": "boolean"
        },
        "StockItemId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "StockItemIntId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "InventoryView": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Name": {
          "type": "string"
        },
        "Mode": {
          "enum": [
            "All",
            "Listed",
            "NotListed",
            "Errors"
          ],
          "type": "string"
        },
        "Source": {
          "type": "string"
        },
        "SubSource": {
          "type": "string"
        },
        "CountryCode": {
          "type": "string"
        },
        "CountryName": {
          "type": "string"
        },
        "Listing": {
          "enum": [
            "All",
            "Variations",
            "NonVariations",
            "SingleItems"
          ],
          "type": "string"
        },
        "ShowOnlyChanged": {
          "type": "boolean"
        },
        "IncludeProducts": {
          "enum": [
            "All",
            "Archived",
            "NotArchived"
          ],
          "type": "string"
        },
        "Filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Filter"
          }
        },
        "Columns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Column"
          }
        },
        "Channels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InventoryChannel"
          }
        }
      }
    },
    "Filter": {
      "type": "object",
      "properties": {
        "FilterName": {
          "enum": [
            "General",
            "SKU",
            "Title",
            "RetailPrice",
            "PurchasePrice",
            "Tracked",
            "Barcode",
            "VariationGroupName",
            "Available",
            "MinimumLevel",
            "InOrder",
            "StockLevel",
            "StockValue",
            "Due",
            "BinRack",
            "Category",
            "ChannelSKU",
            "SupplierCode",
            "eBayId",
            "AmazonASIN",
            "Image",
            "ExtendedProperty",
            "ExtendedPropertyName",
            "Channel",
            "CreatedDate",
            "ModifiedDate",
            "SerialNumberScanRequired",
            "BatchNumberScanRequired",
            "BatchType",
            "BatchNumber",
            "Weight",
            "DimHeight",
            "DimWidth",
            "DimDepth",
            "JIT",
            "ReorderAmount",
            "ReorderDate",
            "AverageConsumption",
            "DefaultSupplier",
            "GeneralWithSeparatingWords"
          ],
          "type": "string"
        },
        "DisplayName": {
          "type": "string",
          "readOnly": true
        },
        "FilterNameExact": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Field": {
          "enum": [
            "Int",
            "Double",
            "String",
            "Boolean",
            "Select",
            "Date",
            "Channel",
            "Other",
            "Datetime2",
            "Calculated"
          ],
          "type": "string",
          "readOnly": true
        },
        "Condition": {
          "enum": [
            "Equals",
            "Contains",
            "Less",
            "Greater",
            "NotEquals",
            "NotContains",
            "Exists",
            "Listed",
            "NotListed",
            "HasError",
            "OnlyErrors",
            "NoErrors",
            "HasWarning",
            "LastDays",
            "OlderThan",
            "Next",
            "Is",
            "InTheFeed",
            "NotInTheFeed",
            "Creating",
            "Updating",
            "Deleting"
          ],
          "type": "string"
        },
        "ConditionDisplayName": {
          "type": "string",
          "readOnly": true
        },
        "Value": {
          "type": "string"
        }
      }
    },
    "Column": {
      "type": "object",
      "properties": {
        "ColumnName": {
          "enum": [
            "SKU",
            "Title",
            "VariationGroupName",
            "RetailPrice",
            "PurchasePrice",
            "Tracked",
            "Barcode",
            "Available",
            "MinimumLevel",
            "InOrder",
            "StockLevel",
            "StockValue",
            "Due",
            "BinRack",
            "Category",
            "Image",
            "Weight",
            "DimHeight",
            "DimWidth",
            "DimDepth",
            "CreatedDate",
            "ModifiedDate",
            "SerialNumberScanRequired",
            "BatchNumberScanRequired",
            "BatchType",
            "JIT",
            "ReorderAmount",
            "ReorderDate",
            "AverageConsumption",
            "DefaultSupplier"
          ],
          "type": "string"
        },
        "DisplayName": {
          "type": "string",
          "readOnly": true
        },
        "ExportName": {
          "type": "string",
          "readOnly": true
        },
        "Group": {
          "enum": [
            "General",
            "Stock",
            "Location"
          ],
          "type": "string",
          "readOnly": true
        },
        "Field": {
          "enum": [
            "Int",
            "Double",
            "String",
            "Boolean",
            "Select",
            "Date",
            "Datetime2"
          ],
          "type": "string",
          "readOnly": true
        },
        "SortDirection": {
          "enum": [
            "None",
            "Descending",
            "Ascending"
          ],
          "type": "string"
        },
        "Width": {
          "format": "double",
          "type": "number"
        },
        "IsEditable": {
          "type": "boolean"
        }
      }
    },
    "InventoryChannel": {
      "type": "object",
      "properties": {
        "Source": {
          "type": "string"
        },
        "SubSource": {
          "type": "string"
        },
        "SourceVersion": {
          "type": "string"
        },
        "SourceType": {
          "type": "string"
        },
        "Width": {
          "format": "double",
          "type": "number"
        },
        "ChannelId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Inventory_CreateUserSpecificViewRequest": {
      "type": "object",
      "properties": {
        "view": {
          "$ref": "#/definitions/InventoryView",
          "description": "New user-specific view"
        }
      }
    },
    "Inventory_UpdateUserSpecificViewRequest": {
      "type": "object",
      "properties": {
        "viewName": {
          "description": "Current user-specific view name",
          "type": "string"
        },
        "view": {
          "$ref": "#/definitions/InventoryView",
          "description": "Updated user-specific view"
        }
      }
    },
    "Inventory_DeleteUserSpecificViewRequest": {
      "type": "object",
      "properties": {
        "viewName": {
          "description": "User-specific view name",
          "type": "string"
        }
      }
    },
    "Inventory_AddInventoryItemRequest": {
      "type": "object",
      "properties": {
        "inventoryItem": {
          "$ref": "#/definitions/StockItem",
          "description": "New StockItem"
        }
      }
    },
    "StockItem": {
      "type": "object",
      "properties": {
        "ItemDescription": {
          "type": "string"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer"
        },
        "InOrder": {
          "format": "int32",
          "type": "integer"
        },
        "Due": {
          "format": "int32",
          "type": "integer"
        },
        "MinimumLevel": {
          "format": "int32",
          "type": "integer"
        },
        "Available": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "IsCompositeParent": {
          "type": "boolean"
        },
        "ShippedSeparately": {
          "type": "boolean"
        },
        "ItemNumber": {
          "type": "string"
        },
        "ItemTitle": {
          "type": "string"
        },
        "BarcodeNumber": {
          "type": "string"
        },
        "MetaData": {
          "type": "string"
        },
        "IsVariationParent": {
          "type": "boolean"
        },
        "isBatchedStockType": {
          "type": "boolean",
          "readOnly": true
        },
        "PurchasePrice": {
          "format": "double",
          "type": "number"
        },
        "RetailPrice": {
          "format": "double",
          "type": "number"
        },
        "TaxRate": {
          "format": "double",
          "type": "number"
        },
        "PostalServiceId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "PostalServiceName": {
          "type": "string"
        },
        "CategoryId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "CategoryName": {
          "type": "string"
        },
        "PackageGroupId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "PackageGroupName": {
          "type": "string"
        },
        "Height": {
          "format": "double",
          "type": "number"
        },
        "Width": {
          "format": "double",
          "type": "number"
        },
        "Depth": {
          "format": "double",
          "type": "number"
        },
        "Weight": {
          "format": "double",
          "type": "number"
        },
        "CreationDate": {
          "format": "date-time",
          "type": "string"
        },
        "InventoryTrackingType": {
          "format": "int32",
          "type": "integer"
        },
        "BatchNumberScanRequired": {
          "type": "boolean"
        },
        "SerialNumberScanRequired": {
          "type": "boolean"
        },
        "StockItemId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "StockItemIntId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Inventory_AddInventoryItemBulkRequest": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/AddInventoryItemRequest",
          "description": "Request containing the list of items to be added."
        }
      }
    },
    "AddInventoryItemRequest": {
      "type": "object",
      "properties": {
        "InventoryItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StockItemHeader"
          }
        }
      }
    },
    "StockItemHeader": {
      "type": "object",
      "properties": {
        "ItemNumber": {
          "type": "string"
        },
        "ItemTitle": {
          "type": "string"
        },
        "BarcodeNumber": {
          "type": "string"
        },
        "MetaData": {
          "type": "string"
        },
        "IsVariationParent": {
          "type": "boolean"
        },
        "isBatchedStockType": {
          "type": "boolean",
          "readOnly": true
        },
        "PurchasePrice": {
          "format": "double",
          "type": "number"
        },
        "RetailPrice": {
          "format": "double",
          "type": "number"
        },
        "TaxRate": {
          "format": "double",
          "type": "number"
        },
        "PostalServiceId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "PostalServiceName": {
          "type": "string"
        },
        "CategoryId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "CategoryName": {
          "type": "string"
        },
        "PackageGroupId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "PackageGroupName": {
          "type": "string"
        },
        "Height": {
          "format": "double",
          "type": "number"
        },
        "Width": {
          "format": "double",
          "type": "number"
        },
        "Depth": {
          "format": "double",
          "type": "number"
        },
        "Weight": {
          "format": "double",
          "type": "number"
        },
        "CreationDate": {
          "format": "date-time",
          "type": "string"
        },
        "InventoryTrackingType": {
          "format": "int32",
          "type": "integer"
        },
        "BatchNumberScanRequired": {
          "type": "boolean"
        },
        "SerialNumberScanRequired": {
          "type": "boolean"
        },
        "StockItemId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "StockItemIntId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "BatchedAPIResponse_Guid": {
      "type": "object",
      "properties": {
        "Results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/APIResultResponse_Guid"
          }
        },
        "TotalResults": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "ResultStatus": {
          "enum": [
            "NOTSET",
            "SUCCESSFUL",
            "PARTIALLY_SUCCESSFUL",
            "FAILED"
          ],
          "type": "string",
          "readOnly": true
        }
      }
    },
    "APIResultResponse_Guid": {
      "type": "object",
      "properties": {
        "Result": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ResultStatus": {
          "enum": [
            "NOTSET",
            "SUCCESSFUL",
            "PARTIALLY_SUCCESSFUL",
            "FAILED"
          ],
          "type": "string"
        },
        "Message": {
          "type": "string"
        }
      }
    },
    "Inventory_DuplicateInventoryItemRequest": {
      "type": "object",
      "properties": {
        "inventoryItem": {
          "$ref": "#/definitions/StockItem",
          "description": "New StockItem"
        },
        "sourceItemId": {
          "format": "uuid",
          "description": "Source StockItem",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "copyImages": {
          "description": "Set to True to copy images from source stock item",
          "type": "boolean"
        }
      }
    },
    "Inventory_ArchiveInventoryItemsRequest": {
      "type": "object",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/InventoryParametersRequest",
          "description": "InventoryParameters object"
        }
      }
    },
    "InventoryParametersRequest": {
      "type": "object",
      "properties": {
        "InventoryItemIds": {
          "description": "List of stock item ids",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "SelectedRegions": {
          "description": "A list of row numbers for items selected in the my inventory grid. \r\nFor instance if the first entry in the list is 4, 4; the selection was from the fourth row, to the fourth row.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tuple_Int32_Int32"
          }
        },
        "Token": {
          "format": "uuid",
          "description": "An internal token used to identify the list of inventory items within a certain view.\r\nFrom this, the inventory item ids can be extracted with the selected regions.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "Inventory_UnarchiveInventoryItemsRequest": {
      "type": "object",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/InventoryParametersRequest",
          "description": "InventoryParameters object"
        }
      }
    },
    "Inventory_UpdateInventoryItemRequest": {
      "type": "object",
      "properties": {
        "inventoryItem": {
          "$ref": "#/definitions/StockItemInv",
          "description": "Inventory item object"
        }
      }
    },
    "Inventory_DeleteInventoryItemsRequest": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/DeleteInventoryItemsRequest",
          "description": "Do not send this parameter"
        },
        "inventoryItemIds": {
          "description": "List of stock item IDs that needs to be deleted",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        }
      }
    },
    "DeleteInventoryItemsRequest": {
      "type": "object",
      "properties": {
        "InventoryItemIds": {
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "SelectedRegions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tuple_Int32_Int32"
          }
        },
        "Token": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "Inventory_AdjustTemplatesInstantRequest": {
      "type": "object",
      "properties": {
        "inventoryItemIds": {
          "description": "Inventory item ids",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "source": {
          "description": "Channel type ('EBAY', 'AMAZON', 'BIGCOMMERCE', 'MAGENTO')",
          "type": "string"
        },
        "subSource": {
          "description": "Channel Name",
          "type": "string"
        },
        "adjustmentOptions": {
          "$ref": "#/definitions/AdjustmentOptions",
          "description": "Fields which should be adjusted"
        }
      }
    },
    "AdjustmentOptions": {
      "type": "object",
      "properties": {
        "Title": {
          "description": "Product title",
          "type": "boolean"
        },
        "Price": {
          "description": "Product price",
          "type": "boolean"
        },
        "Description": {
          "description": "Product description",
          "type": "boolean"
        },
        "AddExtendedProperties": {
          "description": "If product extended properties needs to be added",
          "type": "boolean"
        },
        "ReviseExtendedProperties": {
          "description": "Revise product extended properties",
          "type": "boolean"
        },
        "UpdateImages": {
          "description": "Update product images",
          "type": "boolean"
        },
        "VariationAttributes": {
          "description": "Product variation attributes",
          "type": "boolean"
        },
        "ReloadAllImages": {
          "description": "Reload all images for the template",
          "type": "boolean"
        }
      }
    },
    "Inventory_AdjustEbayTemplatesInstantLMSRequest": {
      "type": "object",
      "properties": {
        "inventoryItemIds": {
          "description": "Inventory item ids",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "subSource": {
          "description": "Channel Name",
          "type": "string"
        },
        "siteId": {
          "description": "Ebay Site to adjust N.B this is not currently used",
          "type": "string"
        },
        "adjustmentOptions": {
          "$ref": "#/definitions/AdjustmentOptions",
          "description": "Fields which should be adjusted"
        }
      }
    },
    "Inventory_AdjustEbayTemplatesDispatchLMSRequest": {
      "type": "object",
      "properties": {
        "inventoryItemIds": {
          "description": "Inventory item ids",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "subSource": {
          "description": "Channel Name",
          "type": "string"
        },
        "siteId": {
          "description": "Ebay Site to adjust N.B this is not currently used",
          "type": "string"
        },
        "adjustmentOptions": {
          "$ref": "#/definitions/AdjustmentOptions",
          "description": "Fields which should be adjusted"
        }
      }
    },
    "StockItemChannelSKU": {
      "type": "object",
      "properties": {
        "SKU": {
          "type": "string"
        },
        "SubSource": {
          "type": "string"
        },
        "ChannelSKURowId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Source": {
          "type": "string"
        },
        "UpdateStatus": {
          "type": "string"
        },
        "ChannelReferenceId": {
          "type": "string"
        },
        "LastUpdate": {
          "format": "date-time",
          "type": "string"
        },
        "MaxListedQuantity": {
          "format": "int32",
          "type": "integer"
        },
        "EndWhenStock": {
          "format": "int32",
          "type": "integer"
        },
        "SubmittedQuantity": {
          "format": "int32",
          "type": "integer"
        },
        "ListedQuantity": {
          "format": "int32",
          "type": "integer"
        },
        "StockPercentage": {
          "format": "double",
          "type": "number"
        },
        "IgnoreSync": {
          "type": "boolean"
        },
        "IgnoreSyncMultiLocation": {
          "type": "boolean"
        },
        "IsMultiLocation": {
          "type": "boolean"
        },
        "StockItemId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "StockItemIntId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Inventory_BatchGetInventoryItemChannelSKUsRequest": {
      "type": "object",
      "properties": {
        "inventoryItemIds": {
          "description": "List of Stock item Id's'",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        }
      }
    },
    "StockItemChannelSkuResponse": {
      "type": "object",
      "properties": {
        "StockItemId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ChannelSkus": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StockItemChannelSKU"
          }
        }
      }
    },
    "StockItemChannelSKUWithLocation": {
      "type": "object",
      "properties": {
        "fkRowId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "LocationId": {
          "format": "int32",
          "type": "integer"
        },
        "LocationName": {
          "type": "string"
        },
        "IgnoreSync": {
          "type": "boolean"
        },
        "MaxListedQuantity": {
          "format": "int32",
          "type": "integer"
        },
        "EndWhenStock": {
          "format": "int32",
          "type": "integer"
        },
        "StockPercentage": {
          "format": "double",
          "type": "number"
        },
        "LastUpdate": {
          "format": "date-time",
          "type": "string"
        },
        "UpdateStatus": {
          "type": "string"
        },
        "SubmittedQuantity": {
          "format": "int32",
          "type": "integer"
        },
        "ListedQuantity": {
          "format": "int32",
          "type": "integer"
        },
        "RetryCount": {
          "format": "int32",
          "type": "integer"
        },
        "StockItemId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "StockItemIntId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Inventory_UpdateInventoryItemChannelSKUsRequest": {
      "type": "object",
      "properties": {
        "inventoryItemChannelSKUs": {
          "description": "stockitem channel skus",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StockItemChannelSKU"
          }
        }
      }
    },
    "Inventory_UpdateInventoryItemChannelSKUsWithLocationRequest": {
      "type": "object",
      "properties": {
        "inventoryItemChannelSKUsWithLocation": {
          "description": "Listing information",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StockItemChannelSKUWithLocation"
          }
        }
      }
    },
    "Inventory_CreateInventoryItemChannelSKUsRequest": {
      "type": "object",
      "properties": {
        "inventoryItemChannelSKUs": {
          "description": "stockitem channel skus",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StockItemChannelSKU"
          }
        }
      }
    },
    "Inventory_DeleteInventoryItemChannelSKUsRequest": {
      "type": "object",
      "properties": {
        "inventoryItemChannelSKUIds": {
          "description": "stockitem channel sku ids",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        }
      }
    },
    "Inventory_UnlinkChannelListingRequest": {
      "type": "object",
      "properties": {
        "channelRefId": {
          "description": "ChannelRefId",
          "type": "string"
        },
        "source": {
          "description": "Source",
          "type": "string"
        },
        "subSource": {
          "description": "Subsource",
          "type": "string"
        }
      }
    },
    "StockItemAuditTrail": {
      "type": "object",
      "properties": {
        "AuditType": {
          "type": "string"
        },
        "AuditTrailDate": {
          "format": "date-time",
          "type": "string"
        },
        "AuditText": {
          "type": "string"
        },
        "UserName": {
          "type": "string"
        },
        "StockItemId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "StockItemIntId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Inventory_GetInventoryItemAuditTrailPagedRequest": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/GetInventoryItemAuditTrailPagedRequest",
          "description": "Set of filter options"
        }
      }
    },
    "GetInventoryItemAuditTrailPagedRequest": {
      "type": "object",
      "properties": {
        "Action": {
          "type": "string"
        },
        "FromDate": {
          "format": "date-time",
          "type": "string"
        },
        "ToDate": {
          "format": "date-time",
          "type": "string"
        },
        "PageSize": {
          "format": "int32",
          "type": "integer"
        },
        "PageNumber": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "PagedResult_StockItemAuditTrail": {
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StockItemAuditTrail"
          }
        },
        "TotalItems": {
          "format": "int32",
          "type": "integer"
        },
        "CurrentPage": {
          "format": "int32",
          "type": "integer"
        },
        "EntriesPerPage": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Inventory_GetInventoryItemBatchInformationRequest": {
      "type": "object",
      "properties": {
        "Request": {
          "$ref": "#/definitions/GetInventoryItemBatchInformationRequest",
          "description": "Details for the batch to be fetched"
        }
      }
    },
    "GetInventoryItemBatchInformationRequest": {
      "description": "Used to get inventory item batch information",
      "type": "object",
      "properties": {
        "StockItemId": {
          "format": "uuid",
          "description": "The item id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "StockLocationId": {
          "format": "uuid",
          "description": "The location to get the batch information from",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "AvailableOnly": {
          "description": "Defines whether we should only return available items",
          "type": "boolean"
        },
        "AssignableOnly": {
          "description": "Only return warehouse locations that can have orders assigned to them for picking",
          "type": "boolean"
        }
      }
    },
    "Inventory_GetInventoryItemBatchInformationByIdsRequest": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/GetInventoryItemBatchInformationByIdsRequest"
        }
      }
    },
    "GetInventoryItemBatchInformationByIdsRequest": {
      "type": "object",
      "properties": {
        "StockItemIds": {
          "description": "A list of stock item ids",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "StockLocationId": {
          "format": "uuid",
          "description": "The location to get the batch information from",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "AvailableOnly": {
          "description": "Defines whether we should only return available items",
          "type": "boolean"
        }
      }
    },
    "GetInventoryItemBatchInformationByIdsResponse": {
      "type": "object",
      "properties": {
        "InventoryItemBatchInformation": {
          "description": "A list of stock item batch data",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchInformation"
          }
        }
      }
    },
    "BatchInformation": {
      "type": "object",
      "properties": {
        "StockItemId": {
          "format": "uuid",
          "description": "Stock item id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ItemBatchInformation": {
          "description": "Stock item batch data",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StockItemBatch"
          }
        }
      }
    },
    "Inventory_HasStockItemStockLevelRequest": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/HasStockItemStockLevelRequest",
          "description": "Object with StockItemId"
        }
      }
    },
    "HasStockItemStockLevelRequest": {
      "type": "object",
      "properties": {
        "StockItemId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "HasStockItemStockLevelResponse": {
      "type": "object",
      "properties": {
        "HasStockLevel": {
          "type": "boolean"
        }
      }
    },
    "Inventory_UpdateBatchDetailsRequest": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/UpdateBatchDetailsRequest",
          "description": "Stock item id and batch details"
        }
      }
    },
    "UpdateBatchDetailsRequest": {
      "type": "object",
      "properties": {
        "StockItemId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "InventoryTrackingType": {
          "format": "int32",
          "type": "integer"
        },
        "BatchNumberScanRequired": {
          "type": "boolean"
        },
        "ResetBatchDates": {
          "type": "boolean"
        }
      }
    },
    "StockItemImage": {
      "type": "object",
      "properties": {
        "Source": {
          "type": "string"
        },
        "FullSource": {
          "type": "string"
        },
        "CheckSumValue": {
          "type": "string"
        },
        "pkRowId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "IsMain": {
          "type": "boolean"
        },
        "SortOrder": {
          "format": "int32",
          "type": "integer"
        },
        "ChecksumValue": {
          "type": "string"
        },
        "RawChecksum": {
          "type": "string"
        },
        "StockItemId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "StockItemIntId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Inventory_GetStockItemIdsBySKURequest": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/GetStockItemIdsBySKURequest",
          "description": ""
        }
      }
    },
    "GetStockItemIdsBySKURequest": {
      "description": "Get stock itemids by sku request",
      "type": "object",
      "properties": {
        "SKUS": {
          "description": "List of SKU's to search for",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GetStockItemIdsBySKU": {
      "description": "Get stock item id's by sku request class.",
      "type": "object",
      "properties": {
        "Items": {
          "description": "Response items of StockItemId and SKU",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetStockItemIdsBySKUItem"
          }
        }
      }
    },
    "GetStockItemIdsBySKUItem": {
      "description": "Response item of StockItemId and SKU",
      "type": "object",
      "properties": {
        "StockItemId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "SKU": {
          "type": "string"
        }
      }
    },
    "Inventory_GetImagesInBulkRequest": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/GetImagesInBulkRequest",
          "description": ""
        }
      }
    },
    "GetImagesInBulkRequest": {
      "type": "object",
      "properties": {
        "StockItemIds": {
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "SKUS": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GetImagesInBulkResponse": {
      "description": "Bulk image response.",
      "type": "object",
      "properties": {
        "Images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetImagesInBulkResponseImage"
          }
        }
      }
    },
    "GetImagesInBulkResponseImage": {
      "description": "Image response item.",
      "type": "object",
      "properties": {
        "SKU": {
          "description": "SKU",
          "type": "string"
        },
        "IsMain": {
          "description": "Is main image",
          "type": "boolean"
        },
        "pkRowId": {
          "format": "uuid",
          "description": "Image row id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ChecksumValue": {
          "description": "Checksum",
          "type": "string"
        },
        "RawChecksum": {
          "description": "Raw file checksum (original and unaltered)",
          "type": "string"
        },
        "SortOrder": {
          "format": "int32",
          "description": "Sort order",
          "type": "integer"
        },
        "StockItemId": {
          "format": "uuid",
          "description": "Stockitem id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "FullSource": {
          "description": "Full image path",
          "type": "string"
        },
        "FullSourceThumbnail": {
          "description": "Thumbnail image path",
          "type": "string"
        }
      }
    },
    "Inventory_SetInventoryItemImageAsMainRequest": {
      "type": "object",
      "properties": {
        "inventoryItemId": {
          "format": "uuid",
          "description": "Id of StockItem",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "mainImageId": {
          "format": "uuid",
          "description": "main image id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "Inventory_UploadImagesToInventoryItemRequest": {
      "type": "object",
      "properties": {
        "inventoryItemId": {
          "format": "uuid",
          "description": "Id of StockItem",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "imageIds": {
          "description": "List of image Ids",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        }
      }
    },
    "PictureSource": {
      "type": "object",
      "properties": {
        "PictureId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Source": {
          "type": "string"
        },
        "IsMain": {
          "type": "boolean"
        },
        "SortOrder": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Inventory_UpdateImagesRequest": {
      "type": "object",
      "properties": {
        "images": {
          "description": "Images to edit",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StockItemImageSimple"
          }
        }
      }
    },
    "StockItemImageSimple": {
      "type": "object",
      "properties": {
        "pkRowId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "IsMain": {
          "type": "boolean"
        },
        "SortOrder": {
          "format": "int32",
          "type": "integer"
        },
        "ChecksumValue": {
          "type": "string"
        },
        "RawChecksum": {
          "type": "string"
        },
        "StockItemId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "StockItemIntId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Inventory_DeleteImagesFromInventoryItemRequest": {
      "type": "object",
      "properties": {
        "inventoryItemImages": {
          "description": "Inventory item ids and a list of image urls to be deleted for each item",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "LinnworksCategory": {
      "type": "object",
      "properties": {
        "CategoryId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "CategoryName": {
          "type": "string"
        },
        "StructureCategoryId": {
          "format": "int32",
          "type": "integer"
        },
        "ProductCategoryId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Inventory_CreateCategoryRequest": {
      "type": "object",
      "properties": {
        "categoryName": {
          "description": "Category name",
          "type": "string"
        },
        "categoryId": {
          "format": "uuid",
          "description": "Category id (optional)",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "Inventory_UpdateCategoryRequest": {
      "type": "object",
      "properties": {
        "category": {
          "$ref": "#/definitions/LinnworksCategory",
          "description": "category to update"
        }
      }
    },
    "Inventory_DeleteCategoryByIdRequest": {
      "type": "object",
      "properties": {
        "categoryId": {
          "format": "uuid",
          "description": "Unique id that identifies the category that you want to delete.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "Country": {
      "type": "object",
      "properties": {
        "CountryId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "CountryName": {
          "type": "string"
        },
        "CountryCode": {
          "type": "string"
        },
        "Continent": {
          "type": "string"
        },
        "Currency": {
          "type": "string"
        },
        "CustomsRequired": {
          "type": "boolean"
        },
        "TaxRate": {
          "format": "double",
          "type": "number"
        },
        "AddressFormat": {
          "type": "string"
        },
        "Regions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CountryRegion"
          }
        },
        "RegionsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "CountryRegion": {
      "type": "object",
      "properties": {
        "pkRegionRowId": {
          "format": "int32",
          "type": "integer"
        },
        "RegionCode": {
          "type": "string"
        },
        "RegionName": {
          "type": "string"
        },
        "TaxRate": {
          "format": "double",
          "type": "number"
        },
        "fkCountryId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ReplaceWith": {
          "enum": [
            "None",
            "Name",
            "Code"
          ],
          "type": "string"
        },
        "IsHomeRegion": {
          "type": "boolean"
        },
        "TagsCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Inventory_CreateCountriesRequest": {
      "type": "object",
      "properties": {
        "countries": {
          "description": "Countries to create",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Country"
          }
        }
      }
    },
    "Inventory_UpdateCountriesRequest": {
      "type": "object",
      "properties": {
        "countries": {
          "description": "Countries to udpate",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Country"
          }
        }
      }
    },
    "Inventory_DeleteCountriesRequest": {
      "type": "object",
      "properties": {
        "countriesIds": {
          "description": "Ids of countries to delete",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        }
      }
    },
    "Inventory_CreateCountryRegionsRequest": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/CreateCountryRegionsRequest",
          "description": "Country regions to create"
        }
      }
    },
    "CreateCountryRegionsRequest": {
      "type": "object",
      "properties": {
        "regions": {
          "description": "List of country regions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CountryRegion"
          }
        }
      }
    },
    "CreateCountryRegionsResponse": {
      "type": "object",
      "properties": {
        "regions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CountryRegion"
          }
        }
      }
    },
    "Inventory_UpdateCountryRegionsRequest": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/UpdateCountryRegionsRequest",
          "description": "Country region information to update"
        }
      }
    },
    "UpdateCountryRegionsRequest": {
      "description": "Country region information to update",
      "type": "object",
      "properties": {
        "regions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CountryRegion"
          }
        }
      }
    },
    "StockLocation": {
      "type": "object",
      "properties": {
        "Address1": {
          "type": "string"
        },
        "Address2": {
          "type": "string"
        },
        "City": {
          "type": "string"
        },
        "County": {
          "type": "string"
        },
        "Country": {
          "type": "string"
        },
        "ZipCode": {
          "type": "string"
        },
        "IsNotTrackable": {
          "type": "boolean"
        },
        "LocationTag": {
          "type": "string"
        },
        "CountInOrderUntilAcknowledgement": {
          "type": "boolean"
        },
        "FulfilmentCenterDeductStockWhenProcessed": {
          "type": "boolean"
        },
        "IsWarehouseManaged": {
          "type": "boolean"
        },
        "StockLocationId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "LocationName": {
          "type": "string"
        },
        "IsFulfillmentCenter": {
          "type": "boolean"
        },
        "StockLocationIntId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "StockItemLocation": {
      "type": "object",
      "properties": {
        "StockLocationId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "LocationName": {
          "type": "string"
        },
        "BinRack": {
          "type": "string"
        },
        "StockItemId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "StockItemIntId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Inventory_AddItemLocationsRequest": {
      "type": "object",
      "properties": {
        "itemLocations": {
          "description": "List of stock item locations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StockItemLocation"
          }
        }
      }
    },
    "Inventory_UpdateItemLocationsRequest": {
      "type": "object",
      "properties": {
        "itemLocations": {
          "description": "List of stock item locations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StockItemLocation"
          }
        }
      }
    },
    "Inventory_DeleteItemLocationsRequest": {
      "type": "object",
      "properties": {
        "inventoryItemId": {
          "format": "uuid",
          "description": "Id of StockItem",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "itemLocations": {
          "description": "List of stock item location ids",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        }
      }
    },
    "StockItemComposition": {
      "type": "object",
      "properties": {
        "LinkedStockItemId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ItemTitle": {
          "type": "string"
        },
        "SKU": {
          "type": "string"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer"
        },
        "PurchasePrice": {
          "format": "double",
          "type": "number"
        },
        "InventoryTrackingType": {
          "format": "int32",
          "type": "integer"
        },
        "DimHeight": {
          "format": "double",
          "type": "number"
        },
        "DimWidth": {
          "format": "double",
          "type": "number"
        },
        "DimDepth": {
          "format": "double",
          "type": "number"
        },
        "Weight": {
          "format": "double",
          "type": "number"
        },
        "PackageGroupId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "TaxRate": {
          "format": "double",
          "type": "number"
        },
        "StockItemId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "StockItemIntId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Inventory_GetInventoryItemsCompositionByIdsRequest": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/GetInventoryItemsCompositionByIdsRequest",
          "description": "Object with InventoryItemIds"
        }
      }
    },
    "GetInventoryItemsCompositionByIdsRequest": {
      "type": "object",
      "properties": {
        "InventoryItemIds": {
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        }
      }
    },
    "GetInventoryItemsCompositionByIdsResponse": {
      "type": "object",
      "properties": {
        "InventoryItemsCompositionByIds": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/StockItemComposition"
            }
          }
        }
      }
    },
    "Inventory_CreateInventoryItemCompositionsRequest": {
      "type": "object",
      "properties": {
        "inventoryItemCompositions": {
          "description": "stockItem compositions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StockItemComposition"
          }
        }
      }
    },
    "Inventory_UpdateInventoryItemCompositionsRequest": {
      "type": "object",
      "properties": {
        "inventoryItemCompositions": {
          "description": "stockItem compositions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StockItemComposition"
          }
        }
      }
    },
    "Inventory_DeleteInventoryItemCompositionsRequest": {
      "type": "object",
      "properties": {
        "stockItemId": {
          "format": "uuid",
          "description": "Id of StockItem",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "inventoryItemCompositionIds": {
          "description": "stockItem composition ids",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        }
      }
    },
    "Inventory_GetInventoryItemExtendedPropertiesRequest": {
      "type": "object",
      "properties": {
        "inventoryItemId": {
          "format": "uuid",
          "description": "stockitem id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "propertyParams": {
          "$ref": "#/definitions/GetExtendedPropertyFilter",
          "description": "Optional parameters to look for specific PropertyName and PropertyType"
        }
      }
    },
    "GetExtendedPropertyFilter": {
      "type": "object",
      "properties": {
        "PropertyName": {
          "type": "string"
        },
        "PropertyType": {
          "type": "string"
        }
      }
    },
    "StockItemExtendedProperty": {
      "type": "object",
      "properties": {
        "pkRowId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "fkStockItemId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ProperyName": {
          "type": "string"
        },
        "PropertyValue": {
          "type": "string"
        },
        "PropertyType": {
          "type": "string"
        }
      }
    },
    "Inventory_CreateInventoryItemExtendedPropertiesRequest": {
      "type": "object",
      "properties": {
        "inventoryItemExtendedProperties": {
          "description": "list of stockitem Extended Properties",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StockItemExtendedPropertyUpsertItem"
          }
        }
      }
    },
    "StockItemExtendedPropertyUpsertItem": {
      "description": "Stock item extended property",
      "type": "object",
      "properties": {
        "fkStockItemId": {
          "format": "uuid",
          "description": "Stock Item ID, optional if SKU provided",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "SKU": {
          "description": "Stock Item ID, optional if fkStockItemId provided",
          "type": "string"
        },
        "ProperyName": {
          "description": "Property name",
          "type": "string"
        },
        "PropertyValue": {
          "description": "Property value",
          "type": "string"
        },
        "PropertyType": {
          "description": "Property type",
          "type": "string"
        }
      }
    },
    "Inventory_UpdateInventoryItemExtendedPropertiesRequest": {
      "type": "object",
      "properties": {
        "inventoryItemExtendedProperties": {
          "description": "list of stockitem Extended Properties",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StockItemExtendedProperty"
          }
        }
      }
    },
    "Inventory_DeleteInventoryItemExtendedPropertiesRequest": {
      "type": "object",
      "properties": {
        "inventoryItemId": {
          "format": "uuid",
          "description": "Id of StockItem",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "inventoryItemExtendedPropertyIds": {
          "description": "list of stockitem Extended Properties",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        }
      }
    },
    "StockItemTitle": {
      "type": "object",
      "properties": {
        "pkRowId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Source": {
          "type": "string"
        },
        "SubSource": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        },
        "StockItemId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "StockItemIntId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Inventory_CreateInventoryItemTitlesRequest": {
      "type": "object",
      "properties": {
        "inventoryItemTitles": {
          "description": "list of stockitem Titles",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StockItemTitle"
          }
        }
      }
    },
    "Inventory_UpdateInventoryItemTitlesRequest": {
      "type": "object",
      "properties": {
        "inventoryItemTitles": {
          "description": "list of stockitem Titles",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StockItemTitle"
          }
        }
      }
    },
    "Inventory_DeleteInventoryItemTitlesRequest": {
      "type": "object",
      "properties": {
        "inventoryItemTitleIds": {
          "description": "list of stockitem Titles",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        }
      }
    },
    "Supplier": {
      "type": "object",
      "properties": {
        "pkSupplierID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "SupplierName": {
          "type": "string"
        },
        "ContactName": {
          "type": "string"
        },
        "Address": {
          "type": "string"
        },
        "AlternativeAddress": {
          "type": "string"
        },
        "City": {
          "type": "string"
        },
        "Region": {
          "type": "string"
        },
        "Country": {
          "type": "string"
        },
        "PostCode": {
          "type": "string"
        },
        "TelephoneNumber": {
          "type": "string"
        },
        "SecondaryTelNumber": {
          "type": "string"
        },
        "FaxNumber": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "WebPage": {
          "type": "string"
        },
        "Currency": {
          "type": "string"
        }
      }
    },
    "Inventory_AddSupplierRequest": {
      "type": "object",
      "properties": {
        "supplier": {
          "$ref": "#/definitions/Supplier",
          "description": "Details of supplier to be added. Set pkSupplierId to a new uniqueidentifier"
        }
      }
    },
    "Inventory_UpdateSupplierRequest": {
      "type": "object",
      "properties": {
        "supplier": {
          "$ref": "#/definitions/Supplier",
          "description": "Details of supplier to be updated. pkSupplierId is used to identify the supplier to update."
        }
      }
    },
    "Inventory_DeleteSuppliersRequest": {
      "type": "object",
      "properties": {
        "suppliersIds": {
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        }
      }
    },
    "StockItemSupplierStat": {
      "type": "object",
      "properties": {
        "IsDefault": {
          "type": "boolean"
        },
        "Supplier": {
          "type": "string"
        },
        "SupplierID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Code": {
          "type": "string"
        },
        "SupplierBarcode": {
          "type": "string"
        },
        "LeadTime": {
          "format": "int32",
          "type": "integer"
        },
        "PurchasePrice": {
          "format": "double",
          "type": "number"
        },
        "MinPrice": {
          "format": "double",
          "type": "number"
        },
        "MaxPrice": {
          "format": "double",
          "type": "number"
        },
        "AveragePrice": {
          "format": "double",
          "type": "number"
        },
        "AverageLeadTime": {
          "format": "double",
          "type": "number"
        },
        "SupplierMinOrderQty": {
          "format": "int32",
          "type": "integer"
        },
        "SupplierPackSize": {
          "format": "int32",
          "type": "integer"
        },
        "SupplierCurrency": {
          "type": "string"
        },
        "StockItemId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "StockItemIntId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Inventory_CreateStockSupplierStatRequest": {
      "type": "object",
      "properties": {
        "itemSuppliers": {
          "description": "List of StockItemSupplierStat",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StockItemSupplierStat"
          }
        }
      }
    },
    "Inventory_UpdateStockSupplierStatRequest": {
      "type": "object",
      "properties": {
        "itemSuppliers": {
          "description": "List of StockItemSupplierStat",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StockItemSupplierStat"
          }
        }
      }
    },
    "Inventory_DeleteStockSupplierStatRequest": {
      "type": "object",
      "properties": {
        "stockItemId": {
          "format": "uuid",
          "description": "Id of StockItem",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "itemSupplierIds": {
          "description": "List of StockItemSupplierStat",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        }
      }
    },
    "Inventory_CreateInventoryItemPricesRequest": {
      "type": "object",
      "properties": {
        "inventoryItemPrices": {
          "description": "List of stock item prices to create",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StockItemPrice"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "token": {
      "type": "apiKey",
      "description": "Authorization Header",
      "name": "Authorization",
      "in": "header"
    }
  }
}