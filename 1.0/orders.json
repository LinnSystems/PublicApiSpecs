{
  "swagger": "2.0",
  "info": {
    "version": "orders",
    "title": "Orders API"
  },
  "host": "eu-ext.linnworks.net",
  "schemes": [
    "https"
  ],
  "paths": {
    "/api/Orders/GetOrderDetailsByReferenceId": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "GetOrderDetailsByReferenceId",
        "description": "Retrieves a list of order details for a given order reference number, returns maximum of 50 orders.\r\nFor eBay orders, if Sellling Manager Pro sales number is available the order can be retrived by this number\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.ViewOrderDetailsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>250</b></span> / minute",
        "operationId": "GetOrderDetailsByReferenceId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ReferenceId",
            "in": "query",
            "description": "Order reference id, or SecondaryReferenceNumber",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrderDetails"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/GetOrderDetailsByNumOrderId": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "GetOrderDetailsByNumOrderId",
        "description": "Retrieves the order detail for a given order numeric id. If not found  empty class is returned.  \r\nFor working with open orders recommended to use OpenOrders/GetOpenOrdersDetails\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.ViewOrderDetailsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>250</b></span> / minute",
        "operationId": "GetOrderDetailsByNumOrderId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "OrderId",
            "in": "query",
            "description": "Order Id (numeric)",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OrderDetails"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/GetOrderById": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "GetOrderById",
        "description": "Retrieves the order detail for a unique system order id identifier (pkOrderId)\r\nFor working with open orders recommended to use OpenOrders/GetOpenOrdersDetails\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.ViewOrderDetailsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetOrderById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "pkOrderId",
            "in": "query",
            "description": "pkOrderId",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OrderDetails"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/GetOrdersById": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "GetOrdersById",
        "description": "Retrieves the order detail list for a list of order id identifiers (pkOrderId)\r\nFor working with open orders recommended to use OpenOrders/GetOpenOrdersDetails\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.ViewOrderDetailsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>250</b></span> / minute",
        "operationId": "GetOrdersById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Orders_GetOrdersByIdRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_GetOrdersByIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrderDetails"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/GetOrderPackagingCalculation": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "GetOrderPackagingCalculation",
        "description": "Retrieves order packaging, weight and dimension information with split packaging. The method can perform ad hoc recalculation and saving of any changes.\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.ViewOrderDetailsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetOrderPackagingCalculation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Orders to get packaging calculations for",
            "schema": {
              "$ref": "#/definitions/GetOrderPackagingCalculationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CalcOrderHeader"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/RecalculateSingleOrderPackaging": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "RecalculateSingleOrderPackaging",
        "description": "Designed to recalculate order packaging totals based on the object provided\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.ViewOrderDetailsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "RecalculateSingleOrderPackaging",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Orders_RecalculateSingleOrderPackagingRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_RecalculateSingleOrderPackagingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CalcOrderHeader"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/SetOrderSplitPackagingManualOverwrite": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "SetOrderSplitPackagingManualOverwrite",
        "description": "Designed to save order split packaging after a manual override\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.ViewOrderDetailsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "SetOrderSplitPackagingManualOverwrite",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Orders_SetOrderSplitPackagingManualOverwriteRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_SetOrderSplitPackagingManualOverwriteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CalcOrderHeader"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/SetOrderPackaging": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "SetOrderPackaging",
        "description": "Designed to save order packaging when it has already been calculated but not saved or is a manual edit.\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.ViewOrderDetailsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "SetOrderPackaging",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Orders_SetOrderPackagingRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_SetOrderPackagingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CalcOrderHeader"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/GetOrderItemBatchsByOrderId": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "GetOrderItemBatchsByOrderId",
        "description": "Get a list of order item batch information for the specified order\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetOrderItemBatchsByOrderId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "description": "Made up of pkOrderId",
            "schema": {
              "$ref": "#/definitions/OrderItemBatchInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrderItemBatch"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/GetOrderItemBatchesByOrderIds": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "GetOrderItemBatchesByOrderIds",
        "description": "Get a list of order item batch information for the specified orders\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetOrderItemBatchesByOrderIds",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Made up of list of pkOrderIds",
            "schema": {
              "$ref": "#/definitions/GetOrderItemBatchesByOrderIdsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetOrderItemBatchesByOrderIdsResponse"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/GetAllAvailableOrderItemBatchsByOrderId": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "GetAllAvailableOrderItemBatchsByOrderId",
        "description": "Get a list of available batchs for each order item for the specified order\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetAllAvailableOrderItemBatchsByOrderId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Orders_GetAllAvailableOrderItemBatchsByOrderIdRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_GetAllAvailableOrderItemBatchsByOrderIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StockItemBatch"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/CreateOrders": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "CreateOrders",
        "description": "Creates new orders, once an order is paid it will be skipped on save. Returns list of pkOrderId's that were saved.\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "CreateOrders",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Orders_CreateOrdersRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_CreateOrdersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "format": "uuid",
                "type": "string",
                "example": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/AddExtendedProperties": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "AddExtendedProperties",
        "description": "Adds extended properties to a Linnworks orders.\r\nThis will NOT update properties that match on property name / value\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "AddExtendedProperties",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Orders_AddExtendedPropertiesRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_AddExtendedPropertiesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AddExtendedPropertiesResponse"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/CreateSerialisedValuesForOrderItems": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "CreateSerialisedValuesForOrderItems",
        "description": "Create serial data for the given orderItemRowIds\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "CreateSerialisedValuesForOrderItems",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Request with list of OrderItemSerialModel as property. Each entry represents an OrderItemRowId and a list of collections of serial data. Seperated by correlation (quantity for this row) \r\n            Note there can be one collection of serial data for each physical item being shipped - e.g. an order item with quantity of 2 can have 2 collections of serial data.\r\n            Note that values assigned to each OrderItemRowId will overwrite any existing data.",
            "schema": {
              "$ref": "#/definitions/CreateSerialisedValuesForOrderItemsRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/GetOrderItemRowSerialValuesByOrderIds": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "GetOrderItemRowSerialValuesByOrderIds",
        "description": "Get order item row serial information by requested order ids. Maximum requested orderIds is 25.\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetOrderItemRowSerialValuesByOrderIds",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "Request with collection of order ids as properties",
            "schema": {
              "$ref": "#/definitions/GetOrderItemRowSerialValuesByOrderIdsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetSerialisedValuesForOrdersResponse"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/GetAssignedOrderItemBatches": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "GetAssignedOrderItemBatches",
        "description": "\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetAssignedOrderItemBatches",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Orders_GetAssignedOrderItemBatchesRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_GetAssignedOrderItemBatchesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrderItemBatch"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/AssignOrderItemBatches": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "AssignOrderItemBatches",
        "description": "\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "AssignOrderItemBatches",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Orders_AssignOrderItemBatchesRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_AssignOrderItemBatchesRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/AssignStockToOrder": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "AssignStockToOrder",
        "description": "\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "AssignStockToOrder",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Orders_AssignStockToOrderRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_AssignStockToOrderRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrderItemBatch"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/GetUserLocationId": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "GetUserLocationId",
        "description": "Get the user location from settings\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.OpenOrdersNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetUserLocationId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "uuid",
              "type": "string",
              "example": "00000000-0000-0000-0000-000000000000"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/GetOpenOrders": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "GetOpenOrders",
        "description": "Get a paged list of open orders\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.OpenOrdersNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>250</b></span> / minute",
        "operationId": "GetOpenOrders",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Orders_GetOpenOrdersRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_GetOpenOrdersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GenericPagedResult_OpenOrder"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/GetAllOpenOrders": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "GetAllOpenOrders",
        "description": "Get the list of Id's of all open orders (without pagination)\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.OpenOrdersNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>250</b></span> / minute",
        "operationId": "GetAllOpenOrders",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Orders_GetAllOpenOrdersRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_GetAllOpenOrdersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "format": "uuid",
                "type": "string",
                "example": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/GetAllOpenOrdersBetweenIndex": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "GetAllOpenOrdersBetweenIndex",
        "description": "Get the list of open order id's between two index with the current filters and sorting\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.OpenOrdersNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetAllOpenOrdersBetweenIndex",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Orders_GetAllOpenOrdersBetweenIndexRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_GetAllOpenOrdersBetweenIndexRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "format": "uuid",
                "type": "string",
                "example": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/SetLabelsPrinted": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "SetLabelsPrinted",
        "description": "Mark a list of orders as label printed\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "SetLabelsPrinted",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Orders_SetLabelsPrintedRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_SetLabelsPrintedRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "format": "uuid",
                "type": "string",
                "example": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/SetInvoicesPrinted": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "SetInvoicesPrinted",
        "description": "Mark a list of orders as invoice printed. This operation can not be executed on locked or parked orders\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "SetInvoicesPrinted",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Orders_SetInvoicesPrintedRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_SetInvoicesPrintedRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "format": "uuid",
                "type": "string",
                "example": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/SetPickListPrinted": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "SetPickListPrinted",
        "description": "Sets the print flag for the given orders. This operation can not be executed on locked or parked orders\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.OpenOrdersNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "SetPickListPrinted",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Orders_SetPickListPrintedRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_SetPickListPrintedRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/RunRulesEngine": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "RunRulesEngine",
        "description": "Run Rules Engine on Open Orders\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "RunRulesEngine",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Orders_RunRulesEngineRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_RunRulesEngineRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "format": "uuid",
                "type": "string",
                "example": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/GetOrderItemComposition": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "GetOrderItemComposition",
        "description": "Get the detail (composition) of a specific order item\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetOrderItemComposition",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "query",
            "description": "Order id",
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "stockItemId",
            "in": "query",
            "description": "Stock item id",
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "fulfilmentCenter",
            "in": "query",
            "description": "Location to get the order item composition for",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OrderItem"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/ChangeOrderTag": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "ChangeOrderTag",
        "description": "Change the tag for the specific order list. Tags can be 1-6 for custom tags, or 7 to initialize a 'parked' status on the order.\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>250</b></span> / minute",
        "operationId": "ChangeOrderTag",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Orders_ChangeOrderTagRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_ChangeOrderTagRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "format": "uuid",
                "type": "string",
                "example": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/GetAvailableFolders": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "GetAvailableFolders",
        "description": "Get list of available folders that orders can be assigned to\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetAvailableFolders",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrderFolder"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/SetAvailableFolders": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "SetAvailableFolders",
        "description": "Set the list of available folders that orders can be assigned to\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "SetAvailableFolders",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Orders_SetAvailableFoldersRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_SetAvailableFoldersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrderFolder"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/AssignToFolder": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "AssignToFolder",
        "description": "Assign a list of orders to a specific folder. This operation can not be executed on locked or parked orders\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>250</b></span> / minute",
        "operationId": "AssignToFolder",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Orders_AssignToFolderRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_AssignToFolderRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "format": "uuid",
                "type": "string",
                "example": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/UnassignToFolder": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "UnassignToFolder",
        "description": "Unassign a list of orders to a specific folder. This operation can not be executed on locked or parked orders\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>250</b></span> / minute",
        "operationId": "UnassignToFolder",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Orders_UnassignToFolderRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_UnassignToFolderRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "format": "uuid",
                "type": "string",
                "example": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/GetOrderXmlJSTree": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "GetOrderXmlJSTree",
        "description": "Get order XML received from channel\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetOrderXmlJSTree",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "query",
            "description": "Order id",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/GetOrderXml": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "GetOrderXml",
        "description": "Get order XML received from channel\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>250</b></span> / minute",
        "operationId": "GetOrderXml",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "query",
            "description": "Order id",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrderXML"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/ChangeShippingMethod": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "ChangeShippingMethod",
        "description": "Change the shipping service (provided by a shipping courier) to a list of orders\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "ChangeShippingMethod",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Orders_ChangeShippingMethodRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_ChangeShippingMethodRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "format": "uuid",
                "type": "string",
                "example": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/ChangeStatus": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "ChangeStatus",
        "description": "Change the status to a list of orders\r\n0 = 'UNPAID'\r\n1 = 'PAID'\r\n2 = 'RETURN'\r\n3 = 'PENDING'\r\n4 = 'RESEND'\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "ChangeStatus",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Orders_ChangeStatusRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_ChangeStatusRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "format": "uuid",
                "type": "string",
                "example": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/LockOrder": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "LockOrder",
        "description": "Lock a list of orders\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "LockOrder",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Orders_LockOrderRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_LockOrderRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/DeleteOrder": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "DeleteOrder",
        "description": "Delete a specific order\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.OpenOrders.DeleteOrdersNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "DeleteOrder",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Orders_DeleteOrderRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_DeleteOrderRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/CancelOrder": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "CancelOrder",
        "description": "Cancel a specific order\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "CancelOrder",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Orders_CancelOrderRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_CancelOrderRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/MoveToLocation": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "MoveToLocation",
        "description": "Move a list of orders to a specific location\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "MoveToLocation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Orders_MoveToLocationRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_MoveToLocationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MoveToLocationResult"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/ClearShippingLabelInfo": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "ClearShippingLabelInfo",
        "description": "Clear the shipping label info to a list of orders\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "ClearShippingLabelInfo",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Orders_ClearShippingLabelInfoRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_ClearShippingLabelInfoRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/KeyValuePair_Guid_String"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/ClearInvoicePrinted": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "ClearInvoicePrinted",
        "description": "Clear invoice printed flag for a list of orders. This operation can not be executed on locked or parked orders\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "ClearInvoicePrinted",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Orders_ClearInvoicePrintedRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_ClearInvoicePrintedRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "format": "uuid",
                "type": "string",
                "example": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/ClearPickListPrinted": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "ClearPickListPrinted",
        "description": "Clear invoice printed flag for a list of orders. This operation can not be executed on locked or parked orders\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>250</b></span> / minute",
        "operationId": "ClearPickListPrinted",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Orders_ClearPickListPrintedRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_ClearPickListPrintedRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "format": "uuid",
                "type": "string",
                "example": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/GetShippingMethods": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "GetShippingMethods",
        "description": "Get available shipping methods\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetShippingMethods",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ShippingMethod"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/GetPackagingGroups": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "GetPackagingGroups",
        "description": "Get available packaging groups\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetPackagingGroups",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PackageGroup"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/GetExtendedProperties": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "GetExtendedProperties",
        "description": "Get the extended properties for a specific order\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>250</b></span> / minute",
        "operationId": "GetExtendedProperties",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "query",
            "description": "Order id",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExtendedProperty"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/GetExtendedPropertyTypes": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "GetExtendedPropertyTypes",
        "description": "Get the available types of extended properties\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetExtendedPropertyTypes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/GetExtendedPropertyNames": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "GetExtendedPropertyNames",
        "description": "Get the available types of extended properties\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetExtendedPropertyNames",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/SetExtendedProperties": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "SetExtendedProperties",
        "description": "Set the extended properties for a specific order\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>250</b></span> / minute",
        "operationId": "SetExtendedProperties",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Orders_SetExtendedPropertiesRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_SetExtendedPropertiesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExtendedProperty"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/GetBatchPilots": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "GetBatchPilots",
        "description": "Get the list of available batch pilots\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetBatchPilots",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/KeyValuePair_Guid_String"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/GetOrder": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "GetOrder",
        "description": "Get a specific open order\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetOrder",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Orders_GetOrderRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_GetOrderRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OpenOrder"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/GetOrders": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "GetOrders",
        "description": "Get list of open orders\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetOrders",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Orders_GetOrdersRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_GetOrdersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OpenOrder"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/GetOrderAuditTrail": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "GetOrderAuditTrail",
        "description": "Get order audit trail\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>250</b></span> / minute",
        "operationId": "GetOrderAuditTrail",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "query",
            "description": "Order id",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrderAuditTrail"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/GetOrderAuditTrailsByIds": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "GetOrderAuditTrailsByIds",
        "description": "Returns a list of audit trails for the provided order ids\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetOrderAuditTrailsByIds",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetOrderAuditTrailsByIdsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetOrderAuditTrailsByIdsResponse"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/GetOrderNotes": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "GetOrderNotes",
        "description": "Get the order notes\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>250</b></span> / minute",
        "operationId": "GetOrderNotes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "query",
            "description": "Order id",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrderNote"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/GetOrdersNotes": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "GetOrdersNotes",
        "description": "\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetOrdersNotes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Orders_GetOrdersNotesRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_GetOrdersNotesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/OrderNote"
                }
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/GetOrderNoteTypes": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "GetOrderNoteTypes",
        "description": "\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetOrderNoteTypes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrderNoteType"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/SetOrderNotes": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "SetOrderNotes",
        "description": "Set the order notes for a specific order\r\nSetOrderNotes overwrites the existing order notes with those in the list provided. \r\nAny existing notes should be retrieved using GetOrderNotes and added to this list, so that they are not lost/overwritten.\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>250</b></span> / minute",
        "operationId": "SetOrderNotes",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Orders_SetOrderNotesRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_SetOrderNotesRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/AddOrdersNote": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "AddOrdersNote",
        "description": "Use this call to add a new note to orders\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "AddOrdersNote",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "request with a list of order ids as property",
            "schema": {
              "$ref": "#/definitions/AddOrdersNoteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AddOrdersNoteResponse"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/GetOrderRelations": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "GetOrderRelations",
        "description": "Get order relations\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>250</b></span> / minute",
        "operationId": "GetOrderRelations",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "query",
            "description": "Order id",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrderRelation"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/GetOrdersRelations": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "GetOrdersRelations",
        "description": "Get order relations for a list of orders.\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetOrdersRelations",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Orders_GetOrdersRelationsRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_GetOrdersRelationsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/OrderRelation"
                }
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/GetOrderItems": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "GetOrderItems",
        "description": "Get order items\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>250</b></span> / minute",
        "operationId": "GetOrderItems",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "query",
            "description": "Order id",
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "fulfilmentCenter",
            "in": "query",
            "description": "Current fulfilment center",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrderItem"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/GetOpenOrderItemsSuppliers": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "GetOpenOrderItemsSuppliers",
        "description": "Get items suppliers list for a specific order\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetOpenOrderItemsSuppliers",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "query",
            "description": "Order id",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/KeyValuePair_Guid_Guid"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/AddOrderItem": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "AddOrderItem",
        "description": "Add an item to a specific order.\r\nLine pricing is optional with the default values being\r\n- PricePerUnit: Stock item retail price\r\n- DiscountPercentage: 0\r\n- TaxRatePercentage: Stock item tax rate.\r\n- TaxInclusive: true\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>250</b></span> / minute",
        "operationId": "AddOrderItem",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Orders_AddOrderItemRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_AddOrderItemRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdateOrderItemResult"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/AddOrderService": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "AddOrderService",
        "description": "Add a service to an order\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "AddOrderService",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Orders_AddOrderServiceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdateOrderItemResult"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/UpdateOrderItem": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "UpdateOrderItem",
        "description": "Update an order item\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "UpdateOrderItem",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Orders_UpdateOrderItemRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_UpdateOrderItemRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdateOrderItemResult"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/RemoveOrderItem": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "RemoveOrderItem",
        "description": "Remove item from an order\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "RemoveOrderItem",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Orders_RemoveOrderItemRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_RemoveOrderItemRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdateOrderItemResult"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/GetCountries": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "GetCountries",
        "description": "Get list of available countries\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetCountries",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrderCountry"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/GetPaymentMethods": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "GetPaymentMethods",
        "description": "Get the available payment methods\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetPaymentMethods",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PaymentMethod"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/GetDefaultPaymentMethodIdForNewOrder": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "GetDefaultPaymentMethodIdForNewOrder",
        "description": "Get the default payment method for new direct orders\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetDefaultPaymentMethodIdForNewOrder",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "uuid",
              "type": "string",
              "example": "00000000-0000-0000-0000-000000000000"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/SetDefaultPaymentMethodIdForNewOrder": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "SetDefaultPaymentMethodIdForNewOrder",
        "description": "Set the default payment method for new direct orders\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "SetDefaultPaymentMethodIdForNewOrder",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Orders_SetDefaultPaymentMethodIdForNewOrderRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_SetDefaultPaymentMethodIdForNewOrderRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/SetPaymentMethods": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "SetPaymentMethods",
        "description": "Set the available payment methods\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "SetPaymentMethods",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Orders_SetPaymentMethodsRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_SetPaymentMethodsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PaymentMethod"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/CreateNewOrder": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "CreateNewOrder",
        "description": "Create an empty draft order. (Please see CreateOrders call)\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.OpenOrders.CreateOrdersNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "CreateNewOrder",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Orders_CreateNewOrderRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_CreateNewOrderRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OpenOrder"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/GetDraftOrders": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "GetDraftOrders",
        "description": "Get list of draft orders\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetDraftOrders",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "format": "uuid",
                "type": "string",
                "example": "00000000-0000-0000-0000-000000000000"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/CompleteOrder": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "CompleteOrder",
        "description": "Complete a specific order\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "CompleteOrder",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Orders_CompleteOrderRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_CompleteOrderRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/SplitOrder": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "SplitOrder",
        "description": "Split a specific order\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "SplitOrder",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Orders_SplitOrderRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_SplitOrderRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OpenOrder"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/MergeOrders": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "MergeOrders",
        "description": "Merge a list of orders into a new one\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.OpenOrders.MergeOrdersNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "MergeOrders",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Orders_MergeOrdersRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_MergeOrdersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OpenOrder"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/ProcessOrder": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "ProcessOrder",
        "description": "Process a specific order\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>250</b></span> / minute",
        "operationId": "ProcessOrder",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Orders_ProcessOrderRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_ProcessOrderRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProcessOrderResult"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/ProcessOrder_RequiredBatchScans": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "ProcessOrder_RequiredBatchScans",
        "description": "Update the order with the batch numbers scanned during process order (i.e. those items with dbo.StockItem.BatchNumberScanRequired set)\r\nbatches must be provided for all items in the order which require batch number scanning (including composite children)\r\nOverwrites any existing batch assignment for the required items\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "ProcessOrder_RequiredBatchScans",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Orders_ProcessOrder_RequiredBatchScansRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_ProcessOrder_RequiredBatchScansRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/ProcessOrdersInBatch": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "ProcessOrdersInBatch",
        "description": "Process a list of orders\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>250</b></span> / minute",
        "operationId": "ProcessOrdersInBatch",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Orders_ProcessOrdersInBatchRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_ProcessOrdersInBatchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProcessOrderResult"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/ProcessFulfilmentCentreOrder": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "ProcessFulfilmentCentreOrder",
        "description": "Process Orders associated with a Fulfilment Centre\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.OpenOrdersNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>250</b></span> / minute",
        "operationId": "ProcessFulfilmentCentreOrder",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Orders_ProcessFulfilmentCentreOrderRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_ProcessFulfilmentCentreOrderRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProcessOrderResult"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/SetOrderGeneralInfo": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "SetOrderGeneralInfo",
        "description": "Update the general info of a specific order\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>250</b></span> / minute",
        "operationId": "SetOrderGeneralInfo",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Orders_SetOrderGeneralInfoRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_SetOrderGeneralInfoRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/SetOrderShippingInfo": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "SetOrderShippingInfo",
        "description": "Update the shipping info of a specific order\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>250</b></span> / minute",
        "operationId": "SetOrderShippingInfo",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Orders_SetOrderShippingInfoRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_SetOrderShippingInfoRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdateTotalsResult"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/SetOrderCustomerInfo": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "SetOrderCustomerInfo",
        "description": "Update the customer info of a specific order\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "SetOrderCustomerInfo",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Orders_SetOrderCustomerInfoRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_SetOrderCustomerInfoRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OrderTotalsInfo"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/SetOrderTotalsInfo": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "SetOrderTotalsInfo",
        "description": "Update totals info of a specific order\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "SetOrderTotalsInfo",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Orders_SetOrderTotalsInfoRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_SetOrderTotalsInfoRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/ValidateCoupon": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "ValidateCoupon",
        "description": "Validate a coupon\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "ValidateCoupon",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Orders_ValidateCouponRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_ValidateCouponRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CouponValidationResult"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/AddCoupon": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "AddCoupon",
        "description": "Add a coupon to a specific order\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "AddCoupon",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Orders_AddCouponRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_AddCouponRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdateOrderItemResult"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/UpdateBillingAddress": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "UpdateBillingAddress",
        "description": "Update the billing address of a specific order\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "UpdateBillingAddress",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Orders_UpdateBillingAddressRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_UpdateBillingAddressRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/SetAdditionalInfo": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "SetAdditionalInfo",
        "description": "Overwrites the existing order item additional info\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>250</b></span> / minute",
        "operationId": "SetAdditionalInfo",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Orders_SetAdditionalInfoRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_SetAdditionalInfoRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/UpdateAdditionalInfo": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "UpdateAdditionalInfo",
        "description": "Updates additional info of a specific item\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.OpenOrdersNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>250</b></span> / minute",
        "operationId": "UpdateAdditionalInfo",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Orders_UpdateAdditionalInfoRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_UpdateAdditionalInfoRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/GetOrderViews": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "GetOrderViews",
        "description": "Get open order views\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetOrderViews",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserOrderView"
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/GetOrderView": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "GetOrderView",
        "description": "Get a specific open order view\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetOrderView",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "pkViewId",
            "in": "query",
            "description": "View id",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "markAsLatestViewed",
            "in": "query",
            "description": "Mark it in the database as latest viewer",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserOrderView"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/SaveOrderView": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "SaveOrderView",
        "description": "Update a open order view\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "SaveOrderView",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Orders_SaveOrderViewRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_SaveOrderViewRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/CustomerLookUp": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "CustomerLookUp",
        "description": "Get a list of possible addresses based on a search\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "CustomerLookUp",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "field",
            "in": "query",
            "description": "Field to search by",
            "type": "string"
          },
          {
            "name": "txt",
            "in": "query",
            "description": "Text to find",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomerAddress"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/GetLinkedItems": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "GetLinkedItems",
        "description": "Get linked items to another one\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetLinkedItems",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "itemId",
            "in": "query",
            "description": "Item id (pkStockItemId)",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LinkedItem"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/UpdateLinkItem": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "UpdateLinkItem",
        "description": "Update linked item\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "UpdateLinkItem",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "Orders_UpdateLinkItemRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_UpdateLinkItemRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/CreateNewItemAndLink": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "CreateNewItemAndLink",
        "description": "Create a new item and link it to a specific stock item\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "CreateNewItemAndLink",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Orders_CreateNewItemAndLinkRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_CreateNewItemAndLinkRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "uuid",
              "type": "string",
              "example": "00000000-0000-0000-0000-000000000000"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/GetOrderPackagingSplit": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "GetOrderPackagingSplit",
        "description": "Get a possible order split by packaging\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>250</b></span> / minute",
        "operationId": "GetOrderPackagingSplit",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "query",
            "description": "Order id",
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "openOrdersOnly",
            "in": "query",
            "description": "Whether to search open orders only, or all orders",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrderPackagingSplit"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/SetOrderPackagingSplit": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "SetOrderPackagingSplit",
        "description": "Split an order by packaging\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "SetOrderPackagingSplit",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Orders_SetOrderPackagingSplitRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_SetOrderPackagingSplitRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdateTotalsResult"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/GetOpenOrderIdByOrderOrReferenceId": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "GetOpenOrderIdByOrderOrReferenceId",
        "description": "Get an order by reference number or order number\n<b>Permissions Required: </b> GlobalPermissions.OrderBookNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetOpenOrderIdByOrderOrReferenceId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Orders_GetOpenOrderIdByOrderOrReferenceIdRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_GetOpenOrderIdByOrderOrReferenceIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "uuid",
              "type": "string",
              "example": "00000000-0000-0000-0000-000000000000"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/ProcessOrderByOrderOrReferenceId": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "ProcessOrderByOrderOrReferenceId",
        "description": "\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.DespatchConsoleNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "ProcessOrderByOrderOrReferenceId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Orders_ProcessOrderByOrderOrReferenceIdRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_ProcessOrderByOrderOrReferenceIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProcessOrderByOrderIdOrReferenceResponse"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/Orders/GetOpenOrdersByItemBarcode": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "GetOpenOrdersByItemBarcode",
        "description": "Get orders by order item barcode\n<b>Permissions Required: </b> GlobalPermissions.OrderBookNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetOpenOrdersByItemBarcode",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Orders_GetOpenOrdersByItemBarcodeRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Orders_GetOpenOrdersByItemBarcodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/KeyValuePair_List_OrderSummary_String"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    }
  },
  "definitions": {
    "OrderDetails": {
      "type": "object",
      "properties": {
        "OrderId": {
          "format": "uuid",
          "description": "Order ID (pkOrderId)",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "NumOrderId": {
          "format": "int32",
          "description": "Linnworks order number",
          "type": "integer"
        },
        "Processed": {
          "description": "If order is processed",
          "type": "boolean"
        },
        "ProcessedDateTime": {
          "format": "date-time",
          "description": "Date and time when order was processed",
          "type": "string"
        },
        "FulfilmentLocationId": {
          "format": "uuid",
          "description": "Location ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "GeneralInfo": {
          "$ref": "#/definitions/OrderGeneralInfo",
          "description": "General information about order"
        },
        "ShippingInfo": {
          "$ref": "#/definitions/OrderShippingInfo",
          "description": "Order shipping information"
        },
        "CustomerInfo": {
          "$ref": "#/definitions/OrderCustomerInfo",
          "description": "Order Customer information (Name, email etc)"
        },
        "TotalsInfo": {
          "$ref": "#/definitions/OrderTotalsInfo",
          "description": "Order totals information"
        },
        "ExtendedProperties": {
          "description": "Extended properties of an order",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtendedProperty"
          }
        },
        "FolderName": {
          "description": "Folder names assigned to an order",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Items": {
          "description": "List of order items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderItem"
          }
        },
        "Notes": {
          "description": "List of order notes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderNote"
          }
        },
        "PaidDateTime": {
          "format": "date-time",
          "description": "Date and time when the order was marked as paid",
          "type": "string"
        },
        "TaxId": {
          "description": "Buyer's tax number.",
          "type": "string"
        }
      }
    },
    "OrderGeneralInfo": {
      "description": "Order General Info class",
      "type": "object",
      "properties": {
        "Status": {
          "format": "int32",
          "description": "Order Status (0 = UNPAID, 1 = PAID,2 = RETURN,3 = PENDING,4 = RESEND)",
          "type": "integer"
        },
        "LabelPrinted": {
          "description": "Is label printed",
          "type": "boolean"
        },
        "LabelError": {
          "description": "Is there a label error",
          "type": "string"
        },
        "InvoicePrinted": {
          "description": "Is invoice printed",
          "type": "boolean"
        },
        "InvoicePrintError": {
          "description": "Is there invoice print error",
          "type": "string"
        },
        "PickListPrinted": {
          "description": "Is pick list printed",
          "type": "boolean"
        },
        "PickListPrintError": {
          "description": "Is there pick list print error",
          "type": "string"
        },
        "IsRuleRun": {
          "description": "If rules engine rule ran on an order",
          "type": "boolean"
        },
        "Notes": {
          "format": "int32",
          "description": "Quantity of order notes",
          "type": "integer"
        },
        "PartShipped": {
          "description": "If order partly shipped",
          "type": "boolean"
        },
        "Marker": {
          "format": "int32",
          "description": "Order marker (0 = NOT TAG,1 = Tag 1,2 = Tag 2,3 = Tag 3,4 = Tag 4,5 = Tag 5,6 = Tag 6,7 = Parked)",
          "type": "integer"
        },
        "IsParked": {
          "description": "Is the order parked?",
          "type": "boolean"
        },
        "Identifiers": {
          "description": "Order identifiers. [Prime | Scheduled]",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "ReferenceNum": {
          "description": "Order reference number (Channel defined)",
          "type": "string"
        },
        "SecondaryReference": {
          "description": "An additional reference number for the orderr (Used by some channels)",
          "type": "string"
        },
        "ExternalReferenceNum": {
          "description": "This is an additional reference number from the sales channel, typically used by eBay",
          "type": "string"
        },
        "ReceivedDate": {
          "format": "date-time",
          "description": "The date and time at which the order was placed on the sales channel",
          "type": "string"
        },
        "Source": {
          "description": "Order ChannelName/Source (e.g. EBAY)",
          "type": "string"
        },
        "SubSource": {
          "description": "Order Subsource (e.g. EBAY1)",
          "type": "string"
        },
        "SiteCode": {
          "description": "SiteCode used to differentiate between different sites from a single channel (eg. Amazon UK, Amazon US, Amazon FR...)",
          "type": "string"
        },
        "HoldOrCancel": {
          "description": "This shows whether the order has been marked as on hold, for processed orders if the order has been cancelled OnHold = 1",
          "type": "boolean"
        },
        "DespatchByDate": {
          "format": "date-time",
          "description": "Despatch by Date",
          "type": "string"
        },
        "ScheduledDelivery": {
          "$ref": "#/definitions/ScheduledDelivery",
          "description": "Scheduled delivery dates. Take priority over despatch by date"
        },
        "HasScheduledDelivery": {
          "type": "boolean",
          "readOnly": true
        },
        "Location": {
          "format": "uuid",
          "description": "Order location ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "NumItems": {
          "format": "int32",
          "description": "Quantity of order items",
          "type": "integer"
        },
        "PickwaveIds": {
          "description": "All related Pickwave Ids",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "PIIRedactionDays": {
          "format": "int32",
          "description": "Number of days after which an order is processed its pii will be redacted/obfuscate",
          "type": "integer"
        },
        "StockAllocationType": {
          "enum": [
            "NotAllocated",
            "Insuffient",
            "Partial",
            "Full",
            "OverAllocated"
          ],
          "type": "string"
        }
      }
    },
    "OrderShippingInfo": {
      "type": "object",
      "properties": {
        "Vendor": {
          "description": "Courier name (e.g. Royal Mail)",
          "type": "string"
        },
        "PostalServiceId": {
          "format": "uuid",
          "description": "Postal service ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "PostalServiceName": {
          "description": "Postal service name (e.g. Next day delivery)",
          "type": "string"
        },
        "TotalWeight": {
          "format": "double",
          "description": "Order total weight",
          "type": "number"
        },
        "ItemWeight": {
          "format": "double",
          "description": "If order is processed",
          "type": "number"
        },
        "PackageCategoryId": {
          "format": "uuid",
          "description": "Package category ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "PackageCategory": {
          "description": "Package category name",
          "type": "string"
        },
        "PackageTypeId": {
          "format": "uuid",
          "description": "Package type ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "PackageType": {
          "description": "Package type name",
          "type": "string"
        },
        "PostageCost": {
          "format": "double",
          "description": "Order postage cost",
          "type": "number"
        },
        "PostageCostExTax": {
          "format": "double",
          "description": "Order postage cost excluding tax",
          "type": "number"
        },
        "TrackingNumber": {
          "description": "Order tracking number provided by courier",
          "type": "string"
        },
        "ManualAdjust": {
          "description": "If there is an adjustment to shipping cost was made",
          "type": "boolean"
        }
      }
    },
    "OrderCustomerInfo": {
      "type": "object",
      "properties": {
        "ChannelBuyerName": {
          "description": "Username of customer (Comes from channel)",
          "type": "string"
        },
        "Address": {
          "$ref": "#/definitions/CustomerAddress",
          "description": "Customer address"
        },
        "BillingAddress": {
          "$ref": "#/definitions/CustomerAddress",
          "description": "Customer billing address"
        }
      }
    },
    "OrderTotalsInfo": {
      "type": "object",
      "properties": {
        "Subtotal": {
          "format": "double",
          "description": "Order subtotal",
          "type": "number"
        },
        "PostageCost": {
          "format": "double",
          "description": "Order postage cost",
          "type": "number"
        },
        "PostageCostExTax": {
          "format": "double",
          "description": "Order postage cost ex. tax",
          "type": "number"
        },
        "Tax": {
          "format": "double",
          "description": "Tax",
          "type": "number"
        },
        "TotalCharge": {
          "format": "double",
          "description": "Total charge",
          "type": "number"
        },
        "PaymentMethod": {
          "description": "Payment method",
          "type": "string"
        },
        "PaymentMethodId": {
          "format": "uuid",
          "description": "Payment method ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ProfitMargin": {
          "format": "double",
          "description": "Profit margin",
          "type": "number",
          "readOnly": true
        },
        "TotalDiscount": {
          "format": "double",
          "description": "Total discount applied to the order",
          "type": "number"
        },
        "Currency": {
          "description": "Order currency",
          "type": "string"
        },
        "CountryTaxRate": {
          "format": "double",
          "description": "Country tax rate",
          "type": "number"
        },
        "ConversionRate": {
          "format": "double",
          "description": "Currency conversion rate. Set at point of save by the currency",
          "type": "number"
        }
      }
    },
    "ExtendedProperty": {
      "type": "object",
      "properties": {
        "RowId": {
          "format": "uuid",
          "description": "Record row ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Name": {
          "description": "Extended property name",
          "type": "string"
        },
        "Value": {
          "description": "Extended property value",
          "type": "string"
        },
        "Type": {
          "description": "Extended property type",
          "type": "string"
        }
      }
    },
    "OrderItem": {
      "description": "Order item object",
      "type": "object",
      "properties": {
        "ItemId": {
          "format": "uuid",
          "description": "Stock Item ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ItemNumber": {
          "description": "Item number as on channel",
          "type": "string"
        },
        "SKU": {
          "description": "Product SKU",
          "type": "string"
        },
        "ItemSource": {
          "description": "Item source / channel name",
          "type": "string"
        },
        "Title": {
          "description": "Item title",
          "type": "string"
        },
        "Quantity": {
          "format": "int32",
          "description": "Quantity",
          "type": "integer"
        },
        "CategoryName": {
          "description": "Product category",
          "type": "string"
        },
        "CompositeAvailablity": {
          "format": "int32",
          "description": "Composite availability",
          "type": "integer"
        },
        "StockLevelsSpecified": {
          "description": "If stock level specified",
          "type": "boolean"
        },
        "OnOrder": {
          "format": "int32",
          "description": "Level due in purchase orders",
          "type": "integer"
        },
        "OnPurchaseOrder": {
          "$ref": "#/definitions/OrderItemOnOrder",
          "description": "Purchase order bound to this item"
        },
        "InOrderBook": {
          "format": "int32",
          "description": "Quantity currently in open orders",
          "type": "integer"
        },
        "Level": {
          "format": "int32",
          "description": "Current stock level",
          "type": "integer"
        },
        "MinimumLevel": {
          "format": "int32",
          "description": "Minimum level",
          "type": "integer"
        },
        "AvailableStock": {
          "format": "int32",
          "description": "Currently available stock level (Level-InOrderBook)",
          "type": "integer"
        },
        "PricePerUnit": {
          "format": "double",
          "description": "Unit price",
          "type": "number"
        },
        "UnitCost": {
          "format": "double",
          "description": "Unit cost",
          "type": "number"
        },
        "DespatchStockUnitCost": {
          "format": "double",
          "description": "Despatch stock unit cost",
          "type": "number"
        },
        "Discount": {
          "format": "double",
          "description": "Percentage (0%, 10%, 20%, etc...)",
          "type": "number"
        },
        "Tax": {
          "format": "double",
          "description": "Actual tax value on an item",
          "type": "number",
          "readOnly": true
        },
        "TaxRate": {
          "format": "double",
          "description": "Tax rate",
          "type": "number"
        },
        "Cost": {
          "format": "double",
          "description": "Total item cost (exc tax)",
          "type": "number"
        },
        "CostIncTax": {
          "format": "double",
          "description": "Total item cost (inc tax)",
          "type": "number"
        },
        "CompositeSubItems": {
          "description": "List of order items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderItem"
          }
        },
        "IsService": {
          "description": "if item is a service",
          "type": "boolean"
        },
        "SalesTax": {
          "format": "double",
          "description": "Sales Tax",
          "type": "number"
        },
        "TaxCostInclusive": {
          "description": "If tax is included in a cost",
          "type": "boolean"
        },
        "PartShipped": {
          "description": "If order is partly shipped",
          "type": "boolean"
        },
        "Weight": {
          "format": "double",
          "description": "Order weight",
          "type": "number"
        },
        "BarcodeNumber": {
          "description": "Product barcode",
          "type": "string"
        },
        "Market": {
          "format": "int32",
          "description": "Market",
          "type": "integer"
        },
        "ChannelSKU": {
          "description": "Channel product SKU",
          "type": "string"
        },
        "ChannelTitle": {
          "description": "Channel product title",
          "type": "string"
        },
        "DiscountValue": {
          "format": "double",
          "type": "number",
          "readOnly": true
        },
        "HasImage": {
          "description": "If item got an image",
          "type": "boolean",
          "readOnly": true
        },
        "ImageId": {
          "format": "uuid",
          "description": "Image ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "AdditionalInfo": {
          "description": "List of order item options",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderItemOption"
          }
        },
        "StockLevelIndicator": {
          "format": "int32",
          "description": "Stock level indicator",
          "type": "integer"
        },
        "ShippingCost": {
          "format": "double",
          "description": "If batch number scan required",
          "type": "number"
        },
        "PartShippedQty": {
          "format": "int32",
          "description": "ShippingCost",
          "type": "integer"
        },
        "ItemName": {
          "description": "PartShippedQty",
          "type": "string"
        },
        "BatchNumberScanRequired": {
          "description": "ItemName",
          "type": "boolean"
        },
        "SerialNumberScanRequired": {
          "description": "If serial number scan required",
          "type": "boolean"
        },
        "BinRack": {
          "description": "Binrack location",
          "type": "string"
        },
        "BinRacks": {
          "description": "List of BinRacks used for OrderItem",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderItemBinRack"
          }
        },
        "InventoryTrackingType": {
          "format": "int32",
          "description": "Identifies whether the item has a sell by date or other defined order in which inventory is to be sold",
          "type": "integer"
        },
        "isBatchedStockItem": {
          "description": "If item has batches",
          "type": "boolean",
          "readOnly": true
        },
        "IsWarehouseManaged": {
          "type": "boolean"
        },
        "IsUnlinked": {
          "type": "boolean",
          "readOnly": true
        },
        "StockItemIntId": {
          "format": "int32",
          "type": "integer"
        },
        "Boxes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StockItemBoxConfiguration"
          }
        },
        "AddedDate": {
          "format": "date-time",
          "type": "string"
        },
        "RowId": {
          "format": "uuid",
          "description": "Record row ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "OrderId": {
          "format": "uuid",
          "description": "Order ID (pkOrderID)",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "StockItemId": {
          "format": "uuid",
          "description": "Stock Item ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "OrderNote": {
      "type": "object",
      "properties": {
        "OrderNoteId": {
          "format": "uuid",
          "description": "Order note ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "OrderId": {
          "format": "uuid",
          "description": "Order Id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "NoteDate": {
          "format": "date-time",
          "description": "Date and time when note was added",
          "type": "string"
        },
        "Internal": {
          "description": "order note type (Internal or External)",
          "type": "boolean"
        },
        "Note": {
          "description": "Note's text",
          "type": "string"
        },
        "CreatedBy": {
          "description": "User that created note",
          "type": "string"
        },
        "NoteTypeId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Identifier": {
      "type": "object",
      "properties": {
        "IdentifierId": {
          "format": "int32",
          "description": "Internal identifier id. Use to update image and name.",
          "type": "integer"
        },
        "Name": {
          "description": "Name displayed where the tag is used",
          "type": "string"
        },
        "Tag": {
          "description": "Internal tag for identification purposes",
          "type": "string"
        },
        "IsCustom": {
          "description": "Is the tag user or system defined?",
          "type": "boolean"
        },
        "ImageId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ImageUrl": {
          "type": "string"
        }
      }
    },
    "ScheduledDelivery": {
      "type": "object",
      "properties": {
        "From": {
          "format": "date-time",
          "type": "string"
        },
        "To": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "CustomerAddress": {
      "type": "object",
      "properties": {
        "EmailAddress": {
          "description": "Customer's email address.",
          "type": "string"
        },
        "Address1": {
          "description": "First line of customer address.",
          "type": "string"
        },
        "Address2": {
          "description": "Second line of customer address.",
          "type": "string"
        },
        "Address3": {
          "description": "Third line of customer address.",
          "type": "string"
        },
        "Town": {
          "description": "Customer's town.",
          "type": "string"
        },
        "Region": {
          "description": "Customer's region.",
          "type": "string"
        },
        "PostCode": {
          "description": "Customer's postcode.",
          "type": "string"
        },
        "Country": {
          "description": "Customer's country.",
          "type": "string"
        },
        "Continent": {
          "description": "Customer's continent",
          "type": "string"
        },
        "FullName": {
          "description": "Customer's first and second name.",
          "type": "string"
        },
        "Company": {
          "description": "Customer's company name.",
          "type": "string"
        },
        "PhoneNumber": {
          "description": "Customer's telephone number.",
          "type": "string"
        },
        "CountryId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "OrderItemOnOrder": {
      "type": "object",
      "properties": {
        "pkPurchaseItemId": {
          "format": "uuid",
          "description": "Primary key of the bound",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Rowid": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "pkPurchaseId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ExternalInvoiceNumber": {
          "type": "string"
        },
        "fkSupplierId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "DateOfDelivery": {
          "format": "date-time",
          "type": "string"
        },
        "QuotedDeliveryDate": {
          "format": "date-time",
          "type": "string"
        },
        "SupplierName": {
          "type": "string"
        },
        "fkLocationId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "OrderItemOption": {
      "type": "object",
      "properties": {
        "pkOptionId": {
          "format": "uuid",
          "description": "Option ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Property": {
          "description": "Option property",
          "type": "string"
        },
        "Value": {
          "description": "Value of the option",
          "type": "string"
        }
      }
    },
    "OrderItemBinRack": {
      "description": "OrderItem BinRack",
      "type": "object",
      "properties": {
        "Quantity": {
          "format": "int32",
          "description": "Quantity for BinRack per Location",
          "type": "integer"
        },
        "BinRack": {
          "description": "BinRack",
          "type": "string"
        },
        "Location": {
          "format": "uuid",
          "description": "LocationId of the BinRack",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "BatchId": {
          "format": "int32",
          "description": "If the item is batched, identifies the batch number",
          "type": "integer"
        },
        "OrderItemBatchId": {
          "format": "int32",
          "description": "If the item is batched, identifies the unique order item batch row",
          "type": "integer"
        }
      }
    },
    "StockItemBoxConfiguration": {
      "description": "Stock item box configuration, dimennsions",
      "type": "object",
      "properties": {
        "BoxId": {
          "format": "int32",
          "description": "Unique box id.",
          "type": "integer"
        },
        "StockItemIntId": {
          "format": "int32",
          "description": "",
          "type": "integer"
        },
        "BoxName": {
          "description": "Box name max 16 characters",
          "type": "string"
        },
        "Width": {
          "format": "double",
          "description": "Width of the box",
          "type": "number"
        },
        "Height": {
          "format": "double",
          "description": "Height of the box",
          "type": "number"
        },
        "Length": {
          "format": "double",
          "description": "Depth of the box",
          "type": "number"
        },
        "Weight": {
          "format": "double",
          "description": "Total weight of the box.",
          "type": "number"
        },
        "ValuePercentage": {
          "format": "double",
          "description": "Value break down percentage",
          "type": "number"
        },
        "Barcode": {
          "description": "Box barcode, max 64 characters.",
          "type": "string"
        },
        "PackagingTypeId": {
          "format": "uuid",
          "description": "Packaging type id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "LogicalDelete": {
          "description": "IsDeleted flag.",
          "type": "boolean"
        }
      }
    },
    "Orders_GetOrdersByIdRequest": {
      "type": "object",
      "properties": {
        "pkOrderIds": {
          "description": "List of order ids (pkOrderId)",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        }
      }
    },
    "GetOrderPackagingCalculationRequest": {
      "description": "Request class for GetOrderPackagingCalculationRequest method in Orders controller",
      "type": "object",
      "properties": {
        "pkOrderIds": {
          "description": "List of order ids for which the packaging information should be returned, recalculated, saved",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "Recalculate": {
          "description": "Flag to indicate that recalculation is necessary",
          "type": "boolean"
        },
        "SaveRecalculation": {
          "description": "Flag to indicate that after recalculation the results should be saved back to the database",
          "type": "boolean"
        }
      }
    },
    "CalcOrderHeader": {
      "description": "Class represents a single instance of an order and its header packaging information. Note that if the order contains split packaging fkPackagingTypeId will be Empty Guid",
      "type": "object",
      "properties": {
        "pkOrderID": {
          "format": "uuid",
          "description": "Order id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "nOrderId": {
          "format": "int32",
          "description": "Numeric order id",
          "type": "integer"
        },
        "fkPostalServiceId": {
          "format": "uuid",
          "description": "Shipping service id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "fkCountryId": {
          "format": "uuid",
          "description": "Country Id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "cCountry": {
          "description": "Country Name",
          "type": "string"
        },
        "ItemWeight": {
          "format": "double",
          "description": "Total Item weight in the order",
          "type": "number"
        },
        "fkPackagingGroupId": {
          "format": "uuid",
          "description": "Packaging Group Id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "fkPackagingTypeId": {
          "format": "uuid",
          "description": "Calculated packaging type for the order",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "IsSplitPackaging": {
          "description": "Is the packaging split?",
          "type": "boolean",
          "readOnly": true
        },
        "PackagingWeight": {
          "format": "double",
          "description": "Packaging weight",
          "type": "number"
        },
        "TotalWeight": {
          "format": "double",
          "description": "Total weight, items + packaging weight",
          "type": "number"
        },
        "TotalWidth": {
          "format": "double",
          "description": "Total width of the order packaging. If null the recalculation was not performed yet. See documentation about how the dimensions of the order calculated.",
          "type": "number"
        },
        "TotalHeight": {
          "format": "double",
          "description": "Total Height of the order packaging. If null the recalculation was not performed yet. See documentation about how the dimensions of the order calculated.",
          "type": "number"
        },
        "TotalDepth": {
          "format": "double",
          "description": "Total Depth of the order packaging. If null the recalculation was not performed yet. See documentation about how the dimensions of the order calculated.",
          "type": "number"
        },
        "ManualAdjust": {
          "description": "Inidicates that order weights, packaging dimensions has been manually adjusted by the user and therefore automatic recalculation should not be performed for this order",
          "type": "boolean"
        },
        "CanAutoSplit": {
          "type": "boolean",
          "readOnly": true
        },
        "IsAutoSplit": {
          "description": "Was the packaging automatically split? Usually by the 3D Packaging method.",
          "type": "boolean"
        },
        "SplitPackageCount": {
          "format": "int32",
          "description": "Indicates the number of split packaging bins. If null, or 0 - no split packaging",
          "type": "integer"
        },
        "LabelPrinted": {
          "description": "Is Label Printed",
          "type": "boolean"
        },
        "CalculationHints": {
          "description": "Calculation comments. The recalculation routine will output some basic comments about how the calculation was performed in English.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Items": {
          "description": "List of order items (excluding composite parents)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CalcOrderItem"
          }
        },
        "Bins": {
          "description": "List of bins (split packaging)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CalcBin"
          }
        },
        "ThreeDimPackaging": {
          "$ref": "#/definitions/PackingResult",
          "description": "Result for volumetric packaging"
        },
        "DimMethod": {
          "description": "Dimension Calculation method",
          "enum": [
            "LEGACY",
            "MAX",
            "STACKED",
            "WEIGHTFIT",
            "THREEDIM_ALL",
            "THREEDIM_ITEMS"
          ],
          "type": "string"
        }
      }
    },
    "CalcOrderItem": {
      "description": "Class represents order item for package calculation purposes only",
      "type": "object",
      "properties": {
        "fkStockItemId": {
          "format": "uuid",
          "description": "Unique stock item identifier",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "fkOrderItemId": {
          "format": "uuid",
          "description": "Unique row identifier of the order item",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "StockItemIntId": {
          "format": "int32",
          "type": "integer"
        },
        "SKU": {
          "description": "SKU",
          "type": "string"
        },
        "nQty": {
          "format": "int32",
          "description": "Quantity of items",
          "type": "integer"
        },
        "ItemWeight": {
          "format": "double",
          "description": "Item weight",
          "type": "number"
        },
        "DimHeight": {
          "format": "double",
          "description": "Item height",
          "type": "number"
        },
        "DimWidth": {
          "format": "double",
          "description": "Item width",
          "type": "number"
        },
        "DimDepth": {
          "format": "double",
          "description": "item depth",
          "type": "number"
        },
        "PackageGroup": {
          "format": "uuid",
          "description": "Prefered Packaging group",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "fkCompositeParentRowId": {
          "format": "uuid",
          "description": "Indicates whether the item is a child of a composite, if EmptyGuid or Null not a child",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "IsCompositeChild": {
          "type": "boolean",
          "readOnly": true
        },
        "Boxes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StockItemBoxConfiguration"
          }
        }
      }
    },
    "CalcBin": {
      "description": "Class represents split packaging bin",
      "type": "object",
      "properties": {
        "pkBinId": {
          "format": "uuid",
          "description": "Bin Id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "TrackingNumber": {
          "description": "Bin Tracking number",
          "type": "string"
        },
        "LabelId": {
          "description": "Bin Label Id",
          "type": "string"
        },
        "Weight": {
          "format": "double",
          "description": "Bin total weight. If null, recalculation was not performed",
          "type": "number"
        },
        "PrintDate": {
          "format": "date-time",
          "description": "Label Print date",
          "type": "string"
        },
        "Cost": {
          "format": "double",
          "description": "Label cost if available",
          "type": "number"
        },
        "fkPackagingTypeId": {
          "format": "uuid",
          "description": "Bin allocated packaging type",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Width": {
          "format": "double",
          "description": "Bin width. If null, recalculation was not performed",
          "type": "number"
        },
        "Height": {
          "format": "double",
          "description": "Bin height. If null, recalculation was not performed",
          "type": "number"
        },
        "Depth": {
          "format": "double",
          "description": "Bin depth. If null, recalculation was not performed",
          "type": "number"
        },
        "PackagingWeight": {
          "format": "double",
          "description": "Bin packaging weight. If null, recalculation was not performed",
          "type": "number"
        },
        "ItemWeight": {
          "format": "double",
          "description": "Bin ItemWeight. If null, recalculation was not performed",
          "type": "number"
        },
        "ManualAdjust": {
          "description": "Indicates that the bin weights and dimensions have been manually adjusted by the user",
          "type": "boolean"
        },
        "Items": {
          "description": "List of order item ids in the bin and their quantities",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CalcBinItem"
          }
        }
      }
    },
    "PackingResult": {
      "type": "object",
      "properties": {
        "TotalPackages": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "Packages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PackageResult"
          }
        },
        "UnpackedItems": {
          "type": "object",
          "additionalProperties": {
            "format": "int32",
            "type": "integer"
          }
        }
      }
    },
    "CalcBinItem": {
      "description": "Class represents order item in the bin",
      "type": "object",
      "properties": {
        "ShippingOrderItemId": {
          "format": "int32",
          "description": "Bin Item Id",
          "type": "integer"
        },
        "BinId": {
          "format": "uuid",
          "description": "Package Id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "fkOrderItemId": {
          "format": "uuid",
          "description": "Order Item Id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "BoxId": {
          "format": "int32",
          "description": "Item Part Id",
          "type": "integer"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "PackageResult": {
      "type": "object",
      "properties": {
        "PackagingId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Width": {
          "format": "double",
          "type": "number"
        },
        "Height": {
          "format": "double",
          "type": "number"
        },
        "Depth": {
          "format": "double",
          "type": "number"
        },
        "ItemWeight": {
          "format": "double",
          "type": "number"
        },
        "PackagingWeight": {
          "format": "double",
          "type": "number"
        },
        "Faces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Face"
          }
        },
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PackedItem"
          }
        },
        "LayerCount": {
          "format": "int32",
          "type": "integer"
        },
        "LayerFace": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Face"
          }
        },
        "IsManualPackage": {
          "type": "boolean"
        }
      }
    },
    "Face": {
      "type": "object",
      "properties": {
        "TopLeft": {
          "$ref": "#/definitions/PointF"
        },
        "BottomLeft": {
          "$ref": "#/definitions/PointF"
        },
        "TopRight": {
          "$ref": "#/definitions/PointF"
        },
        "BottomRight": {
          "$ref": "#/definitions/PointF"
        }
      }
    },
    "PackedItem": {
      "type": "object",
      "properties": {
        "ID": {
          "format": "uuid",
          "type": "string",
          "readOnly": true,
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "PkStockItemId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "SKU": {
          "type": "string"
        },
        "Width": {
          "format": "double",
          "type": "number"
        },
        "Height": {
          "format": "double",
          "type": "number"
        },
        "Depth": {
          "format": "double",
          "type": "number"
        },
        "Weight": {
          "format": "double",
          "type": "number"
        },
        "X": {
          "format": "double",
          "type": "number"
        },
        "Y": {
          "format": "double",
          "type": "number"
        },
        "Z": {
          "format": "double",
          "type": "number"
        },
        "Layer": {
          "format": "int32",
          "type": "integer"
        },
        "Faces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Face"
          }
        }
      }
    },
    "PointF": {
      "type": "object",
      "properties": {
        "IsEmpty": {
          "type": "boolean",
          "readOnly": true
        },
        "X": {
          "format": "float",
          "type": "number"
        },
        "Y": {
          "format": "float",
          "type": "number"
        }
      }
    },
    "Orders_RecalculateSingleOrderPackagingRequest": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/CalcOrderHeader",
          "description": "Request object with data needed"
        }
      }
    },
    "Orders_SetOrderSplitPackagingManualOverwriteRequest": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/CalcOrderHeader",
          "description": "Request object with data to be saved in the database"
        }
      }
    },
    "Orders_SetOrderPackagingRequest": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/SetOrderPackagingRequest",
          "description": "Request object with data to be saved in the database"
        }
      }
    },
    "SetOrderPackagingRequest": {
      "description": "Request class for SetOrderPackaging method in Orders controller",
      "type": "object",
      "properties": {
        "fkPackagingGroupId": {
          "format": "uuid",
          "description": "Packaging group Id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "fkPackagingTypeId": {
          "format": "uuid",
          "description": "Packaging Type Id. It has to be one of types available for selected Group Id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "pkOrderId": {
          "format": "uuid",
          "description": "Order Id to set the order packaging data",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "TotalWeight": {
          "format": "double",
          "description": "Total weight of order packaging",
          "type": "number"
        },
        "ManualAdjust": {
          "description": "Indicate if this data is manually adjusted with the rest of fields or is auto calculated",
          "type": "boolean"
        },
        "IsAutoSplit": {
          "description": "Indicates whether the order should be auto split. Usually via the 3D packaging methods.",
          "type": "boolean"
        },
        "TotalDepth": {
          "format": "double",
          "description": "Total packaging depth",
          "type": "number"
        },
        "TotalHeight": {
          "format": "double",
          "description": "Total Height",
          "type": "number"
        },
        "TotalWidth": {
          "format": "double",
          "description": "Total Width",
          "type": "number"
        }
      }
    },
    "OrderItemBatchInfo": {
      "type": "object",
      "properties": {
        "pkOrderId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "OrderItemBatch": {
      "type": "object",
      "properties": {
        "OrderItemBatchId": {
          "format": "int32",
          "type": "integer"
        },
        "OrderItemRowId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "BatchInventoryId": {
          "format": "int32",
          "type": "integer"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer"
        },
        "Batch": {
          "$ref": "#/definitions/StockItemBatch"
        },
        "DespatchUnitValue": {
          "format": "double",
          "type": "number",
          "readOnly": true
        },
        "AssignmentType": {
          "enum": [
            "AUTO",
            "MANUAL"
          ],
          "type": "string"
        }
      }
    },
    "StockItemBatch": {
      "type": "object",
      "properties": {
        "BatchId": {
          "format": "int32",
          "description": "Batch ID",
          "type": "integer"
        },
        "SKU": {
          "description": "Product SKU",
          "type": "string"
        },
        "InventoryTrackingType": {
          "format": "int32",
          "description": "0 - None, 1 - Order by sell by date, 2 - Ordered by priority sequence",
          "type": "integer"
        },
        "StockItemId": {
          "format": "uuid",
          "description": "Product ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "BatchNumber": {
          "description": "Batch number",
          "type": "string"
        },
        "ExpiresOn": {
          "format": "date-time",
          "description": "Batch expiry date",
          "type": "string"
        },
        "SellBy": {
          "format": "date-time",
          "description": "Batch sell by date",
          "type": "string"
        },
        "Inventory": {
          "description": "Batch records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StockItemBatchInventory"
          }
        },
        "IsDeleted": {
          "description": "Is the batch deleted",
          "type": "boolean"
        }
      }
    },
    "StockItemBatchInventory": {
      "type": "object",
      "properties": {
        "BatchInventoryId": {
          "format": "int32",
          "description": "Stock item batch record ID",
          "type": "integer"
        },
        "BatchId": {
          "format": "int32",
          "description": "Batch ID",
          "type": "integer"
        },
        "StockLocationId": {
          "format": "uuid",
          "description": "Location ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "BinRack": {
          "description": "BinRack",
          "type": "string"
        },
        "PrioritySequence": {
          "format": "int32",
          "description": "Pick order",
          "type": "integer"
        },
        "Quantity": {
          "format": "int32",
          "description": "Quantity",
          "type": "integer"
        },
        "StockValue": {
          "format": "double",
          "description": "Current stock value",
          "type": "number"
        },
        "StartQuantity": {
          "format": "int32",
          "description": "Quantity originally booked in",
          "type": "integer",
          "readOnly": true
        },
        "PickedQuantity": {
          "format": "int32",
          "description": "Indicate how many units are now allocated in open orders",
          "type": "integer"
        },
        "BatchStatus": {
          "description": "Batch Status",
          "type": "string"
        },
        "IsDeleted": {
          "description": "Is BatchInventory deleted",
          "type": "boolean"
        },
        "WarehouseBinrackStandardType": {
          "format": "int32",
          "description": "Warehouse binrack standard type",
          "type": "integer"
        },
        "WarehouseBinrackTypeName": {
          "description": "Warehouse binrack type friendly name",
          "type": "string"
        },
        "InTransfer": {
          "format": "int32",
          "description": "Number of items in Transfer phase.",
          "type": "integer"
        },
        "BinRackId": {
          "format": "int32",
          "description": "Binrack Id (Use for WMS)",
          "type": "integer"
        },
        "WarehouseBinrackTypeId": {
          "format": "int32",
          "description": "Warehouse binrack type unique id.",
          "type": "integer"
        }
      }
    },
    "GetOrderItemBatchesByOrderIdsRequest": {
      "type": "object",
      "properties": {
        "pkOrderIds": {
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        }
      }
    },
    "GetOrderItemBatchesByOrderIdsResponse": {
      "type": "object",
      "properties": {
        "OrderBatches": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderItemBatchExtended"
          }
        }
      }
    },
    "OrderItemBatchExtended": {
      "type": "object",
      "properties": {
        "pkOrderId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "OrderId": {
          "format": "uuid",
          "type": "string",
          "readOnly": true,
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Batches": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderItemBatch"
          }
        }
      }
    },
    "Orders_GetAllAvailableOrderItemBatchsByOrderIdRequest": {
      "type": "object",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/AvailableOrderItemBatchsInfo",
          "description": "Made up of pkOrderId"
        }
      }
    },
    "AvailableOrderItemBatchsInfo": {
      "type": "object",
      "properties": {
        "pkOrderId": {
          "format": "uuid",
          "description": "Order ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "Orders_CreateOrdersRequest": {
      "type": "object",
      "properties": {
        "orders": {
          "description": "List of orders to create",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChannelOrder"
          }
        },
        "location": {
          "description": "Location to create the order",
          "type": "string"
        }
      }
    },
    "ChannelOrder": {
      "type": "object",
      "properties": {
        "UseChannelTax": {
          "description": "Validate if the tax should be overwritten on the order.",
          "type": "boolean"
        },
        "pkOrderId": {
          "format": "uuid",
          "description": "Used when IsNew is false to update the order",
          "type": "string",
          "readOnly": true,
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "AutomaticallyLinkBySKU": {
          "description": "When the order is saved it will try and link by SKU after trying by channel sku mapping.",
          "type": "boolean"
        },
        "AutomaticallyLinkByBarcode": {
          "description": "When the order is saved it will try and link by Barcode after trying by channel sku mapping.",
          "type": "boolean"
        },
        "AutomaticallyLinkByASIN": {
          "description": "When the order is saved it will try and link by ASIN after trying by channel sku mapping.",
          "type": "boolean"
        },
        "Site": {
          "description": "Used to determine the site of the order.",
          "type": "string"
        },
        "MatchPostalServiceTag": {
          "description": "Match postal service method by name",
          "type": "string"
        },
        "PostalServiceName": {
          "description": "Postal service name used for saving new postal services",
          "type": "string"
        },
        "SavePostalServiceIfNotExist": {
          "description": "Determines wither or not to save postal service if it does not exist",
          "type": "boolean"
        },
        "MatchPaymentMethodTag": {
          "description": "Match payment method by name",
          "type": "string"
        },
        "PaymentMethodName": {
          "description": "Payment method name used for saving new payment methods",
          "type": "string"
        },
        "SavePaymentMethodIfNotExist": {
          "description": "Determines wither or not to save payment methods if it does not exist",
          "type": "boolean"
        },
        "MappingSource": {
          "description": "Overrides the mapping source for the channel for example if the Source is 'AMAZON FBA' MappingSource can be used to override to 'AMAZON'",
          "type": "string"
        },
        "SourceOverride": {
          "description": "Overrides the mapping source for the channel in the instance that the order may have originally been downloaded with an alternative source value.",
          "type": "string"
        },
        "OrderState": {
          "description": "State the order should be saved e.g. hold, parked, none",
          "enum": [
            "None",
            "Hold",
            "Park"
          ],
          "type": "string"
        },
        "OrderFulfilmentType": {
          "description": "Defines type of fulfilment required for order",
          "enum": [
            "Manual",
            "POS",
            "DigitalOnly",
            "FulfilmentByChannel"
          ],
          "type": "string"
        },
        "OrderStatusType": {
          "description": "The status of the order on the channel",
          "enum": [
            "Unknown",
            "Pending",
            "Unshipped",
            "PartiallyShipped",
            "Shipped",
            "PartiallyCancelled",
            "Cancelled",
            "PartiallyRefunded",
            "Refunded"
          ],
          "type": "string"
        },
        "OrderStatus": {
          "description": "The raw status text of the order on the channel",
          "type": "string"
        },
        "PaymentStatus": {
          "description": "Payment status of the order, eg Paid\r\nIf Unpaid ChannelOrderAdapter.Save() will ensure order is PARKED",
          "enum": [
            "Unpaid",
            "Paid",
            "Cancelled"
          ],
          "type": "string"
        },
        "OrderItems": {
          "description": "List of order items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChannelOrderItem"
          }
        },
        "Locations": {
          "description": "The order location(s) on the channel",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChannelOrderLocation"
          }
        },
        "ExtendedProperties": {
          "description": "List of extended properties for the order",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChannelOrderExtendedProperty"
          }
        },
        "Notes": {
          "description": "List of notes for the order",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChannelOrderNote"
          }
        },
        "Source": {
          "description": "Source",
          "type": "string"
        },
        "SubSource": {
          "description": "SubSource",
          "type": "string"
        },
        "ChannelBuyerName": {
          "description": "Channel buyer username / name",
          "type": "string"
        },
        "ReferenceNumber": {
          "description": "Reference number, should be the same as the one used for despatches",
          "type": "string"
        },
        "ExternalReference": {
          "description": "External Reference",
          "type": "string"
        },
        "SecondaryReferenceNumber": {
          "description": "Secondary reference number",
          "type": "string"
        },
        "Currency": {
          "description": "Currency of the order, if value is null, empty or white space it will default to UNK",
          "type": "string"
        },
        "ConversionRate": {
          "format": "double",
          "description": "The currency conversion rate Sale/Base",
          "type": "number"
        },
        "ReceivedDate": {
          "format": "date-time",
          "description": "UTC received date/time of the order",
          "type": "string"
        },
        "UpdatedDate": {
          "format": "date-time",
          "description": "UTC date/time the order was last updated at",
          "type": "string"
        },
        "DispatchBy": {
          "format": "date-time",
          "description": "UTC date/time the order should be despatched by",
          "type": "string"
        },
        "PaidOn": {
          "format": "date-time",
          "description": "Date the order was paid for",
          "type": "string"
        },
        "PostalServiceCost": {
          "format": "double",
          "description": "Postal service cost inclusive of tax after discount",
          "type": "number"
        },
        "PostalServiceTaxRate": {
          "format": "double",
          "description": "Tax percent for the postal service cost, eg 20",
          "type": "number"
        },
        "PostalServiceDiscount": {
          "format": "double",
          "description": "Discount percent for the postal service cost, this will not calculate down the postal service cost",
          "type": "number"
        },
        "Discount": {
          "format": "double",
          "description": "This represents the final discount applied to the order, as a value (not a percentage), after all item-level discounts are applied. It will be split evenly across all order items",
          "type": "number"
        },
        "ItemsRefund": {
          "format": "double",
          "description": "The refund amount applied across all items",
          "type": "number"
        },
        "ShippingRefund": {
          "format": "double",
          "description": "The amount refunded for shipping (if known)",
          "type": "number"
        },
        "TotalRefund": {
          "format": "double",
          "description": "The total refund amount applied to the order across all items, services and order-level refunds",
          "type": "number"
        },
        "LineRefundAllocation": {
          "description": "The known refund allocation for the order lines",
          "enum": [
            "Unknown",
            "OrderLevel",
            "LineLevel",
            "Both"
          ],
          "type": "string"
        },
        "ShippingRefundAllocation": {
          "description": "The known refund allocation for the order shipping",
          "enum": [
            "Unknown",
            "OrderLevel",
            "LineLevel",
            "Both"
          ],
          "type": "string"
        },
        "BuyerTaxNumber": {
          "description": "The tax number of the buyer",
          "type": "string"
        },
        "DiscountType": {
          "description": "This represents how the discount will be split between items and postage. For an expsanation of each opiton, see the enum documentation",
          "enum": [
            "AllEvenly",
            "ItemsThenPostage",
            "PostageThenItems"
          ],
          "type": "string"
        },
        "DiscountTaxType": {
          "description": "This represents if the discount is applied before or after tax",
          "enum": [
            "DeductAfterTax",
            "DeductBeforeTax"
          ],
          "type": "string"
        },
        "BillingAddress": {
          "$ref": "#/definitions/ChannelAddress",
          "description": "The orders billing address"
        },
        "DeliveryAddress": {
          "$ref": "#/definitions/ChannelAddress",
          "description": "The order delivery address"
        },
        "DeliveryStartDate": {
          "format": "date-time",
          "description": "Channel specified delivery start date (do not set where is not provided)",
          "type": "string"
        },
        "DeliveryEndDate": {
          "format": "date-time",
          "description": "Channel specified delivery end date (do not set where is not provided)",
          "type": "string"
        },
        "OrderIdentifierTags": {
          "description": "Order identifier tags",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ForceReSaveFulfilledOrder": {
          "description": "Bool to re-save order",
          "type": "boolean"
        },
        "PIIRedactionDays": {
          "format": "int32",
          "description": "Days after order is processed when PII data will get redacted - NULL/Not Supplied will never redact",
          "type": "integer"
        }
      }
    },
    "ChannelOrderItem": {
      "description": "Channel order item",
      "type": "object",
      "properties": {
        "TaxCostInclusive": {
          "type": "boolean"
        },
        "UseChannelTax": {
          "description": "Validate if the tax should be overwritten on the order item.",
          "type": "boolean"
        },
        "PricePerUnit": {
          "format": "double",
          "description": "Individual price of the item",
          "type": "number"
        },
        "PostalServiceCost": {
          "format": "double",
          "description": "Postal service cost after discount",
          "type": "number"
        },
        "Qty": {
          "format": "int32",
          "description": "Quantity customer ordered",
          "type": "integer"
        },
        "TaxRate": {
          "format": "double",
          "description": "Tax Rate as a whole number eg. 20",
          "type": "number"
        },
        "LineDiscount": {
          "format": "double",
          "description": "Discount percentage on the line as a whole number eg. 10",
          "type": "number"
        },
        "LineRefund": {
          "format": "double",
          "description": "The refund amount applied on the line, excluding shipping charges",
          "type": "number"
        },
        "RefundQuantity": {
          "format": "double",
          "description": "The quantity of items refunded (can be decimalised)",
          "type": "number"
        },
        "ShippingRefund": {
          "format": "double",
          "description": "The shipping refund for this line (if known)",
          "type": "number"
        },
        "TotalRefund": {
          "format": "double",
          "description": "The total refund amount applied on the line-level, including any shipping charges",
          "type": "number"
        },
        "ItemNumber": {
          "description": "Unique line number",
          "type": "string"
        },
        "ChannelReferenceId": {
          "description": "The item reference id on the channel",
          "type": "string"
        },
        "ChannelSKU": {
          "description": "SKU of the item ordered on the channel",
          "type": "string"
        },
        "IsService": {
          "description": "Indicates the item is a service and not a physical item",
          "type": "boolean"
        },
        "ItemTitle": {
          "description": "Title of the item ordered, or service name",
          "type": "string"
        },
        "Options": {
          "description": "Options on the item ordered",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChannelOrderItemOption"
          }
        },
        "Taxes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChannelOrderItemTax"
          }
        }
      }
    },
    "ChannelOrderLocation": {
      "type": "object",
      "properties": {
        "ExternalReference": {
          "description": "The order location id on the channel.",
          "type": "string"
        },
        "ItemAllocations": {
          "description": "The item and quantity allocation.\r\nOnly required if order is multi-location.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChannelOrderItemLocationAllocation"
          }
        }
      }
    },
    "ChannelOrderExtendedProperty": {
      "type": "object",
      "properties": {
        "Name": {
          "description": "Extended property name",
          "type": "string"
        },
        "Value": {
          "description": "Extended property value",
          "type": "string"
        },
        "Type": {
          "description": "Extended property type",
          "type": "string"
        }
      }
    },
    "ChannelOrderNote": {
      "type": "object",
      "properties": {
        "Note": {
          "description": "Order Note",
          "type": "string"
        },
        "NoteEntryDate": {
          "format": "date-time",
          "description": "Creation Date of the note",
          "type": "string"
        },
        "NoteUserName": {
          "description": "User who added the note",
          "type": "string"
        },
        "Internal": {
          "description": "Declares if the note is an internal note",
          "type": "boolean"
        }
      }
    },
    "ChannelAddress": {
      "type": "object",
      "properties": {
        "MatchCountryCode": {
          "type": "string"
        },
        "MatchCountryName": {
          "type": "string"
        },
        "FullName": {
          "description": "Customer name",
          "type": "string"
        },
        "Company": {
          "description": "Customer's company name",
          "type": "string"
        },
        "Address1": {
          "description": "1st line of address",
          "type": "string"
        },
        "Address2": {
          "description": "2nd line of address",
          "type": "string"
        },
        "Address3": {
          "description": "3rd line of address",
          "type": "string"
        },
        "Town": {
          "description": "Town",
          "type": "string"
        },
        "Region": {
          "description": "Region, County, Area",
          "type": "string"
        },
        "PostCode": {
          "description": "Postcode",
          "type": "string"
        },
        "Country": {
          "description": "Country",
          "type": "string"
        },
        "PhoneNumber": {
          "description": "Customer's phone number",
          "type": "string"
        },
        "EmailAddress": {
          "description": "Customer's email address",
          "type": "string"
        },
        "isEmpty": {
          "description": "Check if the address is empty.",
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "ChannelOrderItemOption": {
      "type": "object",
      "properties": {
        "Property": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        }
      }
    },
    "ChannelOrderItemTax": {
      "type": "object",
      "properties": {
        "TaxType": {
          "type": "string"
        },
        "TaxValue": {
          "format": "double",
          "type": "number"
        },
        "IsSellerCollected": {
          "type": "boolean"
        }
      }
    },
    "ChannelOrderItemLocationAllocation": {
      "type": "object",
      "properties": {
        "ItemNumber": {
          "type": "string"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Orders_AddExtendedPropertiesRequest": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/AddExtendedPropertiesRequest",
          "description": "Request with OrderId and BasicExtendedProperties as fields"
        }
      }
    },
    "AddExtendedPropertiesRequest": {
      "type": "object",
      "properties": {
        "OrderId": {
          "format": "uuid",
          "description": "Order id of the order to append extended properties to",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ExtendedProperties": {
          "description": "Array of basic extended properties to be added",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BasicExtendedProperty"
          }
        }
      }
    },
    "BasicExtendedProperty": {
      "type": "object",
      "properties": {
        "Name": {
          "description": "Extended property name",
          "type": "string"
        },
        "Value": {
          "description": "Extended property value",
          "type": "string"
        },
        "Type": {
          "description": "Extended property type",
          "type": "string"
        }
      }
    },
    "AddExtendedPropertiesResponse": {
      "type": "object",
      "properties": {
        "ExtendedPropertiesInserted": {
          "format": "int32",
          "description": "The number of extended properties that were added",
          "type": "integer"
        },
        "Errors": {
          "description": "An array of errors created when attempting to add",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CreateSerialisedValuesForOrderItemsRequest": {
      "type": "object",
      "properties": {
        "OrderItemSerialData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderItemSerialModel"
          }
        }
      }
    },
    "OrderItemSerialModel": {
      "type": "object",
      "properties": {
        "OrderItemRowId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "CorrelationSerials": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/SerialModel"
            }
          }
        }
      }
    },
    "SerialModel": {
      "type": "object",
      "properties": {
        "Type": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        }
      }
    },
    "GetOrderItemRowSerialValuesByOrderIdsRequest": {
      "type": "object",
      "properties": {
        "OrderIds": {
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        }
      }
    },
    "GetSerialisedValuesForOrdersResponse": {
      "type": "object",
      "properties": {
        "OrderItemRowSerialValuesByOrderIds": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/OrderItemSerialModel"
            }
          }
        }
      }
    },
    "Orders_GetAssignedOrderItemBatchesRequest": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/GetAssignedOrderItemBatchesRequest"
        }
      }
    },
    "GetAssignedOrderItemBatchesRequest": {
      "type": "object",
      "properties": {
        "OrderItemRows": {
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        }
      }
    },
    "Orders_AssignOrderItemBatchesRequest": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/AssignOrderItemBatches"
        }
      }
    },
    "AssignOrderItemBatches": {
      "type": "object",
      "properties": {
        "Batches": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderItemBatch"
          }
        },
        "OrderId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "Orders_AssignStockToOrderRequest": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/AssignStockToOrderRequest"
        }
      }
    },
    "AssignStockToOrderRequest": {
      "type": "object",
      "properties": {
        "OrderId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "OrderItemRows": {
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "BatchAssignmentMode": {
          "description": "The way in which batches should be assigned",
          "enum": [
            "ALL",
            "AUTO_ONLY",
            "UNASSIGNED_ONLY"
          ],
          "type": "string"
        }
      }
    },
    "Orders_GetOpenOrdersRequest": {
      "type": "object",
      "properties": {
        "entriesPerPage": {
          "format": "int32",
          "description": "Entries per page",
          "type": "integer"
        },
        "pageNumber": {
          "format": "int32",
          "description": "Page number",
          "type": "integer"
        },
        "filters": {
          "$ref": "#/definitions/FieldsFilter",
          "description": "Filters to apply"
        },
        "sorting": {
          "description": "Sorting to apply",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldSorting"
          }
        },
        "fulfilmentCenter": {
          "format": "uuid",
          "description": "Location to get the orders for",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "additionalFilter": {
          "description": "Additional filter",
          "type": "string"
        }
      }
    },
    "FieldsFilter": {
      "description": "Fields filter",
      "type": "object",
      "properties": {
        "TextFields": {
          "description": "Text type field filters",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TextFieldFilter"
          }
        },
        "BooleanFields": {
          "description": "Boolean type field filters",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BooleanFieldFilter"
          }
        },
        "NumericFields": {
          "description": "Numerical type field filters",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NumericFieldFilter"
          }
        },
        "DateFields": {
          "description": "Date type field filters",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DateFieldFilter"
          }
        },
        "ListFields": {
          "description": "List type field filters",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ListFieldFilter"
          }
        },
        "FieldVisibility": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldVisibility"
          }
        }
      }
    },
    "FieldSorting": {
      "type": "object",
      "properties": {
        "FieldCode": {
          "description": "Field code to sort by",
          "enum": [
            "NONE",
            "GENERAL_INFO",
            "GENERAL_INFO_ORDER_ID",
            "GENERAL_INFO_REFERENCE_NUMBER",
            "GENERAL_INFO_CHANNEL_REFERENCE_NUMBER",
            "GENERAL_INFO_EXTERNAL_REFERENCE_NUMBER",
            "GENERAL_INFO_DATE",
            "GENERAL_INFO_SOURCE",
            "GENERAL_INFO_SUBSOURCE",
            "GENERAL_INFO_LABEL_PRINTED",
            "GENERAL_INFO_INVOICE_PRINTED",
            "GENERAL_INFO_PICK_LIST_PRINTED",
            "GENERAL_INFO_IS_RULE_RUN",
            "GENERAL_INFO_NOTES",
            "GENERAL_INFO_LOCKED",
            "GENERAL_INFO_PARKED",
            "GENERAL_INFO_PART_SHIPPED",
            "GENERAL_INFO_TAG",
            "GENERAL_INFO_IDENTIFIER",
            "GENERAL_INFO_STATUS",
            "GENERAL_INFO_DESPATCHBYDATE",
            "GENERAL_INFO_ITEMS_COUNT",
            "GENERAL_INFO_SHIPPING_LABEL_ERROR",
            "GENERAL_INFO_HAS_SHIPPING_LABEL_ERROR",
            "SHIPPING_INFORMATION",
            "SHIPPING_INFORMATION_VENDOR",
            "SHIPPING_INFORMATION_SERVICE",
            "SHIPPING_INFORMATION_WEIGHT",
            "SHIPPING_INFORMATION_PACKAGING_GROUP",
            "SHIPPING_INFORMATION_PACKAGING_TYPE",
            "SHIPPING_INFORMATION_COST",
            "SHIPPING_INFORMATION_TRACKING_NUMBER",
            "SHIPPING_INFORMATION_SERVICE_ID",
            "SHIPPING_SCHEDULED_DELIVERY_START",
            "SHIPPING_SCHEDULED_DELIVERY_END",
            "CUSTOMER",
            "CUSTOMER_ADDRESS_ADDRESS",
            "CUSTOMER_ADDRESS_FULL_NAME",
            "CUSTOMER_ADDRESS_COMPANY",
            "CUSTOMER_ADDRESS_POSTCODE",
            "CUSTOMER_ADDRESS_COUNTY",
            "CUSTOMER_ADDRESS_COUNTRY",
            "CUSTOMER_ADDRESS_COUNTRY_ZONE",
            "CUSTOMER_ADDRESS_ADDRESS1",
            "CUSTOMER_ADDRESS_ADDRESS2",
            "CUSTOMER_ADDRESS_ADDRESS3",
            "CUSTOMER_ADDRESS_TOWN",
            "CUSTOMER_EMAIL",
            "CUSTOMER_CHANNEL_BUYER_NAME",
            "CUSTOMER_PHONE",
            "CUSTOMER_BILLING_ADDRESS",
            "CUSTOMER_BILLING_ADDRESS_NAME",
            "CUSTOMER_BILLING_ADDRESS_COMPANY",
            "CUSTOMER_BILLING_ADDRESS_ADDRESS1",
            "CUSTOMER_BILLING_ADDRESS_ADDRESS2",
            "CUSTOMER_BILLING_ADDRESS_ADDRESS3",
            "CUSTOMER_BILLING_ADDRESS_TOWN",
            "CUSTOMER_BILLING_ADDRESS_REGION",
            "CUSTOMER_BILLING_ADDRESS_POSTCODE",
            "CUSTOMER_BILLING_ADDRESS_COUNTRY",
            "CUSTOMER_BILLING_EMAIL",
            "CUSTOMER_BILLING_PHONE",
            "TOTALS",
            "TOTALS_SUBTOTAL",
            "TOTALS_SHIPPING",
            "TOTALS_TAX",
            "TOTALS_TOTAL",
            "TOTALS_DISCOUNT",
            "TOTALS_CURRENCY",
            "TOTALS_PAYMENT_METHOD",
            "TOTALS_COUNTRY_TAX_RATE",
            "ORDER_TOTAL",
            "ORDER_TOTAL_TOTAL",
            "ORDER_TOTAL_CURRENCY",
            "ORDER_TAX",
            "ORDER_TAX_TOTAL",
            "ORDER_TAX_CURRENCY",
            "FOLDER",
            "FOLDERS",
            "JOB",
            "ITEMS",
            "ITEMS_IMAGE",
            "ITEMS_SKU",
            "ITEMS_ORIGINAL_SKU",
            "ITEMS_TITLE",
            "ITEMS_ORIGINAL_TITLE",
            "ITEMS_ITEM_NUMBER",
            "ITEMS_IS_SERVICE",
            "ITEMS_QUANTITY",
            "ITEMS_SOURCE",
            "ITEMS_LINE",
            "ITEMS_COST_INC_TAX",
            "ITEMS_COST",
            "ITEMS_SALES_TAX",
            "ITEMS_TAX_RATE",
            "ITEMS_CURRENCY",
            "ITEMS_CATEGORY",
            "ITEMS_BINRACK",
            "ITEMS_TAX_COST_INCLUSIVE",
            "ITEMS_DISCOUNT",
            "ITEMS_SUM_QUANTITY",
            "ITEMS_WEIGHT",
            "ITEMS_UNIT_COST",
            "ITEMS_PRICE_PER_UNIT",
            "ITEMS_BATCHED",
            "ITEMS_INVENTORY_TRACKING_TYPE",
            "ITEMS_BARCODE_NUMBER",
            "STOCK_LEVEL",
            "CAN_FULFIL",
            "HOT_BUTTONS",
            "HOT_BUTTON",
            "ADDITIONAL",
            "LOCATION_ID",
            "ITEMS_STOCKITEM_ID",
            "ITEMS_COMPOSITE_PARENT_ID",
            "GENERAL_INFO_STOCK_ALLOCATION",
            "GENERAL_INFO_NOTE",
            "GENERAL_INFO_NOTE_COUNT",
            "GENERAL_INFO_PICKWAVE_IDS",
            "FULFILLMENT",
            "FULFILLMENT_STATE",
            "FULFILLMENT_ADDITIONAL",
            "GENERAL_INFO_INVOICE_PRINT_ERROR",
            "GENERAL_INFO_PICK_LIST_PRINT_ERROR"
          ],
          "type": "string"
        },
        "Direction": {
          "description": "Sorting direction (Ascending:0, descending:1)",
          "enum": [
            "Ascending",
            "Descending"
          ],
          "type": "string"
        },
        "Order": {
          "format": "int32",
          "description": "Priority of sorting (e.g. sort by date first, then by status)",
          "type": "integer"
        }
      }
    },
    "TextFieldFilter": {
      "type": "object",
      "properties": {
        "Type": {
          "description": "Filter type",
          "enum": [
            "Equal",
            "Contains",
            "StartWith",
            "EndsWith"
          ],
          "type": "string"
        },
        "Text": {
          "description": "Filtering input",
          "type": "string"
        },
        "FieldCode": {
          "enum": [
            "NONE",
            "GENERAL_INFO",
            "GENERAL_INFO_ORDER_ID",
            "GENERAL_INFO_REFERENCE_NUMBER",
            "GENERAL_INFO_CHANNEL_REFERENCE_NUMBER",
            "GENERAL_INFO_EXTERNAL_REFERENCE_NUMBER",
            "GENERAL_INFO_DATE",
            "GENERAL_INFO_SOURCE",
            "GENERAL_INFO_SUBSOURCE",
            "GENERAL_INFO_LABEL_PRINTED",
            "GENERAL_INFO_INVOICE_PRINTED",
            "GENERAL_INFO_PICK_LIST_PRINTED",
            "GENERAL_INFO_IS_RULE_RUN",
            "GENERAL_INFO_NOTES",
            "GENERAL_INFO_LOCKED",
            "GENERAL_INFO_PARKED",
            "GENERAL_INFO_PART_SHIPPED",
            "GENERAL_INFO_TAG",
            "GENERAL_INFO_IDENTIFIER",
            "GENERAL_INFO_STATUS",
            "GENERAL_INFO_DESPATCHBYDATE",
            "GENERAL_INFO_ITEMS_COUNT",
            "GENERAL_INFO_SHIPPING_LABEL_ERROR",
            "GENERAL_INFO_HAS_SHIPPING_LABEL_ERROR",
            "SHIPPING_INFORMATION",
            "SHIPPING_INFORMATION_VENDOR",
            "SHIPPING_INFORMATION_SERVICE",
            "SHIPPING_INFORMATION_WEIGHT",
            "SHIPPING_INFORMATION_PACKAGING_GROUP",
            "SHIPPING_INFORMATION_PACKAGING_TYPE",
            "SHIPPING_INFORMATION_COST",
            "SHIPPING_INFORMATION_TRACKING_NUMBER",
            "SHIPPING_INFORMATION_SERVICE_ID",
            "SHIPPING_SCHEDULED_DELIVERY_START",
            "SHIPPING_SCHEDULED_DELIVERY_END",
            "CUSTOMER",
            "CUSTOMER_ADDRESS_ADDRESS",
            "CUSTOMER_ADDRESS_FULL_NAME",
            "CUSTOMER_ADDRESS_COMPANY",
            "CUSTOMER_ADDRESS_POSTCODE",
            "CUSTOMER_ADDRESS_COUNTY",
            "CUSTOMER_ADDRESS_COUNTRY",
            "CUSTOMER_ADDRESS_COUNTRY_ZONE",
            "CUSTOMER_ADDRESS_ADDRESS1",
            "CUSTOMER_ADDRESS_ADDRESS2",
            "CUSTOMER_ADDRESS_ADDRESS3",
            "CUSTOMER_ADDRESS_TOWN",
            "CUSTOMER_EMAIL",
            "CUSTOMER_CHANNEL_BUYER_NAME",
            "CUSTOMER_PHONE",
            "CUSTOMER_BILLING_ADDRESS",
            "CUSTOMER_BILLING_ADDRESS_NAME",
            "CUSTOMER_BILLING_ADDRESS_COMPANY",
            "CUSTOMER_BILLING_ADDRESS_ADDRESS1",
            "CUSTOMER_BILLING_ADDRESS_ADDRESS2",
            "CUSTOMER_BILLING_ADDRESS_ADDRESS3",
            "CUSTOMER_BILLING_ADDRESS_TOWN",
            "CUSTOMER_BILLING_ADDRESS_REGION",
            "CUSTOMER_BILLING_ADDRESS_POSTCODE",
            "CUSTOMER_BILLING_ADDRESS_COUNTRY",
            "CUSTOMER_BILLING_EMAIL",
            "CUSTOMER_BILLING_PHONE",
            "TOTALS",
            "TOTALS_SUBTOTAL",
            "TOTALS_SHIPPING",
            "TOTALS_TAX",
            "TOTALS_TOTAL",
            "TOTALS_DISCOUNT",
            "TOTALS_CURRENCY",
            "TOTALS_PAYMENT_METHOD",
            "TOTALS_COUNTRY_TAX_RATE",
            "ORDER_TOTAL",
            "ORDER_TOTAL_TOTAL",
            "ORDER_TOTAL_CURRENCY",
            "ORDER_TAX",
            "ORDER_TAX_TOTAL",
            "ORDER_TAX_CURRENCY",
            "FOLDER",
            "FOLDERS",
            "JOB",
            "ITEMS",
            "ITEMS_IMAGE",
            "ITEMS_SKU",
            "ITEMS_ORIGINAL_SKU",
            "ITEMS_TITLE",
            "ITEMS_ORIGINAL_TITLE",
            "ITEMS_ITEM_NUMBER",
            "ITEMS_IS_SERVICE",
            "ITEMS_QUANTITY",
            "ITEMS_SOURCE",
            "ITEMS_LINE",
            "ITEMS_COST_INC_TAX",
            "ITEMS_COST",
            "ITEMS_SALES_TAX",
            "ITEMS_TAX_RATE",
            "ITEMS_CURRENCY",
            "ITEMS_CATEGORY",
            "ITEMS_BINRACK",
            "ITEMS_TAX_COST_INCLUSIVE",
            "ITEMS_DISCOUNT",
            "ITEMS_SUM_QUANTITY",
            "ITEMS_WEIGHT",
            "ITEMS_UNIT_COST",
            "ITEMS_PRICE_PER_UNIT",
            "ITEMS_BATCHED",
            "ITEMS_INVENTORY_TRACKING_TYPE",
            "ITEMS_BARCODE_NUMBER",
            "STOCK_LEVEL",
            "CAN_FULFIL",
            "HOT_BUTTONS",
            "HOT_BUTTON",
            "ADDITIONAL",
            "LOCATION_ID",
            "ITEMS_STOCKITEM_ID",
            "ITEMS_COMPOSITE_PARENT_ID",
            "GENERAL_INFO_STOCK_ALLOCATION",
            "GENERAL_INFO_NOTE",
            "GENERAL_INFO_NOTE_COUNT",
            "GENERAL_INFO_PICKWAVE_IDS",
            "FULFILLMENT",
            "FULFILLMENT_STATE",
            "FULFILLMENT_ADDITIONAL",
            "GENERAL_INFO_INVOICE_PRINT_ERROR",
            "GENERAL_INFO_PICK_LIST_PRINT_ERROR"
          ],
          "type": "string"
        }
      }
    },
    "BooleanFieldFilter": {
      "type": "object",
      "properties": {
        "Value": {
          "type": "boolean"
        },
        "FieldCode": {
          "enum": [
            "NONE",
            "GENERAL_INFO",
            "GENERAL_INFO_ORDER_ID",
            "GENERAL_INFO_REFERENCE_NUMBER",
            "GENERAL_INFO_CHANNEL_REFERENCE_NUMBER",
            "GENERAL_INFO_EXTERNAL_REFERENCE_NUMBER",
            "GENERAL_INFO_DATE",
            "GENERAL_INFO_SOURCE",
            "GENERAL_INFO_SUBSOURCE",
            "GENERAL_INFO_LABEL_PRINTED",
            "GENERAL_INFO_INVOICE_PRINTED",
            "GENERAL_INFO_PICK_LIST_PRINTED",
            "GENERAL_INFO_IS_RULE_RUN",
            "GENERAL_INFO_NOTES",
            "GENERAL_INFO_LOCKED",
            "GENERAL_INFO_PARKED",
            "GENERAL_INFO_PART_SHIPPED",
            "GENERAL_INFO_TAG",
            "GENERAL_INFO_IDENTIFIER",
            "GENERAL_INFO_STATUS",
            "GENERAL_INFO_DESPATCHBYDATE",
            "GENERAL_INFO_ITEMS_COUNT",
            "GENERAL_INFO_SHIPPING_LABEL_ERROR",
            "GENERAL_INFO_HAS_SHIPPING_LABEL_ERROR",
            "SHIPPING_INFORMATION",
            "SHIPPING_INFORMATION_VENDOR",
            "SHIPPING_INFORMATION_SERVICE",
            "SHIPPING_INFORMATION_WEIGHT",
            "SHIPPING_INFORMATION_PACKAGING_GROUP",
            "SHIPPING_INFORMATION_PACKAGING_TYPE",
            "SHIPPING_INFORMATION_COST",
            "SHIPPING_INFORMATION_TRACKING_NUMBER",
            "SHIPPING_INFORMATION_SERVICE_ID",
            "SHIPPING_SCHEDULED_DELIVERY_START",
            "SHIPPING_SCHEDULED_DELIVERY_END",
            "CUSTOMER",
            "CUSTOMER_ADDRESS_ADDRESS",
            "CUSTOMER_ADDRESS_FULL_NAME",
            "CUSTOMER_ADDRESS_COMPANY",
            "CUSTOMER_ADDRESS_POSTCODE",
            "CUSTOMER_ADDRESS_COUNTY",
            "CUSTOMER_ADDRESS_COUNTRY",
            "CUSTOMER_ADDRESS_COUNTRY_ZONE",
            "CUSTOMER_ADDRESS_ADDRESS1",
            "CUSTOMER_ADDRESS_ADDRESS2",
            "CUSTOMER_ADDRESS_ADDRESS3",
            "CUSTOMER_ADDRESS_TOWN",
            "CUSTOMER_EMAIL",
            "CUSTOMER_CHANNEL_BUYER_NAME",
            "CUSTOMER_PHONE",
            "CUSTOMER_BILLING_ADDRESS",
            "CUSTOMER_BILLING_ADDRESS_NAME",
            "CUSTOMER_BILLING_ADDRESS_COMPANY",
            "CUSTOMER_BILLING_ADDRESS_ADDRESS1",
            "CUSTOMER_BILLING_ADDRESS_ADDRESS2",
            "CUSTOMER_BILLING_ADDRESS_ADDRESS3",
            "CUSTOMER_BILLING_ADDRESS_TOWN",
            "CUSTOMER_BILLING_ADDRESS_REGION",
            "CUSTOMER_BILLING_ADDRESS_POSTCODE",
            "CUSTOMER_BILLING_ADDRESS_COUNTRY",
            "CUSTOMER_BILLING_EMAIL",
            "CUSTOMER_BILLING_PHONE",
            "TOTALS",
            "TOTALS_SUBTOTAL",
            "TOTALS_SHIPPING",
            "TOTALS_TAX",
            "TOTALS_TOTAL",
            "TOTALS_DISCOUNT",
            "TOTALS_CURRENCY",
            "TOTALS_PAYMENT_METHOD",
            "TOTALS_COUNTRY_TAX_RATE",
            "ORDER_TOTAL",
            "ORDER_TOTAL_TOTAL",
            "ORDER_TOTAL_CURRENCY",
            "ORDER_TAX",
            "ORDER_TAX_TOTAL",
            "ORDER_TAX_CURRENCY",
            "FOLDER",
            "FOLDERS",
            "JOB",
            "ITEMS",
            "ITEMS_IMAGE",
            "ITEMS_SKU",
            "ITEMS_ORIGINAL_SKU",
            "ITEMS_TITLE",
            "ITEMS_ORIGINAL_TITLE",
            "ITEMS_ITEM_NUMBER",
            "ITEMS_IS_SERVICE",
            "ITEMS_QUANTITY",
            "ITEMS_SOURCE",
            "ITEMS_LINE",
            "ITEMS_COST_INC_TAX",
            "ITEMS_COST",
            "ITEMS_SALES_TAX",
            "ITEMS_TAX_RATE",
            "ITEMS_CURRENCY",
            "ITEMS_CATEGORY",
            "ITEMS_BINRACK",
            "ITEMS_TAX_COST_INCLUSIVE",
            "ITEMS_DISCOUNT",
            "ITEMS_SUM_QUANTITY",
            "ITEMS_WEIGHT",
            "ITEMS_UNIT_COST",
            "ITEMS_PRICE_PER_UNIT",
            "ITEMS_BATCHED",
            "ITEMS_INVENTORY_TRACKING_TYPE",
            "ITEMS_BARCODE_NUMBER",
            "STOCK_LEVEL",
            "CAN_FULFIL",
            "HOT_BUTTONS",
            "HOT_BUTTON",
            "ADDITIONAL",
            "LOCATION_ID",
            "ITEMS_STOCKITEM_ID",
            "ITEMS_COMPOSITE_PARENT_ID",
            "GENERAL_INFO_STOCK_ALLOCATION",
            "GENERAL_INFO_NOTE",
            "GENERAL_INFO_NOTE_COUNT",
            "GENERAL_INFO_PICKWAVE_IDS",
            "FULFILLMENT",
            "FULFILLMENT_STATE",
            "FULFILLMENT_ADDITIONAL",
            "GENERAL_INFO_INVOICE_PRINT_ERROR",
            "GENERAL_INFO_PICK_LIST_PRINT_ERROR"
          ],
          "type": "string"
        }
      }
    },
    "NumericFieldFilter": {
      "type": "object",
      "properties": {
        "Type": {
          "description": "Filter type",
          "enum": [
            "Equal",
            "Greater",
            "Lower"
          ],
          "type": "string"
        },
        "Value": {
          "format": "double",
          "description": "Filtering input",
          "type": "number"
        },
        "FieldCode": {
          "enum": [
            "NONE",
            "GENERAL_INFO",
            "GENERAL_INFO_ORDER_ID",
            "GENERAL_INFO_REFERENCE_NUMBER",
            "GENERAL_INFO_CHANNEL_REFERENCE_NUMBER",
            "GENERAL_INFO_EXTERNAL_REFERENCE_NUMBER",
            "GENERAL_INFO_DATE",
            "GENERAL_INFO_SOURCE",
            "GENERAL_INFO_SUBSOURCE",
            "GENERAL_INFO_LABEL_PRINTED",
            "GENERAL_INFO_INVOICE_PRINTED",
            "GENERAL_INFO_PICK_LIST_PRINTED",
            "GENERAL_INFO_IS_RULE_RUN",
            "GENERAL_INFO_NOTES",
            "GENERAL_INFO_LOCKED",
            "GENERAL_INFO_PARKED",
            "GENERAL_INFO_PART_SHIPPED",
            "GENERAL_INFO_TAG",
            "GENERAL_INFO_IDENTIFIER",
            "GENERAL_INFO_STATUS",
            "GENERAL_INFO_DESPATCHBYDATE",
            "GENERAL_INFO_ITEMS_COUNT",
            "GENERAL_INFO_SHIPPING_LABEL_ERROR",
            "GENERAL_INFO_HAS_SHIPPING_LABEL_ERROR",
            "SHIPPING_INFORMATION",
            "SHIPPING_INFORMATION_VENDOR",
            "SHIPPING_INFORMATION_SERVICE",
            "SHIPPING_INFORMATION_WEIGHT",
            "SHIPPING_INFORMATION_PACKAGING_GROUP",
            "SHIPPING_INFORMATION_PACKAGING_TYPE",
            "SHIPPING_INFORMATION_COST",
            "SHIPPING_INFORMATION_TRACKING_NUMBER",
            "SHIPPING_INFORMATION_SERVICE_ID",
            "SHIPPING_SCHEDULED_DELIVERY_START",
            "SHIPPING_SCHEDULED_DELIVERY_END",
            "CUSTOMER",
            "CUSTOMER_ADDRESS_ADDRESS",
            "CUSTOMER_ADDRESS_FULL_NAME",
            "CUSTOMER_ADDRESS_COMPANY",
            "CUSTOMER_ADDRESS_POSTCODE",
            "CUSTOMER_ADDRESS_COUNTY",
            "CUSTOMER_ADDRESS_COUNTRY",
            "CUSTOMER_ADDRESS_COUNTRY_ZONE",
            "CUSTOMER_ADDRESS_ADDRESS1",
            "CUSTOMER_ADDRESS_ADDRESS2",
            "CUSTOMER_ADDRESS_ADDRESS3",
            "CUSTOMER_ADDRESS_TOWN",
            "CUSTOMER_EMAIL",
            "CUSTOMER_CHANNEL_BUYER_NAME",
            "CUSTOMER_PHONE",
            "CUSTOMER_BILLING_ADDRESS",
            "CUSTOMER_BILLING_ADDRESS_NAME",
            "CUSTOMER_BILLING_ADDRESS_COMPANY",
            "CUSTOMER_BILLING_ADDRESS_ADDRESS1",
            "CUSTOMER_BILLING_ADDRESS_ADDRESS2",
            "CUSTOMER_BILLING_ADDRESS_ADDRESS3",
            "CUSTOMER_BILLING_ADDRESS_TOWN",
            "CUSTOMER_BILLING_ADDRESS_REGION",
            "CUSTOMER_BILLING_ADDRESS_POSTCODE",
            "CUSTOMER_BILLING_ADDRESS_COUNTRY",
            "CUSTOMER_BILLING_EMAIL",
            "CUSTOMER_BILLING_PHONE",
            "TOTALS",
            "TOTALS_SUBTOTAL",
            "TOTALS_SHIPPING",
            "TOTALS_TAX",
            "TOTALS_TOTAL",
            "TOTALS_DISCOUNT",
            "TOTALS_CURRENCY",
            "TOTALS_PAYMENT_METHOD",
            "TOTALS_COUNTRY_TAX_RATE",
            "ORDER_TOTAL",
            "ORDER_TOTAL_TOTAL",
            "ORDER_TOTAL_CURRENCY",
            "ORDER_TAX",
            "ORDER_TAX_TOTAL",
            "ORDER_TAX_CURRENCY",
            "FOLDER",
            "FOLDERS",
            "JOB",
            "ITEMS",
            "ITEMS_IMAGE",
            "ITEMS_SKU",
            "ITEMS_ORIGINAL_SKU",
            "ITEMS_TITLE",
            "ITEMS_ORIGINAL_TITLE",
            "ITEMS_ITEM_NUMBER",
            "ITEMS_IS_SERVICE",
            "ITEMS_QUANTITY",
            "ITEMS_SOURCE",
            "ITEMS_LINE",
            "ITEMS_COST_INC_TAX",
            "ITEMS_COST",
            "ITEMS_SALES_TAX",
            "ITEMS_TAX_RATE",
            "ITEMS_CURRENCY",
            "ITEMS_CATEGORY",
            "ITEMS_BINRACK",
            "ITEMS_TAX_COST_INCLUSIVE",
            "ITEMS_DISCOUNT",
            "ITEMS_SUM_QUANTITY",
            "ITEMS_WEIGHT",
            "ITEMS_UNIT_COST",
            "ITEMS_PRICE_PER_UNIT",
            "ITEMS_BATCHED",
            "ITEMS_INVENTORY_TRACKING_TYPE",
            "ITEMS_BARCODE_NUMBER",
            "STOCK_LEVEL",
            "CAN_FULFIL",
            "HOT_BUTTONS",
            "HOT_BUTTON",
            "ADDITIONAL",
            "LOCATION_ID",
            "ITEMS_STOCKITEM_ID",
            "ITEMS_COMPOSITE_PARENT_ID",
            "GENERAL_INFO_STOCK_ALLOCATION",
            "GENERAL_INFO_NOTE",
            "GENERAL_INFO_NOTE_COUNT",
            "GENERAL_INFO_PICKWAVE_IDS",
            "FULFILLMENT",
            "FULFILLMENT_STATE",
            "FULFILLMENT_ADDITIONAL",
            "GENERAL_INFO_INVOICE_PRINT_ERROR",
            "GENERAL_INFO_PICK_LIST_PRINT_ERROR"
          ],
          "type": "string"
        }
      }
    },
    "DateFieldFilter": {
      "type": "object",
      "properties": {
        "DateFrom": {
          "format": "date-time",
          "description": "Date from",
          "type": "string"
        },
        "DateTo": {
          "format": "date-time",
          "description": "Date to",
          "type": "string"
        },
        "Type": {
          "description": "Filter type",
          "enum": [
            "Range",
            "OlderThan",
            "LastDays"
          ],
          "type": "string"
        },
        "Value": {
          "format": "int32",
          "description": "Filtering input",
          "type": "integer"
        },
        "FieldCode": {
          "enum": [
            "NONE",
            "GENERAL_INFO",
            "GENERAL_INFO_ORDER_ID",
            "GENERAL_INFO_REFERENCE_NUMBER",
            "GENERAL_INFO_CHANNEL_REFERENCE_NUMBER",
            "GENERAL_INFO_EXTERNAL_REFERENCE_NUMBER",
            "GENERAL_INFO_DATE",
            "GENERAL_INFO_SOURCE",
            "GENERAL_INFO_SUBSOURCE",
            "GENERAL_INFO_LABEL_PRINTED",
            "GENERAL_INFO_INVOICE_PRINTED",
            "GENERAL_INFO_PICK_LIST_PRINTED",
            "GENERAL_INFO_IS_RULE_RUN",
            "GENERAL_INFO_NOTES",
            "GENERAL_INFO_LOCKED",
            "GENERAL_INFO_PARKED",
            "GENERAL_INFO_PART_SHIPPED",
            "GENERAL_INFO_TAG",
            "GENERAL_INFO_IDENTIFIER",
            "GENERAL_INFO_STATUS",
            "GENERAL_INFO_DESPATCHBYDATE",
            "GENERAL_INFO_ITEMS_COUNT",
            "GENERAL_INFO_SHIPPING_LABEL_ERROR",
            "GENERAL_INFO_HAS_SHIPPING_LABEL_ERROR",
            "SHIPPING_INFORMATION",
            "SHIPPING_INFORMATION_VENDOR",
            "SHIPPING_INFORMATION_SERVICE",
            "SHIPPING_INFORMATION_WEIGHT",
            "SHIPPING_INFORMATION_PACKAGING_GROUP",
            "SHIPPING_INFORMATION_PACKAGING_TYPE",
            "SHIPPING_INFORMATION_COST",
            "SHIPPING_INFORMATION_TRACKING_NUMBER",
            "SHIPPING_INFORMATION_SERVICE_ID",
            "SHIPPING_SCHEDULED_DELIVERY_START",
            "SHIPPING_SCHEDULED_DELIVERY_END",
            "CUSTOMER",
            "CUSTOMER_ADDRESS_ADDRESS",
            "CUSTOMER_ADDRESS_FULL_NAME",
            "CUSTOMER_ADDRESS_COMPANY",
            "CUSTOMER_ADDRESS_POSTCODE",
            "CUSTOMER_ADDRESS_COUNTY",
            "CUSTOMER_ADDRESS_COUNTRY",
            "CUSTOMER_ADDRESS_COUNTRY_ZONE",
            "CUSTOMER_ADDRESS_ADDRESS1",
            "CUSTOMER_ADDRESS_ADDRESS2",
            "CUSTOMER_ADDRESS_ADDRESS3",
            "CUSTOMER_ADDRESS_TOWN",
            "CUSTOMER_EMAIL",
            "CUSTOMER_CHANNEL_BUYER_NAME",
            "CUSTOMER_PHONE",
            "CUSTOMER_BILLING_ADDRESS",
            "CUSTOMER_BILLING_ADDRESS_NAME",
            "CUSTOMER_BILLING_ADDRESS_COMPANY",
            "CUSTOMER_BILLING_ADDRESS_ADDRESS1",
            "CUSTOMER_BILLING_ADDRESS_ADDRESS2",
            "CUSTOMER_BILLING_ADDRESS_ADDRESS3",
            "CUSTOMER_BILLING_ADDRESS_TOWN",
            "CUSTOMER_BILLING_ADDRESS_REGION",
            "CUSTOMER_BILLING_ADDRESS_POSTCODE",
            "CUSTOMER_BILLING_ADDRESS_COUNTRY",
            "CUSTOMER_BILLING_EMAIL",
            "CUSTOMER_BILLING_PHONE",
            "TOTALS",
            "TOTALS_SUBTOTAL",
            "TOTALS_SHIPPING",
            "TOTALS_TAX",
            "TOTALS_TOTAL",
            "TOTALS_DISCOUNT",
            "TOTALS_CURRENCY",
            "TOTALS_PAYMENT_METHOD",
            "TOTALS_COUNTRY_TAX_RATE",
            "ORDER_TOTAL",
            "ORDER_TOTAL_TOTAL",
            "ORDER_TOTAL_CURRENCY",
            "ORDER_TAX",
            "ORDER_TAX_TOTAL",
            "ORDER_TAX_CURRENCY",
            "FOLDER",
            "FOLDERS",
            "JOB",
            "ITEMS",
            "ITEMS_IMAGE",
            "ITEMS_SKU",
            "ITEMS_ORIGINAL_SKU",
            "ITEMS_TITLE",
            "ITEMS_ORIGINAL_TITLE",
            "ITEMS_ITEM_NUMBER",
            "ITEMS_IS_SERVICE",
            "ITEMS_QUANTITY",
            "ITEMS_SOURCE",
            "ITEMS_LINE",
            "ITEMS_COST_INC_TAX",
            "ITEMS_COST",
            "ITEMS_SALES_TAX",
            "ITEMS_TAX_RATE",
            "ITEMS_CURRENCY",
            "ITEMS_CATEGORY",
            "ITEMS_BINRACK",
            "ITEMS_TAX_COST_INCLUSIVE",
            "ITEMS_DISCOUNT",
            "ITEMS_SUM_QUANTITY",
            "ITEMS_WEIGHT",
            "ITEMS_UNIT_COST",
            "ITEMS_PRICE_PER_UNIT",
            "ITEMS_BATCHED",
            "ITEMS_INVENTORY_TRACKING_TYPE",
            "ITEMS_BARCODE_NUMBER",
            "STOCK_LEVEL",
            "CAN_FULFIL",
            "HOT_BUTTONS",
            "HOT_BUTTON",
            "ADDITIONAL",
            "LOCATION_ID",
            "ITEMS_STOCKITEM_ID",
            "ITEMS_COMPOSITE_PARENT_ID",
            "GENERAL_INFO_STOCK_ALLOCATION",
            "GENERAL_INFO_NOTE",
            "GENERAL_INFO_NOTE_COUNT",
            "GENERAL_INFO_PICKWAVE_IDS",
            "FULFILLMENT",
            "FULFILLMENT_STATE",
            "FULFILLMENT_ADDITIONAL",
            "GENERAL_INFO_INVOICE_PRINT_ERROR",
            "GENERAL_INFO_PICK_LIST_PRINT_ERROR"
          ],
          "type": "string"
        }
      }
    },
    "ListFieldFilter": {
      "type": "object",
      "properties": {
        "Value": {
          "description": "Filtering input",
          "type": "string"
        },
        "Type": {
          "description": "Filter type",
          "enum": [
            "Is",
            "Not"
          ],
          "type": "string"
        },
        "FieldCode": {
          "enum": [
            "NONE",
            "GENERAL_INFO",
            "GENERAL_INFO_ORDER_ID",
            "GENERAL_INFO_REFERENCE_NUMBER",
            "GENERAL_INFO_CHANNEL_REFERENCE_NUMBER",
            "GENERAL_INFO_EXTERNAL_REFERENCE_NUMBER",
            "GENERAL_INFO_DATE",
            "GENERAL_INFO_SOURCE",
            "GENERAL_INFO_SUBSOURCE",
            "GENERAL_INFO_LABEL_PRINTED",
            "GENERAL_INFO_INVOICE_PRINTED",
            "GENERAL_INFO_PICK_LIST_PRINTED",
            "GENERAL_INFO_IS_RULE_RUN",
            "GENERAL_INFO_NOTES",
            "GENERAL_INFO_LOCKED",
            "GENERAL_INFO_PARKED",
            "GENERAL_INFO_PART_SHIPPED",
            "GENERAL_INFO_TAG",
            "GENERAL_INFO_IDENTIFIER",
            "GENERAL_INFO_STATUS",
            "GENERAL_INFO_DESPATCHBYDATE",
            "GENERAL_INFO_ITEMS_COUNT",
            "GENERAL_INFO_SHIPPING_LABEL_ERROR",
            "GENERAL_INFO_HAS_SHIPPING_LABEL_ERROR",
            "SHIPPING_INFORMATION",
            "SHIPPING_INFORMATION_VENDOR",
            "SHIPPING_INFORMATION_SERVICE",
            "SHIPPING_INFORMATION_WEIGHT",
            "SHIPPING_INFORMATION_PACKAGING_GROUP",
            "SHIPPING_INFORMATION_PACKAGING_TYPE",
            "SHIPPING_INFORMATION_COST",
            "SHIPPING_INFORMATION_TRACKING_NUMBER",
            "SHIPPING_INFORMATION_SERVICE_ID",
            "SHIPPING_SCHEDULED_DELIVERY_START",
            "SHIPPING_SCHEDULED_DELIVERY_END",
            "CUSTOMER",
            "CUSTOMER_ADDRESS_ADDRESS",
            "CUSTOMER_ADDRESS_FULL_NAME",
            "CUSTOMER_ADDRESS_COMPANY",
            "CUSTOMER_ADDRESS_POSTCODE",
            "CUSTOMER_ADDRESS_COUNTY",
            "CUSTOMER_ADDRESS_COUNTRY",
            "CUSTOMER_ADDRESS_COUNTRY_ZONE",
            "CUSTOMER_ADDRESS_ADDRESS1",
            "CUSTOMER_ADDRESS_ADDRESS2",
            "CUSTOMER_ADDRESS_ADDRESS3",
            "CUSTOMER_ADDRESS_TOWN",
            "CUSTOMER_EMAIL",
            "CUSTOMER_CHANNEL_BUYER_NAME",
            "CUSTOMER_PHONE",
            "CUSTOMER_BILLING_ADDRESS",
            "CUSTOMER_BILLING_ADDRESS_NAME",
            "CUSTOMER_BILLING_ADDRESS_COMPANY",
            "CUSTOMER_BILLING_ADDRESS_ADDRESS1",
            "CUSTOMER_BILLING_ADDRESS_ADDRESS2",
            "CUSTOMER_BILLING_ADDRESS_ADDRESS3",
            "CUSTOMER_BILLING_ADDRESS_TOWN",
            "CUSTOMER_BILLING_ADDRESS_REGION",
            "CUSTOMER_BILLING_ADDRESS_POSTCODE",
            "CUSTOMER_BILLING_ADDRESS_COUNTRY",
            "CUSTOMER_BILLING_EMAIL",
            "CUSTOMER_BILLING_PHONE",
            "TOTALS",
            "TOTALS_SUBTOTAL",
            "TOTALS_SHIPPING",
            "TOTALS_TAX",
            "TOTALS_TOTAL",
            "TOTALS_DISCOUNT",
            "TOTALS_CURRENCY",
            "TOTALS_PAYMENT_METHOD",
            "TOTALS_COUNTRY_TAX_RATE",
            "ORDER_TOTAL",
            "ORDER_TOTAL_TOTAL",
            "ORDER_TOTAL_CURRENCY",
            "ORDER_TAX",
            "ORDER_TAX_TOTAL",
            "ORDER_TAX_CURRENCY",
            "FOLDER",
            "FOLDERS",
            "JOB",
            "ITEMS",
            "ITEMS_IMAGE",
            "ITEMS_SKU",
            "ITEMS_ORIGINAL_SKU",
            "ITEMS_TITLE",
            "ITEMS_ORIGINAL_TITLE",
            "ITEMS_ITEM_NUMBER",
            "ITEMS_IS_SERVICE",
            "ITEMS_QUANTITY",
            "ITEMS_SOURCE",
            "ITEMS_LINE",
            "ITEMS_COST_INC_TAX",
            "ITEMS_COST",
            "ITEMS_SALES_TAX",
            "ITEMS_TAX_RATE",
            "ITEMS_CURRENCY",
            "ITEMS_CATEGORY",
            "ITEMS_BINRACK",
            "ITEMS_TAX_COST_INCLUSIVE",
            "ITEMS_DISCOUNT",
            "ITEMS_SUM_QUANTITY",
            "ITEMS_WEIGHT",
            "ITEMS_UNIT_COST",
            "ITEMS_PRICE_PER_UNIT",
            "ITEMS_BATCHED",
            "ITEMS_INVENTORY_TRACKING_TYPE",
            "ITEMS_BARCODE_NUMBER",
            "STOCK_LEVEL",
            "CAN_FULFIL",
            "HOT_BUTTONS",
            "HOT_BUTTON",
            "ADDITIONAL",
            "LOCATION_ID",
            "ITEMS_STOCKITEM_ID",
            "ITEMS_COMPOSITE_PARENT_ID",
            "GENERAL_INFO_STOCK_ALLOCATION",
            "GENERAL_INFO_NOTE",
            "GENERAL_INFO_NOTE_COUNT",
            "GENERAL_INFO_PICKWAVE_IDS",
            "FULFILLMENT",
            "FULFILLMENT_STATE",
            "FULFILLMENT_ADDITIONAL",
            "GENERAL_INFO_INVOICE_PRINT_ERROR",
            "GENERAL_INFO_PICK_LIST_PRINT_ERROR"
          ],
          "type": "string"
        }
      }
    },
    "FieldVisibility": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "Visible": {
          "type": "boolean"
        },
        "CanFilter": {
          "type": "boolean"
        },
        "CanSort": {
          "type": "boolean"
        },
        "FieldType": {
          "enum": [
            "Decimal",
            "Text",
            "List",
            "Date",
            "Boolean",
            "None",
            "Button",
            "HtmlList",
            "Integer"
          ],
          "type": "string"
        },
        "Code": {
          "enum": [
            "NONE",
            "GENERAL_INFO",
            "GENERAL_INFO_ORDER_ID",
            "GENERAL_INFO_REFERENCE_NUMBER",
            "GENERAL_INFO_CHANNEL_REFERENCE_NUMBER",
            "GENERAL_INFO_EXTERNAL_REFERENCE_NUMBER",
            "GENERAL_INFO_DATE",
            "GENERAL_INFO_SOURCE",
            "GENERAL_INFO_SUBSOURCE",
            "GENERAL_INFO_LABEL_PRINTED",
            "GENERAL_INFO_INVOICE_PRINTED",
            "GENERAL_INFO_PICK_LIST_PRINTED",
            "GENERAL_INFO_IS_RULE_RUN",
            "GENERAL_INFO_NOTES",
            "GENERAL_INFO_LOCKED",
            "GENERAL_INFO_PARKED",
            "GENERAL_INFO_PART_SHIPPED",
            "GENERAL_INFO_TAG",
            "GENERAL_INFO_IDENTIFIER",
            "GENERAL_INFO_STATUS",
            "GENERAL_INFO_DESPATCHBYDATE",
            "GENERAL_INFO_ITEMS_COUNT",
            "GENERAL_INFO_SHIPPING_LABEL_ERROR",
            "GENERAL_INFO_HAS_SHIPPING_LABEL_ERROR",
            "SHIPPING_INFORMATION",
            "SHIPPING_INFORMATION_VENDOR",
            "SHIPPING_INFORMATION_SERVICE",
            "SHIPPING_INFORMATION_WEIGHT",
            "SHIPPING_INFORMATION_PACKAGING_GROUP",
            "SHIPPING_INFORMATION_PACKAGING_TYPE",
            "SHIPPING_INFORMATION_COST",
            "SHIPPING_INFORMATION_TRACKING_NUMBER",
            "SHIPPING_INFORMATION_SERVICE_ID",
            "SHIPPING_SCHEDULED_DELIVERY_START",
            "SHIPPING_SCHEDULED_DELIVERY_END",
            "CUSTOMER",
            "CUSTOMER_ADDRESS_ADDRESS",
            "CUSTOMER_ADDRESS_FULL_NAME",
            "CUSTOMER_ADDRESS_COMPANY",
            "CUSTOMER_ADDRESS_POSTCODE",
            "CUSTOMER_ADDRESS_COUNTY",
            "CUSTOMER_ADDRESS_COUNTRY",
            "CUSTOMER_ADDRESS_COUNTRY_ZONE",
            "CUSTOMER_ADDRESS_ADDRESS1",
            "CUSTOMER_ADDRESS_ADDRESS2",
            "CUSTOMER_ADDRESS_ADDRESS3",
            "CUSTOMER_ADDRESS_TOWN",
            "CUSTOMER_EMAIL",
            "CUSTOMER_CHANNEL_BUYER_NAME",
            "CUSTOMER_PHONE",
            "CUSTOMER_BILLING_ADDRESS",
            "CUSTOMER_BILLING_ADDRESS_NAME",
            "CUSTOMER_BILLING_ADDRESS_COMPANY",
            "CUSTOMER_BILLING_ADDRESS_ADDRESS1",
            "CUSTOMER_BILLING_ADDRESS_ADDRESS2",
            "CUSTOMER_BILLING_ADDRESS_ADDRESS3",
            "CUSTOMER_BILLING_ADDRESS_TOWN",
            "CUSTOMER_BILLING_ADDRESS_REGION",
            "CUSTOMER_BILLING_ADDRESS_POSTCODE",
            "CUSTOMER_BILLING_ADDRESS_COUNTRY",
            "CUSTOMER_BILLING_EMAIL",
            "CUSTOMER_BILLING_PHONE",
            "TOTALS",
            "TOTALS_SUBTOTAL",
            "TOTALS_SHIPPING",
            "TOTALS_TAX",
            "TOTALS_TOTAL",
            "TOTALS_DISCOUNT",
            "TOTALS_CURRENCY",
            "TOTALS_PAYMENT_METHOD",
            "TOTALS_COUNTRY_TAX_RATE",
            "ORDER_TOTAL",
            "ORDER_TOTAL_TOTAL",
            "ORDER_TOTAL_CURRENCY",
            "ORDER_TAX",
            "ORDER_TAX_TOTAL",
            "ORDER_TAX_CURRENCY",
            "FOLDER",
            "FOLDERS",
            "JOB",
            "ITEMS",
            "ITEMS_IMAGE",
            "ITEMS_SKU",
            "ITEMS_ORIGINAL_SKU",
            "ITEMS_TITLE",
            "ITEMS_ORIGINAL_TITLE",
            "ITEMS_ITEM_NUMBER",
            "ITEMS_IS_SERVICE",
            "ITEMS_QUANTITY",
            "ITEMS_SOURCE",
            "ITEMS_LINE",
            "ITEMS_COST_INC_TAX",
            "ITEMS_COST",
            "ITEMS_SALES_TAX",
            "ITEMS_TAX_RATE",
            "ITEMS_CURRENCY",
            "ITEMS_CATEGORY",
            "ITEMS_BINRACK",
            "ITEMS_TAX_COST_INCLUSIVE",
            "ITEMS_DISCOUNT",
            "ITEMS_SUM_QUANTITY",
            "ITEMS_WEIGHT",
            "ITEMS_UNIT_COST",
            "ITEMS_PRICE_PER_UNIT",
            "ITEMS_BATCHED",
            "ITEMS_INVENTORY_TRACKING_TYPE",
            "ITEMS_BARCODE_NUMBER",
            "STOCK_LEVEL",
            "CAN_FULFIL",
            "HOT_BUTTONS",
            "HOT_BUTTON",
            "ADDITIONAL",
            "LOCATION_ID",
            "ITEMS_STOCKITEM_ID",
            "ITEMS_COMPOSITE_PARENT_ID",
            "GENERAL_INFO_STOCK_ALLOCATION",
            "GENERAL_INFO_NOTE",
            "GENERAL_INFO_NOTE_COUNT",
            "GENERAL_INFO_PICKWAVE_IDS",
            "FULFILLMENT",
            "FULFILLMENT_STATE",
            "FULFILLMENT_ADDITIONAL",
            "GENERAL_INFO_INVOICE_PRINT_ERROR",
            "GENERAL_INFO_PICK_LIST_PRINT_ERROR"
          ],
          "type": "string"
        },
        "SubFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldVisibility"
          }
        },
        "IsFilterOnly": {
          "description": "Defines if the field can only be used as a filter",
          "type": "boolean"
        },
        "HotButtonIcon": {
          "type": "string"
        },
        "HotButtonKey": {
          "type": "string"
        }
      }
    },
    "GenericPagedResult_OpenOrder": {
      "description": "Order item object",
      "type": "object",
      "properties": {
        "PageNumber": {
          "format": "int32",
          "description": "Result page number",
          "type": "integer"
        },
        "EntriesPerPage": {
          "format": "int32",
          "description": "Result page size, quantity of records per page",
          "type": "integer"
        },
        "TotalEntries": {
          "format": "int64",
          "description": "Total records",
          "type": "integer"
        },
        "TotalPages": {
          "format": "int32",
          "description": "Total pages",
          "type": "integer",
          "readOnly": true
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OpenOrder"
          }
        }
      }
    },
    "OpenOrder": {
      "description": "comment class",
      "type": "object",
      "properties": {
        "NumOrderId": {
          "format": "int32",
          "description": "Linnworks order number",
          "type": "integer"
        },
        "GeneralInfo": {
          "$ref": "#/definitions/OrderGeneralInfo",
          "description": "General information about an order"
        },
        "ShippingInfo": {
          "$ref": "#/definitions/OrderShippingInfo",
          "description": "Order shipping information"
        },
        "CustomerInfo": {
          "$ref": "#/definitions/OrderCustomerInfo",
          "description": "Order customer information"
        },
        "TotalsInfo": {
          "$ref": "#/definitions/OrderTotalsInfo",
          "description": "Linnworks order totals information"
        },
        "TaxInfo": {
          "$ref": "#/definitions/OrderTaxInfo"
        },
        "FolderName": {
          "description": "Folder name of an order if any assigned",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "IsPostFilteredOut": {
          "type": "boolean"
        },
        "CanFulfil": {
          "type": "boolean"
        },
        "Fulfillment": {
          "$ref": "#/definitions/OrderFulfillmentState"
        },
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderItem"
          }
        },
        "HasItems": {
          "type": "boolean",
          "readOnly": true
        },
        "TotalItemsSum": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "OrderId": {
          "format": "uuid",
          "description": "Order ID (pkOrderID)",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "OrderTaxInfo": {
      "type": "object",
      "properties": {
        "TaxNumber": {
          "description": "Customer Tax Number",
          "type": "string"
        }
      }
    },
    "OrderFulfillmentState": {
      "type": "object",
      "properties": {
        "FulfillmentState": {
          "enum": [
            "Unknown",
            "Insufficient_Stock",
            "Insufficient_To_Fulfill_All",
            "Sufficient_Stock"
          ],
          "type": "string"
        },
        "PurchaseOrderState": {
          "enum": [
            "Insufficient_PO",
            "Sufficient_PO"
          ],
          "type": "string"
        }
      }
    },
    "Orders_GetAllOpenOrdersRequest": {
      "type": "object",
      "properties": {
        "filters": {
          "$ref": "#/definitions/FieldsFilter",
          "description": "Filters to apply"
        },
        "sorting": {
          "description": "Sorting to apply",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldSorting"
          }
        },
        "fulfilmentCenter": {
          "format": "uuid",
          "description": "Location to get the orders for",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "additionalFilter": {
          "description": "Additional filter",
          "type": "string"
        },
        "exactMatch": {
          "description": "Whether we should use",
          "type": "boolean"
        }
      }
    },
    "Orders_GetAllOpenOrdersBetweenIndexRequest": {
      "type": "object",
      "properties": {
        "fromIndex": {
          "format": "int32",
          "description": "From index",
          "type": "integer"
        },
        "toIndex": {
          "format": "int32",
          "description": "To index",
          "type": "integer"
        },
        "filters": {
          "$ref": "#/definitions/FieldsFilter",
          "description": "Filters to apply"
        },
        "sorting": {
          "description": "Sorting to apply",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldSorting"
          }
        },
        "fulfilmentCenter": {
          "format": "uuid",
          "description": "Location to get the orders for",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "additionalFilter": {
          "description": "Additional filter",
          "type": "string"
        }
      }
    },
    "Orders_SetLabelsPrintedRequest": {
      "type": "object",
      "properties": {
        "orderIds": {
          "description": "List of orders to mark as label printed",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        }
      }
    },
    "Orders_SetInvoicesPrintedRequest": {
      "type": "object",
      "properties": {
        "orderIds": {
          "description": "List of orders to mark as label printed",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        }
      }
    },
    "Orders_SetPickListPrintedRequest": {
      "type": "object",
      "properties": {
        "Request": {
          "$ref": "#/definitions/SetPickListPrintedRequest",
          "description": ""
        }
      }
    },
    "SetPickListPrintedRequest": {
      "type": "object",
      "properties": {
        "OrderIds": {
          "description": "A list of orders that should be assigned the IsPrinted value",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "BatchAssignmentMode": {
          "description": "If stock batches needs to be assigned this defines how they should be assigned",
          "enum": [
            "ALL",
            "AUTO_ONLY",
            "UNASSIGNED_ONLY"
          ],
          "type": "string"
        }
      }
    },
    "Orders_RunRulesEngineRequest": {
      "type": "object",
      "properties": {
        "orderIds": {
          "description": "List of order IDs to run rules on",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "ruleId": {
          "format": "int32",
          "description": "Id of Rule to run. Null if all rules should be run",
          "type": "integer"
        }
      }
    },
    "Orders_ChangeOrderTagRequest": {
      "type": "object",
      "properties": {
        "orderIds": {
          "description": "Orders to change the tag",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "tag": {
          "format": "int32",
          "description": "new tag. null to remove the tag",
          "type": "integer"
        }
      }
    },
    "OrderFolder": {
      "type": "object",
      "properties": {
        "pkFolderId": {
          "format": "uuid",
          "description": "Folder ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "FolderName": {
          "description": "Folder name",
          "type": "string"
        }
      }
    },
    "Orders_SetAvailableFoldersRequest": {
      "type": "object",
      "properties": {
        "folders": {
          "description": "folders list",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderFolder"
          }
        }
      }
    },
    "Orders_AssignToFolderRequest": {
      "type": "object",
      "properties": {
        "orderIds": {
          "description": "list of order ids to be assigned",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "folder": {
          "description": "folder to be assigned",
          "type": "string"
        }
      }
    },
    "Orders_UnassignToFolderRequest": {
      "type": "object",
      "properties": {
        "orderIds": {
          "description": "list of order ids to be assigned",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "folder": {
          "description": "folder to be unassigned",
          "type": "string"
        }
      }
    },
    "OrderXML": {
      "type": "object",
      "properties": {
        "LineTag": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        },
        "XML": {
          "type": "string",
          "readOnly": true
        },
        "XMLDoc": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "Orders_ChangeShippingMethodRequest": {
      "type": "object",
      "properties": {
        "orderIds": {
          "description": "Order ids",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "shippingMethod": {
          "description": "New shipping service name",
          "type": "string"
        }
      }
    },
    "Orders_ChangeStatusRequest": {
      "type": "object",
      "properties": {
        "orderIds": {
          "description": "Order id's",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "status": {
          "format": "int32",
          "description": "New status",
          "type": "integer"
        }
      }
    },
    "Orders_LockOrderRequest": {
      "type": "object",
      "properties": {
        "orderIds": {
          "description": "Order id's",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "lockOrder": {
          "description": "Lock or unlock the orders",
          "type": "boolean"
        }
      }
    },
    "Orders_DeleteOrderRequest": {
      "type": "object",
      "properties": {
        "orderId": {
          "format": "uuid",
          "description": "Order id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "Orders_CancelOrderRequest": {
      "type": "object",
      "properties": {
        "orderId": {
          "format": "uuid",
          "description": "Order id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "fulfilmentCenter": {
          "format": "uuid",
          "description": "Current fulfilment center",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "refund": {
          "format": "double",
          "description": "Refund quantity",
          "type": "number"
        },
        "note": {
          "description": "Note a attach",
          "type": "string"
        }
      }
    },
    "Orders_MoveToLocationRequest": {
      "type": "object",
      "properties": {
        "orderIds": {
          "description": "Orders to be moved",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "pkStockLocationId": {
          "format": "uuid",
          "description": "Location where to move orders",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "fulfillmentStatusToApply": {
          "description": "Optional fulfilment status to be applied to successfully moved orders",
          "enum": [
            "Unassigned",
            "Assigned",
            "Submitted",
            "Accepted"
          ],
          "type": "string"
        }
      }
    },
    "MoveToLocationResult": {
      "type": "object",
      "properties": {
        "Errors": {
          "description": "List of errors",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "OrdersMoved": {
          "description": "List of orders that were moved",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "KeyedErrors": {
          "description": "Dictionary of keyed errors. These are the same errors as per the Errors property, but indexable by orderId",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "Orders_ClearShippingLabelInfoRequest": {
      "type": "object",
      "properties": {
        "orderIds": {
          "description": "Order ids",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "withoutConfirmation": {
          "description": "skip any confirmation message",
          "type": "boolean"
        }
      }
    },
    "KeyValuePair_Guid_String": {
      "type": "object",
      "properties": {
        "Key": {
          "format": "uuid",
          "type": "string",
          "readOnly": true,
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Value": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Orders_ClearInvoicePrintedRequest": {
      "type": "object",
      "properties": {
        "orderIds": {
          "description": "List of orders",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        }
      }
    },
    "Orders_ClearPickListPrintedRequest": {
      "type": "object",
      "properties": {
        "orderIds": {
          "description": "List of orders",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        }
      }
    },
    "ShippingMethod": {
      "type": "object",
      "properties": {
        "Vendor": {
          "description": "Courier name",
          "type": "string"
        },
        "PostalServices": {
          "description": "List of postal services",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PostageService"
          }
        }
      }
    },
    "PostageService": {
      "type": "object",
      "properties": {
        "pkPostalServiceId": {
          "format": "uuid",
          "description": "Postal service ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "PostalServiceName": {
          "description": "Postal service name",
          "type": "string"
        },
        "TrackingNumberRequired": {
          "description": "If tracking number is required for this service",
          "type": "boolean"
        },
        "Vendor": {
          "type": "string"
        },
        "IntegratedServiceID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "PackageGroup": {
      "type": "object",
      "properties": {
        "PackageCategoryID": {
          "format": "uuid",
          "description": "Package category ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "PackageCategory": {
          "description": "Package category name",
          "type": "string"
        },
        "rowguid": {
          "format": "uuid",
          "description": "Record row ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "PackageTypes": {
          "description": "List of packaging types",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PackageType"
          }
        }
      }
    },
    "PackageType": {
      "type": "object",
      "properties": {
        "PackageTypeId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "PackageGroupId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "PackageTitle": {
          "type": "string"
        },
        "FromGramms": {
          "format": "double",
          "type": "number"
        },
        "ToGramms": {
          "format": "double",
          "type": "number"
        },
        "PackagingWeight": {
          "format": "double",
          "type": "number"
        },
        "PackagingCapacity": {
          "format": "double",
          "type": "number"
        },
        "Width": {
          "format": "double",
          "type": "number"
        },
        "Height": {
          "format": "double",
          "type": "number"
        },
        "Depth": {
          "format": "double",
          "type": "number"
        },
        "Rowguid": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "Orders_SetExtendedPropertiesRequest": {
      "type": "object",
      "properties": {
        "orderId": {
          "format": "uuid",
          "description": "Order id (pkOrderID)",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "extendedProperties": {
          "description": "Extended property information",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtendedProperty"
          }
        }
      }
    },
    "Orders_GetOrderRequest": {
      "type": "object",
      "properties": {
        "orderId": {
          "format": "uuid",
          "description": "Order id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "fulfilmentLocationId": {
          "format": "uuid",
          "description": "Current fulfilment center",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "loadItems": {
          "description": "Load or not the order items information",
          "type": "boolean"
        },
        "loadAdditionalInfo": {
          "description": "Load or not the order additional info",
          "type": "boolean"
        }
      }
    },
    "Orders_GetOrdersRequest": {
      "type": "object",
      "properties": {
        "ordersIds": {
          "description": "Orders ids",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "fulfilmentLocationId": {
          "format": "uuid",
          "description": "Current fulfilment center",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "loadItems": {
          "description": "Load or not the orders items information",
          "type": "boolean"
        },
        "loadAdditionalInfo": {
          "description": "Load or not the orders additional info",
          "type": "boolean"
        }
      }
    },
    "OrderAuditTrail": {
      "type": "object",
      "properties": {
        "Date": {
          "format": "date-time",
          "description": "Date and time when audit record was added",
          "type": "string"
        },
        "Type": {
          "description": "Note type",
          "type": "string"
        },
        "Note": {
          "description": "Actual audit trail note",
          "type": "string"
        },
        "User": {
          "description": "User who left an audit trail record",
          "type": "string"
        },
        "fkOrderHistoryTypeId": {
          "description": "Note type ID",
          "type": "string"
        },
        "Tag": {
          "description": "Audit trail record tag",
          "type": "string"
        },
        "TypeDescription": {
          "description": "Note type description",
          "type": "string"
        }
      }
    },
    "GetOrderAuditTrailsByIdsRequest": {
      "type": "object",
      "properties": {
        "OrderIds": {
          "description": "List of order ids",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        }
      }
    },
    "GetOrderAuditTrailsByIdsResponse": {
      "type": "object",
      "properties": {
        "AuditTrails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderAuditTrailExtended"
          }
        }
      }
    },
    "OrderAuditTrailExtended": {
      "type": "object",
      "properties": {
        "pkOrderId": {
          "format": "uuid",
          "description": "Order id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "AuditTrail": {
          "description": "List of OrderAuditTrail entities",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderAuditTrail"
          }
        }
      }
    },
    "Orders_GetOrdersNotesRequest": {
      "type": "object",
      "properties": {
        "orderIds": {
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        }
      }
    },
    "OrderNoteType": {
      "type": "object",
      "properties": {
        "NoteTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "NoteType": {
          "type": "string"
        }
      }
    },
    "Orders_SetOrderNotesRequest": {
      "type": "object",
      "properties": {
        "orderId": {
          "format": "uuid",
          "description": "Order id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "orderNotes": {
          "description": "Notes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderNote"
          }
        }
      }
    },
    "AddOrdersNoteRequest": {
      "type": "object",
      "properties": {
        "OrderIds": {
          "description": "List of order Ids",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "NoteText": {
          "description": "Note text",
          "type": "string"
        },
        "IsInternal": {
          "description": "Specifies if the note should be internal to the system, or should be displayed on the invoice",
          "type": "boolean"
        },
        "IsProcessingNote": {
          "description": "Specifies if the note should pop up during order processing or not",
          "type": "boolean"
        }
      }
    },
    "AddOrdersNoteResponse": {
      "type": "object",
      "properties": {
        "OrderNotes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderNoteDto"
          }
        }
      }
    },
    "OrderNoteDto": {
      "type": "object",
      "properties": {
        "OrderNoteId": {
          "format": "uuid",
          "description": "Order note ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "OrderId": {
          "format": "uuid",
          "description": "Order Id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "NoteDate": {
          "format": "date-time",
          "description": "Date and time when note was added",
          "type": "string"
        },
        "Internal": {
          "description": "order note type (Internal or External)",
          "type": "boolean"
        },
        "Note": {
          "description": "Note's text",
          "type": "string"
        },
        "CreatedBy": {
          "description": "User that created note",
          "type": "string"
        },
        "NoteTypeId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "OrderRelation": {
      "type": "object",
      "properties": {
        "ParentOrderId": {
          "format": "uuid",
          "description": "Parent order GUID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ChildOrderId": {
          "format": "uuid",
          "description": "Child order GUID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Parent": {
          "format": "int32",
          "description": "Parent order ID",
          "type": "integer"
        },
        "Child": {
          "format": "int32",
          "description": "Child order ID",
          "type": "integer"
        },
        "Type": {
          "description": "Relation type",
          "type": "string"
        }
      }
    },
    "Orders_GetOrdersRelationsRequest": {
      "type": "object",
      "properties": {
        "orderIds": {
          "description": "List of order Ids",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        }
      }
    },
    "KeyValuePair_Guid_Guid": {
      "type": "object",
      "properties": {
        "Key": {
          "format": "uuid",
          "type": "string",
          "readOnly": true,
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Value": {
          "format": "uuid",
          "type": "string",
          "readOnly": true,
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "Orders_AddOrderItemRequest": {
      "type": "object",
      "properties": {
        "orderId": {
          "format": "uuid",
          "description": "Order id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "itemId": {
          "format": "uuid",
          "description": "Item id to be added",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "channelSKU": {
          "description": "Channel SKU of the item",
          "type": "string"
        },
        "fulfilmentCenter": {
          "format": "uuid",
          "description": "Current fulfilment center",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "quantity": {
          "format": "int32",
          "description": "Item quantity",
          "type": "integer"
        },
        "linePricing": {
          "$ref": "#/definitions/LinePricingRequest",
          "description": "Item pricing data"
        },
        "createdDate": {
          "format": "date-time",
          "description": "The datetime that the item was added to the order",
          "type": "string"
        }
      }
    },
    "LinePricingRequest": {
      "type": "object",
      "properties": {
        "PricePerUnit": {
          "format": "double",
          "description": "Price per unit (default from stock item)",
          "type": "number"
        },
        "DiscountPercentage": {
          "format": "double",
          "description": "Discount percentage (default 0)",
          "type": "number"
        },
        "TaxRatePercentage": {
          "format": "double",
          "description": "Tax rate percentage",
          "type": "number"
        },
        "TaxInclusive": {
          "description": "Tax inclusive (default true)",
          "type": "boolean"
        }
      }
    },
    "UpdateOrderItemResult": {
      "type": "object",
      "properties": {
        "TotalsInfo": {
          "$ref": "#/definitions/OrderTotalsInfo",
          "description": "Order figures"
        },
        "Item": {
          "$ref": "#/definitions/OrderItem",
          "description": "Order items information"
        },
        "ItemWeight": {
          "format": "double",
          "description": "Order item weight",
          "type": "number"
        },
        "TotalWeight": {
          "format": "double",
          "description": "Order total weight",
          "type": "number"
        }
      }
    },
    "Orders_AddOrderServiceRequest": {
      "type": "object",
      "properties": {
        "OrderId": {
          "format": "uuid",
          "description": "Order id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Service": {
          "description": "Service",
          "type": "string"
        },
        "Cost": {
          "format": "double",
          "description": "Price Per Unit of each service item",
          "type": "number"
        },
        "TaxRate": {
          "format": "double",
          "description": "Tax rate. Optional, defaults to 0.",
          "type": "number"
        },
        "FulfilmentCenter": {
          "format": "uuid",
          "description": "Current fulfilment center",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Quantity": {
          "format": "int32",
          "description": "Quantity of the service item. Optional, defaults to 1.",
          "type": "integer"
        },
        "DiscountPercentage": {
          "format": "double",
          "description": "Discount percentage applied to the service item. Optional, defaults to 0.",
          "type": "number"
        },
        "AddedDate": {
          "format": "date-time",
          "description": "Holds the datetime that the service was added to the order",
          "type": "string"
        }
      }
    },
    "Orders_UpdateOrderItemRequest": {
      "type": "object",
      "properties": {
        "orderId": {
          "format": "uuid",
          "description": "Order id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "orderItem": {
          "$ref": "#/definitions/OrderItem",
          "description": "The order item to be updated"
        },
        "fulfilmentCenter": {
          "format": "uuid",
          "description": "Current fulfilment center",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "source": {
          "description": "Source",
          "type": "string"
        },
        "subSource": {
          "description": "",
          "type": "string"
        }
      }
    },
    "Orders_RemoveOrderItemRequest": {
      "type": "object",
      "properties": {
        "orderId": {
          "format": "uuid",
          "description": "Order id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "rowid": {
          "format": "uuid",
          "description": "Row id of the item",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "fulfilmentCenter": {
          "format": "uuid",
          "description": "Fulfilment center id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "OrderCountry": {
      "type": "object",
      "properties": {
        "CountryId": {
          "format": "uuid",
          "description": "Country ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "CountryName": {
          "description": "Country name",
          "type": "string"
        },
        "CountryCode": {
          "description": "Country code",
          "type": "string"
        },
        "Continent": {
          "description": "Country continent",
          "type": "string"
        },
        "CustomsRequired": {
          "description": "If customs required",
          "type": "boolean"
        },
        "TaxRate": {
          "format": "double",
          "description": "Country tax rate",
          "type": "number"
        }
      }
    },
    "PaymentMethod": {
      "type": "object",
      "properties": {
        "Name": {
          "description": "Payment method name",
          "type": "string"
        },
        "CanDelete": {
          "description": "If it can be deleted",
          "type": "boolean"
        },
        "PaymentMethodId": {
          "format": "uuid",
          "description": "Payment method ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "Orders_SetDefaultPaymentMethodIdForNewOrderRequest": {
      "type": "object",
      "properties": {
        "paymentMethod": {
          "format": "uuid",
          "description": "Id of the payment method",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "Orders_SetPaymentMethodsRequest": {
      "type": "object",
      "properties": {
        "paymentMethods": {
          "description": "List of payment methods",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PaymentMethod"
          }
        }
      }
    },
    "Orders_CreateNewOrderRequest": {
      "type": "object",
      "properties": {
        "fulfilmentCenter": {
          "format": "uuid",
          "description": "Fulfilment center to be associated",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "createAsDraft": {
          "description": "",
          "type": "boolean"
        }
      }
    },
    "Orders_CompleteOrderRequest": {
      "type": "object",
      "properties": {
        "orderId": {
          "format": "uuid",
          "description": "Order id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "Orders_SplitOrderRequest": {
      "type": "object",
      "properties": {
        "orderId": {
          "format": "uuid",
          "description": "Order id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "newOrders": {
          "description": "New orders",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderSplit"
          }
        },
        "type": {
          "description": "Split type",
          "type": "string"
        },
        "fulfilmentLocationId": {
          "format": "uuid",
          "description": "Current fulfilment center",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "recalcPackaging": {
          "description": "Whether or not to recalculate the order packaging",
          "type": "boolean"
        },
        "fulfillmentStatus": {
          "description": "Optional, if provided the fulfillment status for the newly created orders will be set to this",
          "enum": [
            "Unassigned",
            "Assigned",
            "Submitted",
            "Accepted"
          ],
          "type": "string"
        }
      }
    },
    "OrderSplit": {
      "description": "Split Order",
      "type": "object",
      "properties": {
        "Items": {
          "description": "Items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderSplitOutItem"
          }
        },
        "PostalServiceId": {
          "format": "uuid",
          "description": "Postal Service",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ParkOrder": {
          "type": "boolean"
        }
      }
    },
    "OrderSplitOutItem": {
      "type": "object",
      "properties": {
        "RowId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer"
        },
        "Weight": {
          "format": "double",
          "type": "number"
        },
        "UnitCost": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "Orders_MergeOrdersRequest": {
      "type": "object",
      "properties": {
        "ordersToMerge": {
          "description": "Orders to merge",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "fulfilmentCenter": {
          "format": "uuid",
          "description": "Current fulfilment center",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "pkPostalServiceId": {
          "format": "uuid",
          "description": "Postal service id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "Orders_ProcessOrderRequest": {
      "type": "object",
      "properties": {
        "orderId": {
          "format": "uuid",
          "description": "Order id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "scanPerformed": {
          "description": "Indicate if the scan has been performed",
          "type": "boolean"
        },
        "locationId": {
          "format": "uuid",
          "description": "User location",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "context": {
          "$ref": "#/definitions/ClientContext",
          "description": "Information about where the call came from"
        }
      }
    },
    "ClientContext": {
      "type": "object",
      "properties": {
        "Module": {
          "type": "string"
        }
      }
    },
    "ProcessOrderResult": {
      "type": "object",
      "properties": {
        "OrderId": {
          "format": "uuid",
          "description": "Order ID (pkOrderId)",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Processed": {
          "description": "Order was processed",
          "type": "boolean"
        },
        "Error": {
          "description": "There was ab error during processing",
          "type": "string"
        }
      }
    },
    "Orders_ProcessOrder_RequiredBatchScansRequest": {
      "type": "object",
      "properties": {
        "BatchAssignment": {
          "$ref": "#/definitions/BatchAssignmentForOrderItems",
          "description": "Batch information to be added"
        }
      }
    },
    "BatchAssignmentForOrderItems": {
      "type": "object",
      "properties": {
        "orderId": {
          "format": "uuid",
          "description": "Identifies the order to be updated",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "batchToItemMapping": {
          "description": "Maps order items to batches",
          "type": "array",
          "items": {
            "$ref": "#/definitions/batchAssignment"
          }
        }
      }
    },
    "batchAssignment": {
      "type": "object",
      "properties": {
        "orderItemRowId": {
          "format": "uuid",
          "description": "Identifies the order item row to assign to the batch",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "batchInventoryId": {
          "format": "int32",
          "description": "Identifies the batch for the order",
          "type": "integer"
        },
        "quantity": {
          "format": "int32",
          "description": "The number of items to be assigned to the selected batch",
          "type": "integer"
        }
      }
    },
    "Orders_ProcessOrdersInBatchRequest": {
      "type": "object",
      "properties": {
        "ordersIds": {
          "description": "List of orders ids",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "locationId": {
          "format": "uuid",
          "description": "User location",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "context": {
          "$ref": "#/definitions/ClientContext",
          "description": "Information about where the call came from"
        }
      }
    },
    "Orders_ProcessFulfilmentCentreOrderRequest": {
      "type": "object",
      "properties": {
        "orderId": {
          "format": "uuid",
          "description": "pkOrderID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "Orders_SetOrderGeneralInfoRequest": {
      "type": "object",
      "properties": {
        "orderId": {
          "format": "uuid",
          "description": "Order id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "info": {
          "$ref": "#/definitions/OrderGeneralInfo",
          "description": "General info"
        },
        "wasDraft": {
          "description": "Indicate if the order was a draft before this operation",
          "type": "boolean"
        }
      }
    },
    "Orders_SetOrderShippingInfoRequest": {
      "type": "object",
      "properties": {
        "orderId": {
          "format": "uuid",
          "description": "Order id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "info": {
          "$ref": "#/definitions/UpdateOrderShippingInfoRequest",
          "description": "Shipping info"
        }
      }
    },
    "UpdateOrderShippingInfoRequest": {
      "type": "object",
      "properties": {
        "PostalServiceId": {
          "format": "uuid",
          "description": "Postal service ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "TotalWeight": {
          "format": "double",
          "description": "Order total weight",
          "type": "number"
        },
        "ItemWeight": {
          "format": "double",
          "description": "If order is processed",
          "type": "number"
        },
        "PostageCost": {
          "format": "double",
          "description": "Order postage cost",
          "type": "number"
        },
        "TrackingNumber": {
          "description": "Order tracking number provided by courier",
          "type": "string"
        },
        "ManualAdjust": {
          "description": "If there is an adjustment to shipping cost was made",
          "type": "boolean"
        }
      }
    },
    "UpdateTotalsResult": {
      "type": "object",
      "properties": {
        "TotalsInfo": {
          "$ref": "#/definitions/OrderTotalsInfo"
        },
        "ShippingInfo": {
          "$ref": "#/definitions/OrderShippingInfo"
        }
      }
    },
    "Orders_SetOrderCustomerInfoRequest": {
      "type": "object",
      "properties": {
        "orderId": {
          "format": "uuid",
          "description": "Order id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "info": {
          "$ref": "#/definitions/OrderCustomerInfo",
          "description": "Customer info"
        },
        "saveToCrm": {
          "description": "Whether to save the shipping address into CRM, default = false",
          "type": "boolean"
        }
      }
    },
    "Orders_SetOrderTotalsInfoRequest": {
      "type": "object",
      "properties": {
        "orderId": {
          "format": "uuid",
          "description": "Order id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "info": {
          "$ref": "#/definitions/OrderTotalsInfo",
          "description": "Totals info"
        }
      }
    },
    "Orders_ValidateCouponRequest": {
      "type": "object",
      "properties": {
        "orderId": {
          "format": "uuid",
          "description": "Order id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "barcode": {
          "description": "Coupon barcode",
          "type": "string"
        }
      }
    },
    "CouponValidationResult": {
      "type": "object",
      "properties": {
        "ValidationText": {
          "description": "Validation note",
          "type": "string"
        },
        "DeductVisible": {
          "description": "If deduction is visible",
          "type": "boolean"
        },
        "DeductText": {
          "description": "Deduction note",
          "type": "string"
        },
        "BalanceVisible": {
          "description": "If balance is visible",
          "type": "boolean"
        },
        "BalanceText": {
          "description": "Balance record",
          "type": "string"
        },
        "ValueText": {
          "description": "Value",
          "type": "string"
        },
        "DiscountType": {
          "description": "Discount type",
          "type": "string"
        }
      }
    },
    "Orders_AddCouponRequest": {
      "type": "object",
      "properties": {
        "orderId": {
          "format": "uuid",
          "description": "Order id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "barcode": {
          "description": "Coupon barcode",
          "type": "string"
        },
        "couponData": {
          "$ref": "#/definitions/CouponValidationResult",
          "description": "Coupon data"
        },
        "fulfilmentCenter": {
          "format": "uuid",
          "description": "Current fulfilment center",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "Orders_UpdateBillingAddressRequest": {
      "type": "object",
      "properties": {
        "orderId": {
          "format": "uuid",
          "description": "Order id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "billingAddress": {
          "$ref": "#/definitions/CustomerAddress",
          "description": "Billing address"
        }
      }
    },
    "Orders_SetAdditionalInfoRequest": {
      "type": "object",
      "properties": {
        "orderId": {
          "format": "uuid",
          "description": "Order id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "rowId": {
          "format": "uuid",
          "description": "Item row id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "additionalInfo": {
          "description": "Additional info to set",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderItemOption"
          }
        }
      }
    },
    "Orders_UpdateAdditionalInfoRequest": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/UpdateAdditionalInfoRequest",
          "description": ""
        }
      }
    },
    "UpdateAdditionalInfoRequest": {
      "type": "object",
      "properties": {
        "OrderId": {
          "format": "uuid",
          "description": "Linnworks Order Id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "OrderItemRowId": {
          "format": "uuid",
          "description": "The Row Id for the order item",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "AdditionalInfo": {
          "description": "A list of additional information to update or delete from the order item",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderItemOptionUpdate"
          }
        }
      }
    },
    "OrderItemOptionUpdate": {
      "type": "object",
      "properties": {
        "DeleteEntry": {
          "type": "boolean"
        },
        "pkOptionId": {
          "format": "uuid",
          "description": "Option ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Property": {
          "description": "Option property",
          "type": "string"
        },
        "Value": {
          "description": "Value of the option",
          "type": "string"
        }
      }
    },
    "UserOrderView": {
      "type": "object",
      "properties": {
        "pkViewId": {
          "format": "int32",
          "description": "View ID",
          "type": "integer"
        },
        "ViewName": {
          "description": "View name",
          "type": "string"
        },
        "OwnerName": {
          "description": "View owner name",
          "type": "string"
        },
        "AllowModify": {
          "description": "Can be modified",
          "type": "boolean"
        },
        "JSONDetail": {
          "type": "string"
        }
      }
    },
    "Orders_SaveOrderViewRequest": {
      "type": "object",
      "properties": {
        "pkViewId": {
          "format": "int32",
          "description": "View id",
          "type": "integer"
        },
        "viewName": {
          "description": "View name",
          "type": "string"
        },
        "OrderViewDetailJSON": {
          "description": "Detail serialized in JSON",
          "type": "string"
        }
      }
    },
    "LinkedItem": {
      "type": "object",
      "properties": {
        "pkStockId": {
          "format": "uuid",
          "description": "Country ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ItemNumber": {
          "description": "Product SKU",
          "type": "string"
        },
        "ItemName": {
          "description": "Product title",
          "type": "string"
        }
      }
    },
    "Orders_UpdateLinkItemRequest": {
      "type": "object",
      "properties": {
        "pkStockId": {
          "format": "uuid",
          "description": "Stock id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "pkStockItemId": {
          "format": "uuid",
          "description": "Stock item id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "source": {
          "description": "Source",
          "type": "string"
        },
        "subSource": {
          "description": "Subsource",
          "type": "string"
        },
        "channelSKU": {
          "description": "Channel SKU",
          "type": "string"
        }
      }
    },
    "Orders_CreateNewItemAndLinkRequest": {
      "type": "object",
      "properties": {
        "pkStockItemId": {
          "format": "uuid",
          "description": "Stock item id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "itemTitle": {
          "description": "Title",
          "type": "string"
        },
        "source": {
          "description": "Source",
          "type": "string"
        },
        "subSource": {
          "description": "Subsource",
          "type": "string"
        },
        "channelSKU": {
          "description": "Channel SKU",
          "type": "string"
        },
        "locationId": {
          "format": "uuid",
          "description": "User location",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "initialQuantity": {
          "format": "int32",
          "description": "Initial quantity once the inventory item has been created",
          "type": "integer"
        }
      }
    },
    "OrderPackagingSplit": {
      "type": "object",
      "properties": {
        "pkBinId": {
          "format": "uuid",
          "description": "Bin ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "pkPostalServiceId": {
          "format": "uuid",
          "description": "Postal service ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "PackagingWeight": {
          "format": "double",
          "description": "Order packaging weight",
          "type": "number"
        },
        "fkPackagingTypeId": {
          "format": "uuid",
          "description": "Order packaging type",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Items": {
          "description": "List of items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderPackagingSplitItem"
          }
        },
        "TotalWeight": {
          "format": "double",
          "description": "Total weight",
          "type": "number"
        },
        "Width": {
          "format": "double",
          "description": "Width",
          "type": "number"
        },
        "Height": {
          "format": "double",
          "description": "Height",
          "type": "number"
        },
        "Depth": {
          "format": "double",
          "description": "Depth",
          "type": "number"
        },
        "TrackingNumbers": {
          "description": "Tracking number",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "OrderPackagingSplitItem": {
      "type": "object",
      "properties": {
        "AssignedBatches": {
          "description": "The batches that make up this row",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderItemShippingBatchWithRow"
          }
        },
        "RowId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "BoxId": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "Quantity": {
          "format": "int32",
          "type": "integer"
        },
        "TrackingNumber": {
          "type": "string"
        },
        "Weight": {
          "format": "double",
          "type": "number"
        },
        "SKU": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        },
        "IsBatched": {
          "description": "Is the order item batched",
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "OrderItemShippingBatchWithRow": {
      "type": "object",
      "properties": {
        "OrderItemRowId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "BatchNumber": {
          "type": "string"
        },
        "fkBinId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "fkOrderItemBatchId": {
          "format": "int32",
          "type": "integer"
        },
        "Quantity": {
          "format": "int32",
          "description": "The quantity taken from the batch to fulfil this item",
          "type": "integer"
        }
      }
    },
    "Orders_SetOrderPackagingSplitRequest": {
      "type": "object",
      "properties": {
        "orderId": {
          "format": "uuid",
          "description": "Order id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "packagingSplit": {
          "description": "Order split",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderPackagingSplit"
          }
        }
      }
    },
    "Orders_GetOpenOrderIdByOrderOrReferenceIdRequest": {
      "type": "object",
      "properties": {
        "orderOrReferenceId": {
          "description": "reference number or order number",
          "type": "string"
        },
        "filters": {
          "$ref": "#/definitions/FieldsFilter",
          "description": "Filters to apply"
        },
        "locationId": {
          "format": "uuid",
          "description": "User location",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "Orders_ProcessOrderByOrderOrReferenceIdRequest": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/ProcessOrderByOrderIdOrReferenceRequest"
        }
      }
    },
    "ProcessOrderByOrderIdOrReferenceRequest": {
      "description": "A request used to process an order by id or reference",
      "type": "object",
      "properties": {
        "OrderOrReferenceId": {
          "description": "The order id or reference id",
          "type": "string"
        },
        "LocationId": {
          "format": "uuid",
          "description": "The location to process the order from",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ScansPerformed": {
          "description": "Defines if the batches have been scanned",
          "type": "boolean"
        },
        "OrderProcessingNotesAcknowledged": {
          "description": "Have the processing notes been acknowledged",
          "type": "boolean"
        },
        "WorkflowJobId": {
          "format": "int32",
          "description": "Workflow job id that the order is supposed to belong to",
          "type": "integer"
        }
      }
    },
    "ProcessOrderByOrderIdOrReferenceResponse": {
      "description": "A response class used when processing an order by order id or reference",
      "type": "object",
      "properties": {
        "ProcessedState": {
          "description": "The processed state",
          "enum": [
            "PROCESSED",
            "NOT_FOUND",
            "SCAN_REQUIRED",
            "NOT_PROCESSED",
            "NOTE_ACKNOWLEDGEMENT_REQUIRED",
            "NOT_IN_WORKFLOW"
          ],
          "type": "string"
        },
        "Message": {
          "description": "A message - Provided if there have been errors",
          "type": "string"
        },
        "Response": {
          "description": "A response object used if further action is required",
          "type": "object"
        },
        "OrderId": {
          "format": "uuid",
          "description": "The ID of the order - Guid empty if not found",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "OrderSummary": {
          "$ref": "#/definitions/OrderSummary",
          "description": "Used when an order has been processed"
        },
        "Items": {
          "description": "The items that need to be scanned - If any",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderItem"
          }
        },
        "BatchInformation": {
          "description": "The batched items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StockItemBatch"
          }
        }
      }
    },
    "OrderSummary": {
      "type": "object",
      "properties": {
        "OrderId": {
          "format": "uuid",
          "description": "Order ID (pkOrderId)",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "NumOrderId": {
          "format": "int32",
          "description": "Linnworks order number",
          "type": "integer"
        },
        "ReceivedDate": {
          "format": "date-time",
          "description": "Date when order was received on a channel",
          "type": "string"
        },
        "ProcessDate": {
          "format": "date-time",
          "description": "Date when order was processed",
          "type": "string"
        },
        "Source": {
          "description": "Channel name / source (e.g. EBAY)",
          "type": "string"
        },
        "CustomerName": {
          "description": "Customer name",
          "type": "string"
        },
        "NumProducts": {
          "format": "int32",
          "description": "Quantity of products on an Order",
          "type": "integer"
        },
        "FulfillmentLocationId": {
          "format": "uuid",
          "description": "Order location ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "Orders_GetOpenOrdersByItemBarcodeRequest": {
      "type": "object",
      "properties": {
        "productBarcode": {
          "description": "Item barcode",
          "type": "string"
        },
        "filters": {
          "$ref": "#/definitions/FieldsFilter",
          "description": "Filters to apply"
        },
        "locationId": {
          "format": "uuid",
          "description": "User location",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "KeyValuePair_List_OrderSummary_String": {
      "type": "object",
      "properties": {
        "Key": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderSummary"
          },
          "readOnly": true
        },
        "Value": {
          "type": "string",
          "readOnly": true
        }
      }
    }
  },
  "securityDefinitions": {
    "token": {
      "type": "apiKey",
      "description": "Authorization Header",
      "name": "Authorization",
      "in": "header"
    }
  }
}