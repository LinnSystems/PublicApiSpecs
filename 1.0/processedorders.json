{
  "swagger": "2.0",
  "info": {
    "version": "processedorders",
    "title": "Processed Orders API"
  },
  "host": "eu-ext.linnworks.net",
  "schemes": [
    "https"
  ],
  "paths": {
    "/api/ProcessedOrders/RefundFreeText": {
      "post": {
        "tags": [
          "ProcessedOrders"
        ],
        "summary": "RefundFreeText",
        "description": "Use this call to add or update a free text refund. This method can also be used to change the refund amount for any pending manual refund. Please check any automated refunds are valid prior to calling this method.\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "RefundFreeText",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ProcessedOrders_RefundFreeTextRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProcessedOrders_RefundFreeTextRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RefundInfo"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ProcessedOrders/RefundShipping": {
      "post": {
        "tags": [
          "ProcessedOrders"
        ],
        "summary": "RefundShipping",
        "description": "Use this call to refund shipping for an order. Please check the refund options to ensure that a shipping refund is possible.\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "RefundShipping",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ProcessedOrders_RefundShippingRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProcessedOrders_RefundShippingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RefundInfo"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ProcessedOrders/MarkManualRefundsAsActioned": {
      "post": {
        "tags": [
          "ProcessedOrders"
        ],
        "summary": "MarkManualRefundsAsActioned",
        "description": "Use this call to update pending manual refunds to the actioned state.\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "MarkManualRefundsAsActioned",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "ProcessedOrders_MarkManualRefundsAsActionedRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProcessedOrders_MarkManualRefundsAsActionedRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ProcessedOrders/RefundServices": {
      "post": {
        "tags": [
          "ProcessedOrders"
        ],
        "summary": "RefundServices",
        "description": "Use this call to refund one or more services on an order. Please check that any automated refunds are valid prior to calling this method.\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "RefundServices",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ProcessedOrders_RefundServicesRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProcessedOrders_RefundServicesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RefundInfo"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ProcessedOrders/ValidateCompleteOrderRefund": {
      "post": {
        "tags": [
          "ProcessedOrders"
        ],
        "summary": "ValidateCompleteOrderRefund",
        "description": "Use this call to check if it is possible to do an automated full-order refund.\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "ValidateCompleteOrderRefund",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ProcessedOrders_ValidateCompleteOrderRefundRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProcessedOrders_ValidateCompleteOrderRefundRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ValidationResult"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ProcessedOrders/GetRefundsOptions": {
      "get": {
        "tags": [
          "ProcessedOrders"
        ],
        "summary": "GetRefundsOptions",
        "description": "Use this call to get information about manual/automated refunds (which kinds of refunds are possible) for a given order.\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetRefundsOptions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "pkOrderId",
            "in": "query",
            "description": "The id of the order",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RefundScreenOptions"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ProcessedOrders/GetRefundableServiceItems": {
      "get": {
        "tags": [
          "ProcessedOrders"
        ],
        "summary": "GetRefundableServiceItems",
        "description": "Use this call to get a list of service items which can be refunded.\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetRefundableServiceItems",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "pkOrderId",
            "in": "query",
            "description": "The id of the order which the service items belong to.",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ServiceItem"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ProcessedOrders/GetTotalRefunds": {
      "get": {
        "tags": [
          "ProcessedOrders"
        ],
        "summary": "GetTotalRefunds",
        "description": "Use this call to retrieve the total value of refunds against an order.\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetTotalRefunds",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "pkOrderId",
            "in": "query",
            "description": "The id of the order",
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "includeBookings",
            "in": "query",
            "description": "If true, pending refunds against return bookings and exchange bookings will be included. (Optional, default is false.)",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExistingRefundTotal"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ProcessedOrders/IsRefundValid": {
      "post": {
        "tags": [
          "ProcessedOrders"
        ],
        "summary": "IsRefundValid",
        "description": "Use this call to determine if the refunds in a given return set are valid.\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "IsRefundValid",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ProcessedOrders_IsRefundValidRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProcessedOrders_IsRefundValidRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ValidationResult"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ProcessedOrders/IsRefundValidationRequiredByOrderId": {
      "get": {
        "tags": [
          "ProcessedOrders"
        ],
        "summary": "IsRefundValidationRequiredByOrderId",
        "description": "Use this call to determine if validation of refunds or returns/exchanges with refund components is required for a given order.\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "IsRefundValidationRequiredByOrderId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "pkOrderId",
            "in": "query",
            "description": "The order id of the order which requires validation",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ProcessedOrders/GetChannelRefundReasons": {
      "get": {
        "tags": [
          "ProcessedOrders"
        ],
        "summary": "GetChannelRefundReasons",
        "description": "Use this call to get a list of valid channel refund reasons for a given order. These are needed for channel refunds.\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetChannelRefundReasons",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "pkOrderId",
            "in": "query",
            "description": "The order id to get reasons for",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ChannelRefundReason"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ProcessedOrders/GetReturnsExchanges": {
      "get": {
        "tags": [
          "ProcessedOrders"
        ],
        "summary": "GetReturnsExchanges",
        "description": "Use this call to get a basic list of returns, exchanges and resends for an order.\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetReturnsExchanges",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "pkOrderId",
            "in": "query",
            "description": "The order id to get the returns for",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReturnInfo"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ProcessedOrders/GetReturnItemsInfo": {
      "get": {
        "tags": [
          "ProcessedOrders"
        ],
        "summary": "GetReturnItemsInfo",
        "description": "Use this call to get a list of all items on an order, including return quantities and resend quantities. The information can be used to calculate how many items has already been returned.\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>250</b></span> / minute",
        "operationId": "GetReturnItemsInfo",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "pkOrderId",
            "in": "query",
            "description": "The order id to get the returns for",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrderItemReturnInfo"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ProcessedOrders/GetReturnOrderInfo": {
      "get": {
        "tags": [
          "ProcessedOrders"
        ],
        "summary": "GetReturnOrderInfo",
        "description": "Use this call to get basic information about a processed order (e.g. source, subsource, address) as seen on the Returns/Refunds screens.\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetReturnOrderInfo",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "pkOrderId",
            "in": "query",
            "description": "The id of the order.",
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "includeRefundLink",
            "in": "query",
            "description": "Is a refund link required (not available for all channels).",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReturnOrderHeader"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ProcessedOrders/GetOrderInfo": {
      "get": {
        "tags": [
          "ProcessedOrders"
        ],
        "summary": "GetOrderInfo",
        "description": "Use this call to retrieve detailed information about a processed order (header level).\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>250</b></span> / minute",
        "operationId": "GetOrderInfo",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "pkOrderId",
            "in": "query",
            "description": "The id of the order.",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProcessedOrderWeb"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ProcessedOrders/GetOrderTrackingURLs": {
      "post": {
        "tags": [
          "ProcessedOrders"
        ],
        "summary": "GetOrderTrackingURLs",
        "description": "Use this call to retrieve detailed TrackingURL for orders Vendor and TrackingNumber.\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.ProcessedOrdersNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetOrderTrackingURLs",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request for TrackingURL.",
            "schema": {
              "$ref": "#/definitions/GetOrderTrackingURLsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetOrderTrackingURLsResponse"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ProcessedOrders/SearchProcessedOrders": {
      "post": {
        "tags": [
          "ProcessedOrders"
        ],
        "summary": "SearchProcessedOrders",
        "description": "Search Processed Orders\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.ProcessedOrdersNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "SearchProcessedOrders",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ProcessedOrders_SearchProcessedOrdersRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProcessedOrders_SearchProcessedOrdersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SearchProcessedOrdersResponse"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ProcessedOrders/SearchProcessedOrdersPaged": {
      "post": {
        "tags": [
          "ProcessedOrders"
        ],
        "summary": "SearchProcessedOrdersPaged",
        "description": "Use this call to search for processed orders.\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "SearchProcessedOrdersPaged",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ProcessedOrders_SearchProcessedOrdersPagedRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProcessedOrders_SearchProcessedOrdersPagedRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GenericPagedResult_ProcessedOrderWeb"
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ProcessedOrders/DownloadOrdersToCSV": {
      "post": {
        "tags": [
          "ProcessedOrders"
        ],
        "summary": "DownloadOrdersToCSV",
        "description": "Download Processed Orders to CSV\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.ProcessedOrders.DownloadProcessedOrdersNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "DownloadOrdersToCSV",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ProcessedOrders_DownloadOrdersToCSVRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProcessedOrders_DownloadOrdersToCSVRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DownloadOrdersToCSVResponse"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ProcessedOrders/AddReturnCategory": {
      "post": {
        "tags": [
          "ProcessedOrders"
        ],
        "summary": "AddReturnCategory",
        "description": "Use this call to add a new return category.\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "AddReturnCategory",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ProcessedOrders_AddReturnCategoryRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProcessedOrders_AddReturnCategoryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OrderReturnCategory"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ProcessedOrders/RenameReturnCategory": {
      "post": {
        "tags": [
          "ProcessedOrders"
        ],
        "summary": "RenameReturnCategory",
        "description": "Use this call to rename an existing return category.\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "RenameReturnCategory",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "ProcessedOrders_RenameReturnCategoryRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProcessedOrders_RenameReturnCategoryRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ProcessedOrders/DeleteReturnCategory": {
      "post": {
        "tags": [
          "ProcessedOrders"
        ],
        "summary": "DeleteReturnCategory",
        "description": "Use this call to delete an existing return category.\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "DeleteReturnCategory",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "ProcessedOrders_DeleteReturnCategoryRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProcessedOrders_DeleteReturnCategoryRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ProcessedOrders/GetProcessedRelatives": {
      "get": {
        "tags": [
          "ProcessedOrders"
        ],
        "summary": "GetProcessedRelatives",
        "description": "Use this call to get a list of related orders.\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetProcessedRelatives",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "pkOrderId",
            "in": "query",
            "description": "The order id",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProcessedOrderRelation"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ProcessedOrders/GetPackageSplit": {
      "get": {
        "tags": [
          "ProcessedOrders"
        ],
        "summary": "GetPackageSplit",
        "description": "Use this call to get split packaging information for an order\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetPackageSplit",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "pkOrderId",
            "in": "query",
            "description": "The order id",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SplitPackaging"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ProcessedOrders/GetProcessedAuditTrail": {
      "get": {
        "tags": [
          "ProcessedOrders"
        ],
        "summary": "GetProcessedAuditTrail",
        "description": "Use this call to get an order's audit trail information\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetProcessedAuditTrail",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "pkOrderId",
            "in": "query",
            "description": "The order id",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AuditEntry"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ProcessedOrders/GetProcessedOrderExtendedProperties": {
      "get": {
        "tags": [
          "ProcessedOrders"
        ],
        "summary": "GetProcessedOrderExtendedProperties",
        "description": "Use this call to retrieve a list of order-level extended properties.\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>250</b></span> / minute",
        "operationId": "GetProcessedOrderExtendedProperties",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "pkOrderId",
            "in": "query",
            "description": "The order id",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrderExtendedProperty"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ProcessedOrders/GetReturnCategories": {
      "get": {
        "tags": [
          "ProcessedOrders"
        ],
        "summary": "GetReturnCategories",
        "description": "Use this call to retrieve a list of return categories. Used for refunds, resends and exchanges.\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetReturnCategories",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrderReturnCategory"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ProcessedOrders/GetProcessedOrderNotes": {
      "get": {
        "tags": [
          "ProcessedOrders"
        ],
        "summary": "GetProcessedOrderNotes",
        "description": "Use this call to get a list of order notes for a given order\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetProcessedOrderNotes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "pkOrderId",
            "in": "query",
            "description": "The order id",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProcessedOrderNote"
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ProcessedOrders/AddOrderNote": {
      "post": {
        "tags": [
          "ProcessedOrders"
        ],
        "summary": "AddOrderNote",
        "description": "Use this call to add a new note to an order\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>250</b></span> / minute",
        "operationId": "AddOrderNote",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ProcessedOrders_AddOrderNoteRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProcessedOrders_AddOrderNoteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "uuid",
              "type": "string",
              "example": "00000000-0000-0000-0000-000000000000"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ProcessedOrders/ChangeOrderNote": {
      "post": {
        "tags": [
          "ProcessedOrders"
        ],
        "summary": "ChangeOrderNote",
        "description": "Edit an existing order note\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "ChangeOrderNote",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "ProcessedOrders_ChangeOrderNoteRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProcessedOrders_ChangeOrderNoteRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ProcessedOrders/DeleteOrderNote": {
      "post": {
        "tags": [
          "ProcessedOrders"
        ],
        "summary": "DeleteOrderNote",
        "description": "Delete an existing order note\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "DeleteOrderNote",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "ProcessedOrders_DeleteOrderNoteRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProcessedOrders_DeleteOrderNoteRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ProcessedOrders/CreateExchange": {
      "post": {
        "tags": [
          "ProcessedOrders"
        ],
        "summary": "CreateExchange",
        "description": "\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "CreateExchange",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ProcessedOrders_CreateExchangeRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProcessedOrders_CreateExchangeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReturnInfo"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ProcessedOrders/CreateResend": {
      "post": {
        "tags": [
          "ProcessedOrders"
        ],
        "summary": "CreateResend",
        "description": "Creates a resend\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "CreateResend",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ProcessedOrders_CreateResendRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProcessedOrders_CreateResendRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReturnInfo"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ProcessedOrders/CreateFullResend": {
      "post": {
        "tags": [
          "ProcessedOrders"
        ],
        "summary": "CreateFullResend",
        "description": "\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "CreateFullResend",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ProcessedOrders_CreateFullResendRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProcessedOrders_CreateFullResendRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReturnInfo"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ProcessedOrders/GetRefunds": {
      "get": {
        "tags": [
          "ProcessedOrders"
        ],
        "summary": "GetRefunds",
        "description": "Gets all refund order items for an order\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetRefunds",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "pkOrderId",
            "in": "query",
            "description": "Primary key for order",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RefundInfo"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ProcessedOrders/CheckOrderFullyReturned": {
      "get": {
        "tags": [
          "ProcessedOrders"
        ],
        "summary": "CheckOrderFullyReturned",
        "description": "Checks if order was fully returned\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "CheckOrderFullyReturned",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "pkOrderId",
            "in": "query",
            "description": "Primary key for an order",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    }
  },
  "definitions": {
    "ProcessedOrders_RefundFreeTextRequest": {
      "type": "object",
      "properties": {
        "pkOrderId": {
          "format": "uuid",
          "description": "The id of the order to add/update refunds for",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "refundItems": {
          "description": "The new/altered refund items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RefundItem"
          }
        }
      }
    },
    "RefundItem": {
      "type": "object",
      "properties": {
        "pkRefundRowId": {
          "format": "uuid",
          "description": "For updating refund amounts",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "IsManualRefund": {
          "description": "Manual refunds will never be passed to the channel validation routines",
          "type": "boolean"
        },
        "Type": {
          "description": "The type of refund item",
          "enum": [
            "Item",
            "Service",
            "Shipping",
            "FreeText"
          ],
          "type": "string"
        },
        "fkOrderItemId": {
          "format": "uuid",
          "description": "The order item or service to refund",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "RefundQty": {
          "format": "int32",
          "description": "In the case of item refunds, the number of items",
          "type": "integer"
        },
        "RefundAmount": {
          "format": "double",
          "description": "The amount of money the refund is for.",
          "type": "number"
        },
        "Reason": {
          "description": "The seller's text reason for the refund",
          "type": "string"
        },
        "ChannelReason": {
          "description": "The primary channel reason",
          "type": "string"
        },
        "ChannelReasonSec": {
          "description": "The secondary channel reason",
          "type": "string"
        }
      }
    },
    "RefundInfo": {
      "type": "object",
      "properties": {
        "pkRefundRowId": {
          "format": "uuid",
          "description": "Refund record ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "SKU": {
          "description": "Product SKU",
          "type": "string"
        },
        "ItemTitle": {
          "description": "Product title",
          "type": "string"
        },
        "IsItem": {
          "description": "If its an item that is refunded",
          "type": "boolean"
        },
        "IsService": {
          "description": "If its a service that is refunded",
          "type": "boolean"
        },
        "Amount": {
          "format": "double",
          "description": "Refund amount",
          "type": "number"
        },
        "Reason": {
          "description": "Reason for a refund",
          "type": "string"
        },
        "Actioned": {
          "description": "If refund has been actioned",
          "type": "boolean"
        },
        "ActionDate": {
          "format": "date-time",
          "description": "When refund was actioned",
          "type": "string"
        },
        "ReturnReference": {
          "description": "return reference number",
          "type": "string"
        },
        "Cost": {
          "format": "double",
          "description": "Cost",
          "type": "number"
        },
        "RefundStatus": {
          "enum": [
            "OPEN",
            "PROCESSED",
            "ERROR",
            "ERROR_ACKED",
            "PENDING"
          ],
          "type": "string"
        },
        "IgnoredValidation": {
          "description": "Status of refund",
          "type": "boolean"
        },
        "fkOrderItemRowId": {
          "format": "uuid",
          "description": "Order item record ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ShouldSerializeChannelReason": {
          "type": "boolean",
          "readOnly": true
        },
        "ChannelReason": {
          "description": "Channel refund reason",
          "type": "string"
        },
        "ShouldSerializeChannelReasonSec": {
          "type": "boolean",
          "readOnly": true
        },
        "ChannelReasonSec": {
          "description": "Secondary channel reason for a refund",
          "type": "string"
        },
        "IsNew": {
          "type": "boolean"
        }
      }
    },
    "ProcessedOrders_RefundShippingRequest": {
      "type": "object",
      "properties": {
        "pkOrderId": {
          "format": "uuid",
          "description": "The id of the order whose shipping needs to be refunded",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "ProcessedOrders_MarkManualRefundsAsActionedRequest": {
      "type": "object",
      "properties": {
        "pkOrderId": {
          "format": "uuid",
          "description": "The id of the order to action refunds on.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "ProcessedOrders_RefundServicesRequest": {
      "type": "object",
      "properties": {
        "pkOrderId": {
          "format": "uuid",
          "description": "The id of the order to refund services for.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "refundItems": {
          "description": "Refunds for service items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RefundItem"
          }
        }
      }
    },
    "ProcessedOrders_ValidateCompleteOrderRefundRequest": {
      "type": "object",
      "properties": {
        "pkOrderId": {
          "format": "uuid",
          "description": "The id of the order",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "ValidationResult": {
      "type": "object",
      "properties": {
        "Type": {
          "description": "Validation result",
          "enum": [
            "Success",
            "Unknown",
            "RefundAutomationDisabled",
            "NotAllowedByChannel",
            "InvalidRefundAmounts",
            "NotImplementedForChannel"
          ],
          "type": "string"
        },
        "InvalidItems": {
          "description": "List of affected items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RefundItem"
          }
        },
        "AdditionalInformation": {
          "description": "Additional information",
          "type": "string"
        }
      }
    },
    "RefundScreenOptions": {
      "type": "object",
      "properties": {
        "FreeTextOption": {
          "description": "Information about channel refund functionality",
          "enum": [
            "OK",
            "ChannelRefundFunctionalityNotImplemented",
            "ChannelRefundsDisabled",
            "NotAllowed"
          ],
          "type": "string"
        },
        "CanRefundShipping": {
          "description": "If shipping can be refunded",
          "type": "boolean"
        },
        "OrderHasServiceItems": {
          "description": "If order got service items",
          "type": "boolean"
        },
        "IsShippingRefundAutomated": {
          "description": "If order shipping cost refund automated",
          "type": "boolean"
        },
        "IsServiceRefundAutomated": {
          "description": "AIf order service refund autoamted",
          "type": "boolean"
        },
        "SupportsAutomatedRefunds": {
          "description": "If automated refund is supported",
          "type": "boolean"
        }
      }
    },
    "ServiceItem": {
      "type": "object",
      "properties": {
        "pkOrderItemRowId": {
          "format": "uuid",
          "description": "Order item record row ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ServiceName": {
          "description": "Service name",
          "type": "string"
        },
        "ServiceCost": {
          "format": "double",
          "description": "Service cost",
          "type": "number"
        },
        "DefaultChannelReason": {
          "$ref": "#/definitions/ChannelRefundReason",
          "description": "Channel refund reason"
        },
        "DefaultChannelSubReason": {
          "$ref": "#/definitions/ChannelRefundSubReason",
          "description": "Channel refund subreason"
        },
        "ItemNumber": {
          "description": "Item number",
          "type": "string"
        },
        "AllowsAutomatedRefund": {
          "description": "If automatic refunds allowed",
          "type": "boolean"
        }
      }
    },
    "ChannelRefundReason": {
      "type": "object",
      "properties": {
        "Tag": {
          "description": "Refund reason tag",
          "type": "string"
        },
        "DisplayName": {
          "description": "Order item record row ID",
          "type": "string"
        },
        "SubReasons": {
          "description": "List of refund reasons",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChannelRefundSubReason"
          }
        }
      }
    },
    "ChannelRefundSubReason": {
      "type": "object",
      "properties": {
        "Tag": {
          "description": "Tag",
          "type": "string"
        },
        "DisplayName": {
          "description": "Display name",
          "type": "string"
        }
      }
    },
    "ExistingRefundTotal": {
      "type": "object",
      "properties": {
        "Amount": {
          "format": "double",
          "description": "Amount refunded",
          "type": "number"
        },
        "TotalCharge": {
          "format": "double",
          "description": "Total order charge",
          "type": "number"
        },
        "Refundable": {
          "format": "double",
          "description": "Refundable amount",
          "type": "number",
          "readOnly": true
        }
      }
    },
    "ProcessedOrders_IsRefundValidRequest": {
      "type": "object",
      "properties": {
        "pkOrderId": {
          "format": "uuid",
          "description": "The id of the order to validate the refund with",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "refundItems": {
          "description": "The refund rows",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RefundItem"
          }
        }
      }
    },
    "ReturnInfo": {
      "type": "object",
      "properties": {
        "pkReturnId": {
          "format": "int32",
          "description": "Return ID",
          "type": "integer"
        },
        "RowType": {
          "description": "return type (e.g. EXCHANGE)",
          "enum": [
            "UNKNOWN",
            "RETURN",
            "RETURNREFUND",
            "EXCHANGE",
            "RESEND",
            "RETURNBOOKING",
            "EXCHANGEBOOKING"
          ],
          "type": "string"
        },
        "ReturnReference": {
          "description": "Return reference",
          "type": "string"
        },
        "fkOrderId": {
          "format": "uuid",
          "description": "Order ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "fkOrderItemRowId": {
          "format": "uuid",
          "description": "Order item record row ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "OrderItemBatchId": {
          "format": "int32",
          "description": "Order item batch id",
          "type": "integer"
        },
        "nOrderId": {
          "format": "int32",
          "description": "Linnworks order number",
          "type": "integer"
        },
        "SKU": {
          "description": "Product SKU",
          "type": "string"
        },
        "ItemTitle": {
          "description": "Product title",
          "type": "string"
        },
        "BatchNumber": {
          "description": "Batch number",
          "type": "string"
        },
        "Reason": {
          "description": "Return reason",
          "type": "string"
        },
        "ChannelReason": {
          "description": "Return reason set on a channel",
          "type": "string"
        },
        "ChannelReasonSec": {
          "description": "Secondary return reason on a channel",
          "type": "string"
        },
        "Category": {
          "description": "Category",
          "type": "string"
        },
        "ReturnQty": {
          "format": "int32",
          "description": "Returned quantity",
          "type": "integer"
        },
        "fkReturnLocationId": {
          "format": "uuid",
          "description": "Return location ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Scrapped": {
          "description": "If returned item was scrapped",
          "type": "boolean"
        },
        "ScrapQty": {
          "format": "int32",
          "description": "Scrapped quantity",
          "type": "integer"
        },
        "LastState": {
          "description": "Last state",
          "type": "string"
        },
        "LastDate": {
          "format": "date-time",
          "description": "Last date",
          "type": "string"
        },
        "Completed": {
          "description": "If return is completed",
          "type": "boolean"
        },
        "fkNewOrderId": {
          "format": "uuid",
          "description": "New order ID for return",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "fkNewOrderItemRowId": {
          "format": "uuid",
          "description": "New order item record row ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "fkNewStockItemId": {
          "format": "uuid",
          "description": "New stock item ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "NewQty": {
          "format": "int32",
          "description": "New return quantity",
          "type": "integer"
        },
        "NewOrderId": {
          "format": "int32",
          "description": "New order ID",
          "type": "integer"
        },
        "NewOrderCancelled": {
          "description": "If new order were cancelled",
          "type": "boolean"
        },
        "NewSKU": {
          "description": "new product SKU",
          "type": "string"
        },
        "NewItemTitle": {
          "description": "New product title",
          "type": "string"
        },
        "NewOrderProcessedOn": {
          "format": "date-time",
          "description": "When new order was processed",
          "type": "string"
        },
        "AdditionalCost": {
          "format": "double",
          "description": "Additional costs involved",
          "type": "number"
        },
        "fkRefundRowId": {
          "format": "uuid",
          "description": "Refund record row ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "RefundedAmount": {
          "format": "double",
          "description": "Amount refunded",
          "type": "number"
        },
        "PendingRefund": {
          "format": "double",
          "description": "Refund pending",
          "type": "number"
        },
        "ReturnDate": {
          "format": "date-time",
          "description": "Return date",
          "type": "string"
        }
      }
    },
    "OrderItemReturnInfo": {
      "type": "object",
      "properties": {
        "ChildItems": {
          "description": "List of child items (populated if the return is a composite item)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderItemReturnInfo"
          }
        },
        "Batches": {
          "description": "Order Item Batches",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderItemReturnInfoBatched"
          }
        },
        "OrderId": {
          "format": "uuid",
          "description": "Order Id [Guid]",
          "type": "string",
          "readOnly": true,
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "fkOrderItemRowId": {
          "format": "uuid",
          "description": "Order item record row ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ParentRowId": {
          "format": "uuid",
          "description": "Parent record row ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ReturnableQty": {
          "format": "int32",
          "description": "Returnable quantity",
          "type": "integer",
          "readOnly": true
        },
        "OrderQty": {
          "format": "int32",
          "description": "Order quantity",
          "type": "integer"
        },
        "ReturnedQty": {
          "format": "int32",
          "description": "Returned quantity",
          "type": "integer"
        },
        "SKU": {
          "description": "Product SKU",
          "type": "string"
        },
        "ItemTitle": {
          "description": "Product title",
          "type": "string"
        },
        "UnitValue": {
          "format": "double",
          "description": "Item value",
          "type": "number"
        },
        "TaxRate": {
          "format": "double",
          "description": "Tax rate",
          "type": "number"
        },
        "TaxCostInclusive": {
          "description": "Indicates whether the UnitValue specified includes or exludes tax.",
          "type": "boolean"
        },
        "Currency": {
          "description": "Currency",
          "type": "string"
        },
        "IsCompositeParent": {
          "description": "If item is composite parent",
          "type": "boolean"
        },
        "IsPartialCompositeReturn": {
          "description": "If return is a part of composite item",
          "type": "boolean"
        },
        "ParentRatio": {
          "format": "int32",
          "type": "integer"
        },
        "pkStockItemId": {
          "format": "uuid",
          "description": "Stock item ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ResentQty": {
          "format": "int32",
          "description": "resend quantity",
          "type": "integer"
        },
        "fkRefundRowId": {
          "format": "uuid",
          "description": "Refund Row Id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "OrderItemReturnInfoBatched": {
      "type": "object",
      "properties": {
        "OrderItemBatchId": {
          "format": "int32",
          "type": "integer"
        },
        "BatchInventoryId": {
          "format": "int32",
          "type": "integer"
        },
        "BatchNumber": {
          "type": "string"
        },
        "DespatchUnitValue": {
          "format": "double",
          "type": "number"
        },
        "OrderId": {
          "format": "uuid",
          "description": "Order Id [Guid]",
          "type": "string",
          "readOnly": true,
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "fkOrderItemRowId": {
          "format": "uuid",
          "description": "Order item record row ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ParentRowId": {
          "format": "uuid",
          "description": "Parent record row ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ReturnableQty": {
          "format": "int32",
          "description": "Returnable quantity",
          "type": "integer",
          "readOnly": true
        },
        "OrderQty": {
          "format": "int32",
          "description": "Order quantity",
          "type": "integer"
        },
        "ReturnedQty": {
          "format": "int32",
          "description": "Returned quantity",
          "type": "integer"
        },
        "SKU": {
          "description": "Product SKU",
          "type": "string"
        },
        "ItemTitle": {
          "description": "Product title",
          "type": "string"
        },
        "UnitValue": {
          "format": "double",
          "description": "Item value",
          "type": "number"
        },
        "TaxRate": {
          "format": "double",
          "description": "Tax rate",
          "type": "number"
        },
        "TaxCostInclusive": {
          "description": "Indicates whether the UnitValue specified includes or exludes tax.",
          "type": "boolean"
        },
        "Currency": {
          "description": "Currency",
          "type": "string"
        },
        "IsCompositeParent": {
          "description": "If item is composite parent",
          "type": "boolean"
        },
        "IsPartialCompositeReturn": {
          "description": "If return is a part of composite item",
          "type": "boolean"
        },
        "ParentRatio": {
          "format": "int32",
          "type": "integer"
        },
        "pkStockItemId": {
          "format": "uuid",
          "description": "Stock item ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ResentQty": {
          "format": "int32",
          "description": "resend quantity",
          "type": "integer"
        },
        "fkRefundRowId": {
          "format": "uuid",
          "description": "Refund Row Id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "ReturnOrderHeader": {
      "type": "object",
      "properties": {
        "pkOrderId": {
          "format": "uuid",
          "description": "Order ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "nOrderId": {
          "format": "int32",
          "description": "Linnworks order number",
          "type": "integer"
        },
        "Source": {
          "description": "ChannelName/Source (e.g. EBAY)",
          "type": "string"
        },
        "SubSource": {
          "description": "Subsource (e.g. EBAY1)",
          "type": "string"
        },
        "PostalServiceName": {
          "description": "Postal service name (e.g. Next day delivery)",
          "type": "string"
        },
        "cShippingAddress": {
          "description": "Shipping address",
          "type": "string"
        },
        "cCurrency": {
          "description": "Currency",
          "type": "string"
        },
        "dReceivedDate": {
          "format": "date-time",
          "description": "Order received date. When order was downloaded from the channel",
          "type": "string"
        },
        "dProcessedOn": {
          "format": "date-time",
          "description": "When order was processed",
          "type": "string"
        },
        "fTotalCharge": {
          "format": "double",
          "description": "OrdOrder total charge",
          "type": "number"
        },
        "RefundLink": {
          "description": "Link to order refund",
          "type": "string"
        }
      }
    },
    "ProcessedOrderWeb": {
      "type": "object",
      "properties": {
        "pkOrderID": {
          "format": "uuid",
          "description": "Order ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "cShippingAddress": {
          "description": "Customer's shipping address",
          "type": "string"
        },
        "dReceivedDate": {
          "format": "date-time",
          "description": "Date when order was received on a channel",
          "type": "string"
        },
        "dProcessedOn": {
          "format": "date-time",
          "description": "Date when order was processed",
          "type": "string"
        },
        "timeDiff": {
          "format": "double",
          "description": "Days elapsed between order received and order processed",
          "type": "number"
        },
        "fPostageCost": {
          "format": "double",
          "description": "Order postage cost",
          "type": "number"
        },
        "fTotalCharge": {
          "format": "double",
          "description": "Order total charge",
          "type": "number"
        },
        "PostageCostExTax": {
          "format": "double",
          "description": "Postage cost excluding tax",
          "type": "number"
        },
        "Subtotal": {
          "format": "double",
          "description": "Order subtotal",
          "type": "number"
        },
        "fTax": {
          "format": "double",
          "description": "Order tax",
          "type": "number"
        },
        "TotalDiscount": {
          "format": "double",
          "description": "Total discount",
          "type": "number"
        },
        "ProfitMargin": {
          "format": "double",
          "description": "Profit margin",
          "type": "number"
        },
        "CountryTaxRate": {
          "format": "double",
          "description": "Country specific tax rate",
          "type": "number"
        },
        "nOrderId": {
          "format": "int32",
          "description": "Linnworks order ID",
          "type": "integer"
        },
        "nStatus": {
          "format": "int32",
          "description": "Order status",
          "type": "integer"
        },
        "cCurrency": {
          "description": "Order currency",
          "type": "string"
        },
        "PostalTrackingNumber": {
          "description": "Postal tracking number",
          "type": "string"
        },
        "cCountry": {
          "description": "Country",
          "type": "string"
        },
        "Source": {
          "description": "ChannelName/Source (e.g. EBAY)",
          "type": "string"
        },
        "PostalServiceName": {
          "description": "Postal service name (e.g. Next day delivery)",
          "type": "string"
        },
        "PostalServiceCode": {
          "description": "Postal service code",
          "type": "string"
        },
        "Vendor": {
          "description": "Courier name (e.g. DPD)",
          "type": "string"
        },
        "BillingEmailAddress": {
          "type": "string"
        },
        "ReferenceNum": {
          "description": "Order reference number",
          "type": "string"
        },
        "SecondaryReference": {
          "description": "An additional reference number for the order",
          "type": "string"
        },
        "ExternalReference": {
          "description": "This is an additional reference number from the sales channel, typically used by eBay",
          "type": "string"
        },
        "Address1": {
          "description": "Order first line of address",
          "type": "string"
        },
        "Address2": {
          "description": "Order second line of address",
          "type": "string"
        },
        "Address3": {
          "description": "Order third line of address",
          "type": "string"
        },
        "Town": {
          "description": "Town",
          "type": "string"
        },
        "Region": {
          "description": "Region, county, area",
          "type": "string"
        },
        "BuyerPhoneNumber": {
          "description": "Buyer phone number",
          "type": "string"
        },
        "Company": {
          "description": "Company",
          "type": "string"
        },
        "SubSource": {
          "description": "Order subsource (e.g. EBAY1)",
          "type": "string"
        },
        "ChannelBuyerName": {
          "description": "Channel specific name used to identify the buyer, such as a username, normally used for eBay",
          "type": "string"
        },
        "AccountName": {
          "description": "Customer channel account name",
          "type": "string"
        },
        "cFullName": {
          "description": "Customer full name",
          "type": "string"
        },
        "cEmailAddress": {
          "description": "Customer email address",
          "type": "string"
        },
        "cPostCode": {
          "description": "Post Code",
          "type": "string"
        },
        "dPaidOn": {
          "format": "date-time",
          "description": "When order was marked as PAID",
          "type": "string"
        },
        "dCancelledOn": {
          "format": "date-time",
          "description": "When order was cancelled",
          "type": "string"
        },
        "PackageCategory": {
          "description": "Package category",
          "type": "string"
        },
        "PackageTitle": {
          "description": "Package name",
          "type": "string"
        },
        "ItemWeight": {
          "format": "double",
          "description": "Items weight",
          "type": "number"
        },
        "TotalWeight": {
          "format": "double",
          "description": "Total order weight",
          "type": "number"
        },
        "FolderCollection": {
          "description": "Folder name of an order",
          "type": "string"
        },
        "cBillingAddress": {
          "description": "Customer billing address",
          "type": "string"
        },
        "BillingName": {
          "description": "Customer billing name",
          "type": "string"
        },
        "BillingCompany": {
          "description": "Customer billing company",
          "type": "string"
        },
        "BillingAddress1": {
          "description": "Billing address line one",
          "type": "string"
        },
        "BillingAddress2": {
          "description": "Billing address line two",
          "type": "string"
        },
        "BillingAddress3": {
          "description": "Billing address line three",
          "type": "string"
        },
        "BillingTown": {
          "description": "Billing town",
          "type": "string"
        },
        "BillingRegion": {
          "description": "Billing region, area, county",
          "type": "string"
        },
        "BillingPostCode": {
          "description": "Billing postcode",
          "type": "string"
        },
        "BillingCountryName": {
          "description": "Billing country",
          "type": "string"
        },
        "BillingPhoneNumber": {
          "description": "Billing phone number",
          "type": "string"
        },
        "HoldOrCancel": {
          "description": "If order on hold or cancelled.",
          "type": "boolean"
        },
        "IsResend": {
          "description": "If order was created from a resend",
          "type": "boolean"
        },
        "IsExchange": {
          "description": "If order was created from an exchange",
          "type": "boolean"
        },
        "TaxId": {
          "description": "Order tax id",
          "type": "string"
        },
        "FulfilmentLocationName": {
          "description": "Order fulfilment location",
          "type": "string"
        }
      }
    },
    "GetOrderTrackingURLsRequest": {
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrackingURLRequestItem"
          }
        }
      }
    },
    "TrackingURLRequestItem": {
      "type": "object",
      "properties": {
        "OrderId": {
          "format": "int32",
          "type": "integer"
        },
        "Vendor": {
          "type": "string"
        },
        "PostalTrackingNumber": {
          "type": "string"
        },
        "Postcode": {
          "type": "string"
        }
      }
    },
    "GetOrderTrackingURLsResponse": {
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrackingURLResponseItem"
          }
        }
      }
    },
    "TrackingURLResponseItem": {
      "type": "object",
      "properties": {
        "TrackingURL": {
          "type": "string"
        },
        "OrderId": {
          "format": "int32",
          "type": "integer"
        },
        "Vendor": {
          "type": "string"
        },
        "PostalTrackingNumber": {
          "type": "string"
        },
        "Postcode": {
          "type": "string"
        }
      }
    },
    "ProcessedOrders_SearchProcessedOrdersRequest": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/SearchProcessedOrdersRequest",
          "description": "Search parameters consisting of keyword, dates, filters and sorting."
        }
      }
    },
    "SearchProcessedOrdersRequest": {
      "type": "object",
      "properties": {
        "SearchTerm": {
          "description": "Search Term",
          "type": "string"
        },
        "SearchFilters": {
          "description": "Search Filters",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SearchFilters"
          }
        },
        "DateField": {
          "description": "Date Field Type",
          "enum": [
            "processed",
            "payment",
            "cancelled",
            "received"
          ],
          "type": "string"
        },
        "FromDate": {
          "format": "date-time",
          "description": "From Date",
          "type": "string"
        },
        "ToDate": {
          "format": "date-time",
          "description": "To Date",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Page Number",
          "type": "integer"
        },
        "ResultsPerPage": {
          "format": "int32",
          "description": "Results Per Page",
          "type": "integer"
        },
        "SearchSorting": {
          "$ref": "#/definitions/SearchSorting",
          "description": "Search Sorting"
        }
      }
    },
    "SearchFilters": {
      "type": "object",
      "properties": {
        "SearchField": {
          "enum": [
            "Source",
            "SubSource",
            "ItemIdentifier"
          ],
          "type": "string"
        },
        "SearchTerm": {
          "type": "string"
        }
      }
    },
    "SearchSorting": {
      "type": "object",
      "properties": {
        "SortField": {
          "type": "string"
        },
        "SortDirection": {
          "enum": [
            "ASC",
            "DESC"
          ],
          "type": "string"
        }
      }
    },
    "SearchProcessedOrdersResponse": {
      "type": "object",
      "properties": {
        "ProcessedOrders": {
          "$ref": "#/definitions/GenericPagedResult_ProcessedOrderWeb"
        }
      }
    },
    "GenericPagedResult_ProcessedOrderWeb": {
      "description": "Order item object",
      "type": "object",
      "properties": {
        "PageNumber": {
          "format": "int32",
          "description": "Result page number",
          "type": "integer"
        },
        "EntriesPerPage": {
          "format": "int32",
          "description": "Result page size, quantity of records per page",
          "type": "integer"
        },
        "TotalEntries": {
          "format": "int64",
          "description": "Total records",
          "type": "integer"
        },
        "TotalPages": {
          "format": "int32",
          "description": "Total pages",
          "type": "integer",
          "readOnly": true
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessedOrderWeb"
          }
        }
      }
    },
    "ProcessedOrders_SearchProcessedOrdersPagedRequest": {
      "type": "object",
      "properties": {
        "from": {
          "format": "date-time",
          "description": "The lower end of the date range to search. Can be null if searching for 'all dates'. Maximum range is 3 months.",
          "type": "string"
        },
        "to": {
          "format": "date-time",
          "description": "The upper end of the date range to search. Can be null if searching for 'all dates'. Maximum range is 3 months.",
          "type": "string"
        },
        "dateType": {
          "description": "The search type (e.g. ALLDATES)",
          "enum": [
            "ALLDATES",
            "RECEIVED",
            "PROCESSED",
            "PAYMENTRECEIVED",
            "CANCELLED"
          ],
          "type": "string"
        },
        "searchField": {
          "description": "The field to search by. Can be found by calling GetSearchTypes.",
          "type": "string"
        },
        "exactMatch": {
          "description": "Set to true if an exact match is required for the search data.",
          "type": "boolean"
        },
        "searchTerm": {
          "description": "The term which you are searching for.",
          "type": "string"
        },
        "pageNum": {
          "format": "int32",
          "description": "The page number of the request.",
          "type": "integer"
        },
        "numEntriesPerPage": {
          "format": "int32",
          "description": "The number of entries required on a page. Maximum 200.",
          "type": "integer"
        }
      }
    },
    "ProcessedOrders_DownloadOrdersToCSVRequest": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/DownloadOrdersToCSVRequest",
          "description": "Request parameter populated with search criteria for the file download"
        }
      }
    },
    "DownloadOrdersToCSVRequest": {
      "type": "object",
      "properties": {
        "SearchTerm": {
          "description": "Search Term",
          "type": "string"
        },
        "SearchFilters": {
          "description": "Search Filters",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SearchFilters"
          }
        },
        "DateField": {
          "description": "Date Field Type",
          "enum": [
            "processed",
            "payment",
            "cancelled",
            "received"
          ],
          "type": "string"
        },
        "FromDate": {
          "format": "date-time",
          "description": "From Date",
          "type": "string"
        },
        "ToDate": {
          "format": "date-time",
          "description": "To Date",
          "type": "string"
        },
        "SearchSorting": {
          "$ref": "#/definitions/SearchSorting",
          "description": "Search Sorting"
        }
      }
    },
    "DownloadOrdersToCSVResponse": {
      "type": "object",
      "properties": {
        "Url": {
          "type": "string"
        },
        "DownloadProgress": {
          "format": "float",
          "type": "number"
        },
        "UploadProgress": {
          "format": "float",
          "type": "number"
        },
        "Id": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "CreationDate": {
          "type": "string"
        }
      }
    },
    "ProcessedOrders_AddReturnCategoryRequest": {
      "type": "object",
      "properties": {
        "categoryName": {
          "description": "The name of the category to add.",
          "type": "string"
        }
      }
    },
    "OrderReturnCategory": {
      "description": "Return category object",
      "type": "object",
      "properties": {
        "pkItemId": {
          "format": "int32",
          "description": "Stock item ID",
          "type": "integer"
        },
        "CategoryName": {
          "description": "Category name",
          "type": "string"
        }
      }
    },
    "ProcessedOrders_RenameReturnCategoryRequest": {
      "type": "object",
      "properties": {
        "pkItemId": {
          "format": "int32",
          "description": "The id of the category to be renamed.",
          "type": "integer"
        },
        "newName": {
          "description": "The new name for the category.",
          "type": "string"
        }
      }
    },
    "ProcessedOrders_DeleteReturnCategoryRequest": {
      "type": "object",
      "properties": {
        "pkItemId": {
          "format": "int32",
          "description": "The id of the category to delete.",
          "type": "integer"
        }
      }
    },
    "ProcessedOrderRelation": {
      "type": "object",
      "properties": {
        "ChildOrderId": {
          "format": "int32",
          "description": "Child order number",
          "type": "integer"
        },
        "ChildOrderPkOrderId": {
          "format": "uuid",
          "description": "Child order ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ParentOrderId": {
          "format": "int32",
          "description": "Parent order number",
          "type": "integer"
        },
        "ParentOrderPkOrderId": {
          "format": "uuid",
          "description": "Parent order ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "RelationType": {
          "description": "Relation type",
          "type": "string"
        }
      }
    },
    "SplitPackaging": {
      "type": "object",
      "properties": {
        "BinIndex": {
          "format": "int32",
          "description": "Bin split index",
          "type": "integer"
        },
        "ItemTitle": {
          "description": "Item Title",
          "type": "string"
        },
        "PackageTitle": {
          "description": "Package name",
          "type": "string"
        },
        "pkBinId": {
          "format": "uuid",
          "description": "Split bin ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "fkOrderItemRowId": {
          "format": "uuid",
          "description": "Order item row record ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Quantity": {
          "format": "int32",
          "description": "Quantity",
          "type": "integer"
        },
        "SKU": {
          "description": "Product SKU",
          "type": "string"
        },
        "TrackingNumber": {
          "description": "Tracking number",
          "type": "string"
        },
        "Weight": {
          "format": "double",
          "description": "Item weight",
          "type": "number"
        }
      }
    },
    "AuditEntry": {
      "type": "object",
      "properties": {
        "sid_history": {
          "format": "int32",
          "description": "Audit record ID",
          "type": "integer"
        },
        "fkOrderId": {
          "format": "uuid",
          "description": "Order ID (pkOrdeID)",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "HistoryNote": {
          "description": "Note text",
          "type": "string"
        },
        "fkOrderHistoryTypeId": {
          "description": "Record type ID",
          "type": "string"
        },
        "DateStamp": {
          "format": "date-time",
          "description": "Record time and date",
          "type": "string"
        },
        "Tag": {
          "description": "Audit record tag",
          "type": "string"
        },
        "UpdatedBy": {
          "description": "User who made audited change",
          "type": "string"
        },
        "TypeDescription": {
          "description": "Audit trail record type",
          "type": "string"
        }
      }
    },
    "OrderExtendedProperty": {
      "type": "object",
      "properties": {
        "rowid": {
          "format": "uuid",
          "description": "Extended property record row ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "PropertyName": {
          "description": "Property name",
          "type": "string"
        },
        "PropertyValue": {
          "description": "Property value",
          "type": "string"
        },
        "PropertyType": {
          "description": "Property type",
          "type": "string"
        }
      }
    },
    "ProcessedOrderNote": {
      "type": "object",
      "properties": {
        "pkOrderNoteId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "fkOrderId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Note": {
          "type": "string"
        },
        "NoteEntryDate": {
          "format": "date-time",
          "type": "string"
        },
        "NoteUserName": {
          "type": "string"
        },
        "Internal": {
          "description": "Specifies if the note should be internal to the system, or should be displayed on the invoice.",
          "type": "boolean"
        },
        "NoteTypeId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ProcessedOrders_AddOrderNoteRequest": {
      "type": "object",
      "properties": {
        "pkOrderID": {
          "format": "uuid",
          "description": "The order id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "noteText": {
          "description": "The note text",
          "type": "string"
        },
        "isInternal": {
          "description": "True if the note should be internal, False if it shouldn't",
          "type": "boolean"
        }
      }
    },
    "ProcessedOrders_ChangeOrderNoteRequest": {
      "type": "object",
      "properties": {
        "pkOrderNoteId": {
          "format": "uuid",
          "description": "Primary key for order note",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "noteText": {
          "description": "New note message",
          "type": "string"
        },
        "isInternal": {
          "description": "Whether the note is an internal note",
          "type": "boolean"
        },
        "noteTypeId": {
          "format": "int32",
          "description": "Set the type of note",
          "type": "integer"
        }
      }
    },
    "ProcessedOrders_DeleteOrderNoteRequest": {
      "type": "object",
      "properties": {
        "pkOrderNoteId": {
          "format": "uuid",
          "description": "Primary key for order note",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "ProcessedOrders_CreateExchangeRequest": {
      "type": "object",
      "properties": {
        "pkOrderId": {
          "format": "uuid",
          "description": "The order id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "exchangeItems": {
          "description": "A list of items to be exchanged, including quantity, scrap, refund, etc.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RowQty"
          }
        },
        "despatchLocation": {
          "format": "uuid",
          "description": "The id of the location to despatch replacement items from",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "returnLocation": {
          "format": "uuid",
          "description": "The id of the location to return stock to",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "channelReason": {
          "description": "Channel reason - required if a refund on the channel is required",
          "type": "string"
        },
        "channelSubReason": {
          "description": "Channel subreason - required if a refund on the channel is required.",
          "type": "string"
        },
        "category": {
          "description": "The refund category",
          "type": "string"
        },
        "reason": {
          "description": "The reason for the reason",
          "type": "string"
        },
        "isBooking": {
          "description": "True if it is a exchange booking, False if it is a new exchange",
          "type": "boolean"
        },
        "ignoredValidation": {
          "description": "True if failed validation has been ignored (see IsRefundValid). Otherwise, false. When set to true, refunds will not be automatically actioned on the channel. Ignored if creating a booking as a refund is not created at this stage.",
          "type": "boolean"
        }
      }
    },
    "RowQty": {
      "type": "object",
      "properties": {
        "OrderItemRowId": {
          "format": "uuid",
          "description": "Order item record row ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "OrderItemBatchId": {
          "format": "int32",
          "description": "Batch inventory id",
          "type": "integer"
        },
        "Refund": {
          "format": "double",
          "description": "Refund amount",
          "type": "number"
        },
        "Qty": {
          "format": "int32",
          "description": "Affected quantity",
          "type": "integer"
        },
        "ScrapQty": {
          "format": "int32",
          "description": "Scrapped quantity",
          "type": "integer"
        },
        "Batch": {
          "$ref": "#/definitions/OrderItemBatch",
          "description": "The batch related to the rowqty"
        },
        "AdditionalCost": {
          "format": "double",
          "description": "Additional costs",
          "type": "number"
        },
        "NewStockItemId": {
          "format": "uuid",
          "description": "New (returned) stock item ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "NewQty": {
          "format": "int32",
          "description": "Returned qty",
          "type": "integer"
        }
      }
    },
    "OrderItemBatch": {
      "type": "object",
      "properties": {
        "OrderItemBatchId": {
          "format": "int32",
          "type": "integer"
        },
        "OrderItemRowId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "BatchInventoryId": {
          "format": "int32",
          "type": "integer"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer"
        },
        "Batch": {
          "$ref": "#/definitions/StockItemBatch"
        },
        "DespatchUnitValue": {
          "format": "double",
          "type": "number",
          "readOnly": true
        },
        "AssignmentType": {
          "enum": [
            "AUTO",
            "MANUAL"
          ],
          "type": "string"
        }
      }
    },
    "StockItemBatch": {
      "type": "object",
      "properties": {
        "BatchId": {
          "format": "int32",
          "description": "Batch ID",
          "type": "integer"
        },
        "SKU": {
          "description": "Product SKU",
          "type": "string"
        },
        "InventoryTrackingType": {
          "format": "int32",
          "description": "0 - None, 1 - Order by sell by date, 2 - Ordered by priority sequence",
          "type": "integer"
        },
        "StockItemId": {
          "format": "uuid",
          "description": "Product ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "BatchNumber": {
          "description": "Batch number",
          "type": "string"
        },
        "ExpiresOn": {
          "format": "date-time",
          "description": "Batch expiry date",
          "type": "string"
        },
        "SellBy": {
          "format": "date-time",
          "description": "Batch sell by date",
          "type": "string"
        },
        "Inventory": {
          "description": "Batch records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StockItemBatchInventory"
          }
        },
        "IsDeleted": {
          "description": "Is the batch deleted",
          "type": "boolean"
        }
      }
    },
    "StockItemBatchInventory": {
      "type": "object",
      "properties": {
        "BatchInventoryId": {
          "format": "int32",
          "description": "Stock item batch record ID",
          "type": "integer"
        },
        "BatchId": {
          "format": "int32",
          "description": "Batch ID",
          "type": "integer"
        },
        "StockLocationId": {
          "format": "uuid",
          "description": "Location ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "BinRack": {
          "description": "BinRack",
          "type": "string"
        },
        "PrioritySequence": {
          "format": "int32",
          "description": "Pick order",
          "type": "integer"
        },
        "Quantity": {
          "format": "int32",
          "description": "Quantity",
          "type": "integer"
        },
        "StockValue": {
          "format": "double",
          "description": "Current stock value",
          "type": "number"
        },
        "StartQuantity": {
          "format": "int32",
          "description": "Quantity originally booked in",
          "type": "integer",
          "readOnly": true
        },
        "PickedQuantity": {
          "format": "int32",
          "description": "Indicate how many units are now allocated in open orders",
          "type": "integer"
        },
        "BatchStatus": {
          "description": "Batch Status",
          "type": "string"
        },
        "IsDeleted": {
          "description": "Is BatchInventory deleted",
          "type": "boolean"
        },
        "WarehouseBinrackStandardType": {
          "format": "int32",
          "description": "Warehouse binrack standard type",
          "type": "integer"
        },
        "WarehouseBinrackTypeName": {
          "description": "Warehouse binrack type friendly name",
          "type": "string"
        },
        "InTransfer": {
          "format": "int32",
          "description": "Number of items in Transfer phase.",
          "type": "integer"
        },
        "BinRackId": {
          "format": "int32",
          "description": "Binrack Id (Use for WMS)",
          "type": "integer"
        },
        "WarehouseBinrackTypeId": {
          "format": "int32",
          "description": "Warehouse binrack type unique id.",
          "type": "integer"
        }
      }
    },
    "ProcessedOrders_CreateResendRequest": {
      "type": "object",
      "properties": {
        "pkOrderId": {
          "format": "uuid",
          "description": "Order ID that needs to be resend",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "resendItems": {
          "description": "Resend items information",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RowQty"
          }
        },
        "despatchLocation": {
          "format": "uuid",
          "description": "Location ID where from resend be despatched",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "category": {
          "description": "Category",
          "type": "string"
        },
        "reason": {
          "description": "Resond reason",
          "type": "string"
        },
        "additionalCost": {
          "format": "double",
          "description": "Order-level additional cost",
          "type": "number"
        }
      }
    },
    "ProcessedOrders_CreateFullResendRequest": {
      "type": "object",
      "properties": {
        "pkOrderId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "despatchLocation": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "category": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "additionalCost": {
          "format": "double",
          "type": "number"
        }
      }
    }
  },
  "securityDefinitions": {
    "token": {
      "type": "apiKey",
      "description": "Authorization Header",
      "name": "Authorization",
      "in": "header"
    }
  }
}