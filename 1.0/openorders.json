{
  "swagger": "2.0",
  "info": {
    "version": "openorders",
    "title": "Open Orders API"
  },
  "host": "eu-ext.linnworks.net",
  "schemes": [
    "https"
  ],
  "paths": {
    "/api/OpenOrders/GetViewStats": {
      "post": {
        "tags": [
          "OpenOrders"
        ],
        "summary": "GetViewStats",
        "description": "\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetViewStats",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/GetViewStatsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrderViewStats"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/OpenOrders/SearchOrders": {
      "post": {
        "tags": [
          "OpenOrders"
        ],
        "summary": "SearchOrders",
        "description": "\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "SearchOrders",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SearchOrdersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SearchOrdersResponse"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/OpenOrders/GetOpenOrderIds": {
      "post": {
        "tags": [
          "OpenOrders"
        ],
        "summary": "GetOpenOrderIds",
        "description": "\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetOpenOrderIds",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/GetOpenOrdersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GenericPagedResult_Guid"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/OpenOrders/GetOpenOrders": {
      "post": {
        "tags": [
          "OpenOrders"
        ],
        "summary": "GetOpenOrders",
        "description": "\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetOpenOrders",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/GetOpenOrdersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PostFilterPagedResponse_OpenOrder"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/OpenOrders/GetIdentifiers": {
      "get": {
        "tags": [
          "OpenOrders"
        ],
        "summary": "GetIdentifiers",
        "description": "Get all identifiers that are available to add to an order\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetIdentifiers",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Identifier"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/OpenOrders/GetIdentifiersByOrderIds": {
      "post": {
        "tags": [
          "OpenOrders"
        ],
        "summary": "GetIdentifiersByOrderIds",
        "description": "Get all identifiers for a list of orderIds\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetIdentifiersByOrderIds",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/GetOrderIdentifierRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrderIdentifier"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/OpenOrders/SaveIdentifier": {
      "post": {
        "tags": [
          "OpenOrders"
        ],
        "summary": "SaveIdentifier",
        "description": "Create or update an order identifier\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "SaveIdentifier",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/SaveIdentifiersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Identifier"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/OpenOrders/DeleteIdentifier": {
      "post": {
        "tags": [
          "OpenOrders"
        ],
        "summary": "DeleteIdentifier",
        "description": "Delete an identifier. This will also remove the identifier from all orders that it's assigned to\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "DeleteIdentifier",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/DeleteIdentifiersRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/OpenOrders/AssignOrderIdentifier": {
      "post": {
        "tags": [
          "OpenOrders"
        ],
        "summary": "AssignOrderIdentifier",
        "description": "Add an identifier to an order\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>250</b></span> / minute",
        "operationId": "AssignOrderIdentifier",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ChangeOrderIdentifierRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AssignResult"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/OpenOrders/UnassignOrderIdentifier": {
      "post": {
        "tags": [
          "OpenOrders"
        ],
        "summary": "UnassignOrderIdentifier",
        "description": "Remove an identifier from an order\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>250</b></span> / minute",
        "operationId": "UnassignOrderIdentifier",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ChangeOrderIdentifierRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AssignResult"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/OpenOrders/GetOrdersLowFidelity": {
      "post": {
        "tags": [
          "OpenOrders"
        ],
        "summary": "GetOrdersLowFidelity",
        "description": "Returns low fidelity view of open orders. The data is generally useful for very basic view or counters of what is in the open orders. Useful for finding orders quickly as it returns all scannable fields of the order and order items such as order ids, skus, barcodes etc.\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.DespatchConsoleNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetOrdersLowFidelity",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/GetOrdersLowFidelityRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetOrdersLowFidelityResponse"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/OpenOrders/GetOpenOrdersDetails": {
      "post": {
        "tags": [
          "OpenOrders"
        ],
        "summary": "GetOpenOrdersDetails",
        "description": "Open order details by order ids. Not limited by the number of orders you can retrieve. This call is designed to return ONLY open orders, \r\nit is much faster than GetOrderDetail call\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.ViewOrderDetailsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetOpenOrdersDetails",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/GetOpenOrdersDetailsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetOpenOrdersDetailsResponse"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/OpenOrders/AssignStockToOrders": {
      "post": {
        "tags": [
          "OpenOrders"
        ],
        "summary": "AssignStockToOrders",
        "description": "Assign Stock to Orders\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.OpenOrdersNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "AssignStockToOrders",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/AssignStockToOrdersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AssignStockToOrdersResponse_OrderItemBatchExtended_Guid"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/OpenOrders/DeleteAssignedStock": {
      "post": {
        "tags": [
          "OpenOrders"
        ],
        "summary": "DeleteAssignedStock",
        "description": "\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.OpenOrdersNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "DeleteAssignedStock",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ClearStockAssignmentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AssignStockToOrdersResponse_Int32_Int32"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/OpenOrders/GetAvailableChannels": {
      "get": {
        "tags": [
          "OpenOrders"
        ],
        "summary": "GetAvailableChannels",
        "description": "\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetAvailableChannels",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetAvailableChannelsResponse"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/OpenOrders/GetOrderItemIndicators": {
      "post": {
        "tags": [
          "OpenOrders"
        ],
        "summary": "GetOrderItemIndicators",
        "description": "\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.OpenOrdersNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetOrderItemIndicators",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/GetOrderItemIndicatorRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetOrderItemIndicatorResponse"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/OpenOrders/MarkReadyForCollection": {
      "post": {
        "tags": [
          "OpenOrders"
        ],
        "summary": "MarkReadyForCollection",
        "description": "\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.OpenOrdersNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "MarkReadyForCollection",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/MarkReadyForCollectionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GenericOrderOperationResult"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    }
  },
  "definitions": {
    "GetViewStatsRequest": {
      "type": "object",
      "properties": {
        "LocationId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ViewId": {
          "format": "int32",
          "type": "integer"
        },
        "UserId": {
          "format": "int32",
          "type": "integer"
        },
        "IncludeUserManagement": {
          "type": "boolean"
        },
        "OnlyVisible": {
          "type": "boolean"
        },
        "RebuildCacheIfRequired": {
          "description": "If only the currently built stats are required, pass false here. Useful for polling whether a long running cache build has finished\r\nThe default is true.",
          "type": "boolean"
        },
        "RecalculateViewIfRequired": {
          "type": "boolean"
        }
      }
    },
    "OrderViewStats": {
      "type": "object",
      "properties": {
        "ViewId": {
          "format": "int32",
          "type": "integer"
        },
        "ViewName": {
          "type": "string"
        },
        "IsSystem": {
          "type": "boolean"
        },
        "TotalOrders": {
          "format": "int64",
          "type": "integer"
        },
        "LocationId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ExpiryDate": {
          "format": "date-time",
          "type": "string",
          "readOnly": true
        },
        "IsCalculating": {
          "type": "boolean",
          "readOnly": true
        },
        "ViewExists": {
          "type": "boolean",
          "readOnly": true
        },
        "LastRequested": {
          "format": "date-time",
          "type": "string",
          "readOnly": true
        },
        "UserManagement": {
          "$ref": "#/definitions/ViewUserManagement"
        },
        "OrderViewUserPreference": {
          "$ref": "#/definitions/OrderViewUserPreference"
        },
        "Owner": {
          "$ref": "#/definitions/ViewUser",
          "readOnly": true
        },
        "IsCacheable": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "ViewUserManagement": {
      "type": "object",
      "properties": {
        "ViewId": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "ViewUsers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ViewUser"
          }
        },
        "ViewGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ViewGroup"
          }
        }
      }
    },
    "OrderViewUserPreference": {
      "type": "object",
      "properties": {
        "ViewId": {
          "format": "int32",
          "type": "integer"
        },
        "IsVisible": {
          "type": "boolean"
        },
        "Sequence": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ViewUser": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "IsOwner": {
          "type": "boolean"
        },
        "UserId": {
          "format": "int32",
          "description": "User ID",
          "type": "integer"
        },
        "EmailAddress": {
          "description": "User Email Address",
          "type": "string"
        },
        "UserType": {
          "description": "User Type (e.g. User, Application)",
          "type": "string"
        }
      }
    },
    "ViewGroup": {
      "type": "object",
      "properties": {
        "GroupId": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        }
      }
    },
    "SearchOrdersRequest": {
      "type": "object",
      "properties": {
        "LocationId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "SearchTerm": {
          "type": "string"
        },
        "IncludeProcessed": {
          "type": "boolean"
        }
      }
    },
    "SearchOrdersResponse": {
      "type": "object",
      "properties": {
        "OpenOrders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderViewIds"
          }
        },
        "ProcessedOrders": {
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        }
      }
    },
    "OrderViewIds": {
      "type": "object",
      "properties": {
        "ViewId": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "LocationId": {
          "format": "uuid",
          "type": "string",
          "readOnly": true,
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "TotalOrders": {
          "format": "int64",
          "type": "integer",
          "readOnly": true
        },
        "OrderIds": {
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "readOnly": true
        },
        "Count": {
          "format": "int64",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "GetOpenOrdersRequest": {
      "required": [
        "ViewId",
        "LocationId",
        "EntriesPerPage"
      ],
      "type": "object",
      "properties": {
        "ViewId": {
          "format": "int32",
          "type": "integer"
        },
        "LocationId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "EntriesPerPage": {
          "format": "int32",
          "type": "integer"
        },
        "PageNumber": {
          "format": "int32",
          "type": "integer"
        },
        "OrderIds": {
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        }
      }
    },
    "GenericPagedResult_Guid": {
      "description": "Order item object",
      "type": "object",
      "properties": {
        "PageNumber": {
          "format": "int32",
          "description": "Result page number",
          "type": "integer"
        },
        "EntriesPerPage": {
          "format": "int32",
          "description": "Result page size, quantity of records per page",
          "type": "integer"
        },
        "TotalEntries": {
          "format": "int64",
          "description": "Total records",
          "type": "integer"
        },
        "TotalPages": {
          "format": "int32",
          "description": "Total pages",
          "type": "integer",
          "readOnly": true
        },
        "Data": {
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        }
      }
    },
    "PostFilterPagedResponse_OpenOrder": {
      "type": "object",
      "properties": {
        "ResultCountRemovedByPostFilter": {
          "format": "int64",
          "type": "integer",
          "readOnly": true
        },
        "PageNumber": {
          "format": "int32",
          "description": "Result page number",
          "type": "integer"
        },
        "EntriesPerPage": {
          "format": "int32",
          "description": "Result page size, quantity of records per page",
          "type": "integer"
        },
        "TotalEntries": {
          "format": "int64",
          "description": "Total records",
          "type": "integer"
        },
        "TotalPages": {
          "format": "int32",
          "description": "Total pages",
          "type": "integer",
          "readOnly": true
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OpenOrder"
          }
        }
      }
    },
    "OpenOrder": {
      "description": "comment class",
      "type": "object",
      "properties": {
        "NumOrderId": {
          "format": "int32",
          "description": "Linnworks order number",
          "type": "integer"
        },
        "GeneralInfo": {
          "$ref": "#/definitions/OrderGeneralInfo",
          "description": "General information about an order"
        },
        "ShippingInfo": {
          "$ref": "#/definitions/OrderShippingInfo",
          "description": "Order shipping information"
        },
        "CustomerInfo": {
          "$ref": "#/definitions/OrderCustomerInfo",
          "description": "Order customer information"
        },
        "TotalsInfo": {
          "$ref": "#/definitions/OrderTotalsInfo",
          "description": "Linnworks order totals information"
        },
        "TaxInfo": {
          "$ref": "#/definitions/OrderTaxInfo"
        },
        "FolderName": {
          "description": "Folder name of an order if any assigned",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "IsPostFilteredOut": {
          "type": "boolean"
        },
        "CanFulfil": {
          "type": "boolean"
        },
        "Fulfillment": {
          "$ref": "#/definitions/OrderFulfillmentState"
        },
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderItem"
          }
        },
        "HasItems": {
          "type": "boolean",
          "readOnly": true
        },
        "TotalItemsSum": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "OrderId": {
          "format": "uuid",
          "description": "Order ID (pkOrderID)",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "OrderGeneralInfo": {
      "description": "Order General Info class",
      "type": "object",
      "properties": {
        "Status": {
          "format": "int32",
          "description": "Order Status (0 = UNPAID, 1 = PAID,2 = RETURN,3 = PENDING,4 = RESEND)",
          "type": "integer"
        },
        "LabelPrinted": {
          "description": "Is label printed",
          "type": "boolean"
        },
        "LabelError": {
          "description": "Is there a label error",
          "type": "string"
        },
        "InvoicePrinted": {
          "description": "Is invoice printed",
          "type": "boolean"
        },
        "InvoicePrintError": {
          "description": "Is there invoice print error",
          "type": "string"
        },
        "PickListPrinted": {
          "description": "Is pick list printed",
          "type": "boolean"
        },
        "PickListPrintError": {
          "description": "Is there pick list print error",
          "type": "string"
        },
        "IsRuleRun": {
          "description": "If rules engine rule ran on an order",
          "type": "boolean"
        },
        "Notes": {
          "format": "int32",
          "description": "Quantity of order notes",
          "type": "integer"
        },
        "PartShipped": {
          "description": "If order partly shipped",
          "type": "boolean"
        },
        "Marker": {
          "format": "int32",
          "description": "Order marker (0 = NOT TAG,1 = Tag 1,2 = Tag 2,3 = Tag 3,4 = Tag 4,5 = Tag 5,6 = Tag 6,7 = Parked)",
          "type": "integer"
        },
        "IsParked": {
          "description": "Is the order parked?",
          "type": "boolean"
        },
        "Identifiers": {
          "description": "Order identifiers. [Prime | Scheduled]",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "ReferenceNum": {
          "description": "Order reference number (Channel defined)",
          "type": "string"
        },
        "SecondaryReference": {
          "description": "An additional reference number for the orderr (Used by some channels)",
          "type": "string"
        },
        "ExternalReferenceNum": {
          "description": "This is an additional reference number from the sales channel, typically used by eBay",
          "type": "string"
        },
        "ReceivedDate": {
          "format": "date-time",
          "description": "The date and time at which the order was placed on the sales channel",
          "type": "string"
        },
        "Source": {
          "description": "Order ChannelName/Source (e.g. EBAY)",
          "type": "string"
        },
        "SubSource": {
          "description": "Order Subsource (e.g. EBAY1)",
          "type": "string"
        },
        "SiteCode": {
          "description": "SiteCode used to differentiate between different sites from a single channel (eg. Amazon UK, Amazon US, Amazon FR...)",
          "type": "string"
        },
        "HoldOrCancel": {
          "description": "This shows whether the order has been marked as on hold, for processed orders if the order has been cancelled OnHold = 1",
          "type": "boolean"
        },
        "DespatchByDate": {
          "format": "date-time",
          "description": "Despatch by Date",
          "type": "string"
        },
        "ScheduledDelivery": {
          "$ref": "#/definitions/ScheduledDelivery",
          "description": "Scheduled delivery dates. Take priority over despatch by date"
        },
        "HasScheduledDelivery": {
          "type": "boolean",
          "readOnly": true
        },
        "Location": {
          "format": "uuid",
          "description": "Order location ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "NumItems": {
          "format": "int32",
          "description": "Quantity of order items",
          "type": "integer"
        },
        "PickwaveIds": {
          "description": "All related Pickwave Ids",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "StockAllocationType": {
          "enum": [
            "NotAllocated",
            "Insuffient",
            "Partial",
            "Full",
            "OverAllocated"
          ],
          "type": "string"
        }
      }
    },
    "OrderShippingInfo": {
      "type": "object",
      "properties": {
        "Vendor": {
          "description": "Courier name (e.g. Royal Mail)",
          "type": "string"
        },
        "PostalServiceId": {
          "format": "uuid",
          "description": "Postal service ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "PostalServiceName": {
          "description": "Postal service name (e.g. Next day delivery)",
          "type": "string"
        },
        "TotalWeight": {
          "format": "double",
          "description": "Order total weight",
          "type": "number"
        },
        "ItemWeight": {
          "format": "double",
          "description": "If order is processed",
          "type": "number"
        },
        "PackageCategoryId": {
          "format": "uuid",
          "description": "Package category ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "PackageCategory": {
          "description": "Package category name",
          "type": "string"
        },
        "PackageTypeId": {
          "format": "uuid",
          "description": "Package type ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "PackageType": {
          "description": "Package type name",
          "type": "string"
        },
        "PostageCost": {
          "format": "double",
          "description": "Order postage cost",
          "type": "number"
        },
        "PostageCostExTax": {
          "format": "double",
          "description": "Order postage cost excluding tax",
          "type": "number"
        },
        "TrackingNumber": {
          "description": "Order tracking number provided by courier",
          "type": "string"
        },
        "ManualAdjust": {
          "description": "If there is an adjustment to shipping cost was made",
          "type": "boolean"
        }
      }
    },
    "OrderCustomerInfo": {
      "type": "object",
      "properties": {
        "ChannelBuyerName": {
          "description": "Username of customer (Comes from channel)",
          "type": "string"
        },
        "Address": {
          "$ref": "#/definitions/CustomerAddress",
          "description": "Customer address"
        },
        "BillingAddress": {
          "$ref": "#/definitions/CustomerAddress",
          "description": "Customer billing address"
        }
      }
    },
    "OrderTotalsInfo": {
      "type": "object",
      "properties": {
        "Subtotal": {
          "format": "double",
          "description": "Order subtotal",
          "type": "number"
        },
        "PostageCost": {
          "format": "double",
          "description": "Order postage cost",
          "type": "number"
        },
        "PostageCostExTax": {
          "format": "double",
          "description": "Order postage cost ex. tax",
          "type": "number"
        },
        "Tax": {
          "format": "double",
          "description": "Tax",
          "type": "number"
        },
        "TotalCharge": {
          "format": "double",
          "description": "Total charge",
          "type": "number"
        },
        "PaymentMethod": {
          "description": "Payment method",
          "type": "string"
        },
        "PaymentMethodId": {
          "format": "uuid",
          "description": "Payment method ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ProfitMargin": {
          "format": "double",
          "description": "Profit margin",
          "type": "number",
          "readOnly": true
        },
        "TotalDiscount": {
          "format": "double",
          "description": "Total discount applied to the order",
          "type": "number"
        },
        "Currency": {
          "description": "Order currency",
          "type": "string"
        },
        "CountryTaxRate": {
          "format": "double",
          "description": "Country tax rate",
          "type": "number"
        },
        "ConversionRate": {
          "format": "double",
          "description": "Currency conversion rate. Set at point of save by the currency",
          "type": "number"
        }
      }
    },
    "OrderTaxInfo": {
      "type": "object",
      "properties": {
        "TaxNumber": {
          "description": "Customer Tax Number",
          "type": "string"
        }
      }
    },
    "OrderFulfillmentState": {
      "type": "object",
      "properties": {
        "FulfillmentState": {
          "enum": [
            "Unknown",
            "Insufficient_Stock",
            "Insufficient_To_Fulfill_All",
            "Sufficient_Stock"
          ],
          "type": "string"
        },
        "PurchaseOrderState": {
          "enum": [
            "Insufficient_PO",
            "Sufficient_PO"
          ],
          "type": "string"
        }
      }
    },
    "OrderItem": {
      "description": "Order item object",
      "type": "object",
      "properties": {
        "ItemId": {
          "format": "uuid",
          "description": "Stock Item ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ItemNumber": {
          "description": "Item number as on channel",
          "type": "string"
        },
        "SKU": {
          "description": "Product SKU",
          "type": "string"
        },
        "ItemSource": {
          "description": "Item source / channel name",
          "type": "string"
        },
        "Title": {
          "description": "Item title",
          "type": "string"
        },
        "Quantity": {
          "format": "int32",
          "description": "Quantity",
          "type": "integer"
        },
        "CategoryName": {
          "description": "Product category",
          "type": "string"
        },
        "CompositeAvailablity": {
          "format": "int32",
          "description": "Composite availability",
          "type": "integer"
        },
        "StockLevelsSpecified": {
          "description": "If stock level specified",
          "type": "boolean"
        },
        "OnOrder": {
          "format": "int32",
          "description": "Level due in purchase orders",
          "type": "integer"
        },
        "OnPurchaseOrder": {
          "$ref": "#/definitions/OrderItemOnOrder",
          "description": "Purchase order bound to this item"
        },
        "InOrderBook": {
          "format": "int32",
          "description": "Quantity currently in open orders",
          "type": "integer"
        },
        "Level": {
          "format": "int32",
          "description": "Current stock level",
          "type": "integer"
        },
        "MinimumLevel": {
          "format": "int32",
          "description": "Minimum level",
          "type": "integer"
        },
        "AvailableStock": {
          "format": "int32",
          "description": "Currently available stock level (Level-InOrderBook)",
          "type": "integer"
        },
        "PricePerUnit": {
          "format": "double",
          "description": "Unit price",
          "type": "number"
        },
        "UnitCost": {
          "format": "double",
          "description": "Unit cost",
          "type": "number"
        },
        "DespatchStockUnitCost": {
          "format": "double",
          "description": "Despatch stock unit cost",
          "type": "number"
        },
        "Discount": {
          "format": "double",
          "description": "Percentage (0%, 10%, 20%, etc...)",
          "type": "number"
        },
        "Tax": {
          "format": "double",
          "description": "Actual tax value on an item",
          "type": "number",
          "readOnly": true
        },
        "TaxRate": {
          "format": "double",
          "description": "Tax rate",
          "type": "number"
        },
        "Cost": {
          "format": "double",
          "description": "Total item cost (exc tax)",
          "type": "number"
        },
        "CostIncTax": {
          "format": "double",
          "description": "Total item cost (inc tax)",
          "type": "number"
        },
        "CompositeSubItems": {
          "description": "List of order items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderItem"
          }
        },
        "IsService": {
          "description": "if item is a service",
          "type": "boolean"
        },
        "SalesTax": {
          "format": "double",
          "description": "Sales Tax",
          "type": "number"
        },
        "TaxCostInclusive": {
          "description": "If tax is included in a cost",
          "type": "boolean"
        },
        "PartShipped": {
          "description": "If order is partly shipped",
          "type": "boolean"
        },
        "Weight": {
          "format": "double",
          "description": "Order weight",
          "type": "number"
        },
        "BarcodeNumber": {
          "description": "Product barcode",
          "type": "string"
        },
        "Market": {
          "format": "int32",
          "description": "Market",
          "type": "integer"
        },
        "ChannelSKU": {
          "description": "Channel product SKU",
          "type": "string"
        },
        "ChannelTitle": {
          "description": "Channel product title",
          "type": "string"
        },
        "DiscountValue": {
          "format": "double",
          "type": "number",
          "readOnly": true
        },
        "HasImage": {
          "description": "If item got an image",
          "type": "boolean",
          "readOnly": true
        },
        "ImageId": {
          "format": "uuid",
          "description": "Image ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "AdditionalInfo": {
          "description": "List of order item options",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderItemOption"
          }
        },
        "StockLevelIndicator": {
          "format": "int32",
          "description": "Stock level indicator",
          "type": "integer"
        },
        "ShippingCost": {
          "format": "double",
          "description": "If batch number scan required",
          "type": "number"
        },
        "PartShippedQty": {
          "format": "int32",
          "description": "ShippingCost",
          "type": "integer"
        },
        "ItemName": {
          "description": "PartShippedQty",
          "type": "string"
        },
        "BatchNumberScanRequired": {
          "description": "ItemName",
          "type": "boolean"
        },
        "SerialNumberScanRequired": {
          "description": "If serial number scan required",
          "type": "boolean"
        },
        "BinRack": {
          "description": "Binrack location",
          "type": "string"
        },
        "BinRacks": {
          "description": "List of BinRacks used for OrderItem",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderItemBinRack"
          }
        },
        "InventoryTrackingType": {
          "format": "int32",
          "description": "Identifies whether the item has a sell by date or other defined order in which inventory is to be sold",
          "type": "integer"
        },
        "isBatchedStockItem": {
          "description": "If item has batches",
          "type": "boolean",
          "readOnly": true
        },
        "IsWarehouseManaged": {
          "type": "boolean"
        },
        "IsUnlinked": {
          "type": "boolean",
          "readOnly": true
        },
        "StockItemIntId": {
          "format": "int32",
          "type": "integer"
        },
        "Boxes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StockItemBoxConfiguration"
          }
        },
        "AddedDate": {
          "format": "date-time",
          "type": "string"
        },
        "RowId": {
          "format": "uuid",
          "description": "Record row ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "OrderId": {
          "format": "uuid",
          "description": "Order ID (pkOrderID)",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "StockItemId": {
          "format": "uuid",
          "description": "Stock Item ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "Identifier": {
      "type": "object",
      "properties": {
        "IdentifierId": {
          "format": "int32",
          "description": "Internal identifier id. Use to update image and name.",
          "type": "integer"
        },
        "Name": {
          "description": "Name displayed where the tag is used",
          "type": "string"
        },
        "Tag": {
          "description": "Internal tag for identification purposes",
          "type": "string"
        },
        "IsCustom": {
          "description": "Is the tag user or system defined?",
          "type": "boolean"
        },
        "ImageId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ImageUrl": {
          "type": "string"
        }
      }
    },
    "ScheduledDelivery": {
      "type": "object",
      "properties": {
        "From": {
          "format": "date-time",
          "type": "string"
        },
        "To": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "CustomerAddress": {
      "type": "object",
      "properties": {
        "EmailAddress": {
          "description": "Customer's email address.",
          "type": "string"
        },
        "Address1": {
          "description": "First line of customer address.",
          "type": "string"
        },
        "Address2": {
          "description": "Second line of customer address.",
          "type": "string"
        },
        "Address3": {
          "description": "Third line of customer address.",
          "type": "string"
        },
        "Town": {
          "description": "Customer's town.",
          "type": "string"
        },
        "Region": {
          "description": "Customer's region.",
          "type": "string"
        },
        "PostCode": {
          "description": "Customer's postcode.",
          "type": "string"
        },
        "Country": {
          "description": "Customer's country.",
          "type": "string"
        },
        "Continent": {
          "description": "Customer's continent",
          "type": "string"
        },
        "FullName": {
          "description": "Customer's first and second name.",
          "type": "string"
        },
        "Company": {
          "description": "Customer's company name.",
          "type": "string"
        },
        "PhoneNumber": {
          "description": "Customer's telephone number.",
          "type": "string"
        },
        "CountryId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "OrderItemOnOrder": {
      "type": "object",
      "properties": {
        "pkPurchaseItemId": {
          "format": "uuid",
          "description": "Primary key of the bound",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Rowid": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "pkPurchaseId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ExternalInvoiceNumber": {
          "type": "string"
        },
        "fkSupplierId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "DateOfDelivery": {
          "format": "date-time",
          "type": "string"
        },
        "QuotedDeliveryDate": {
          "format": "date-time",
          "type": "string"
        },
        "SupplierName": {
          "type": "string"
        },
        "fkLocationId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "OrderItemOption": {
      "type": "object",
      "properties": {
        "pkOptionId": {
          "format": "uuid",
          "description": "Option ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Property": {
          "description": "Option property",
          "type": "string"
        },
        "Value": {
          "description": "Value of the option",
          "type": "string"
        }
      }
    },
    "OrderItemBinRack": {
      "description": "OrderItem BinRack",
      "type": "object",
      "properties": {
        "Quantity": {
          "format": "int32",
          "description": "Quantity for BinRack per Location",
          "type": "integer"
        },
        "BinRack": {
          "description": "BinRack",
          "type": "string"
        },
        "Location": {
          "format": "uuid",
          "description": "LocationId of the BinRack",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "BatchId": {
          "format": "int32",
          "description": "If the item is batched, identifies the batch number",
          "type": "integer"
        },
        "OrderItemBatchId": {
          "format": "int32",
          "description": "If the item is batched, identifies the unique order item batch row",
          "type": "integer"
        }
      }
    },
    "StockItemBoxConfiguration": {
      "description": "Stock item box configuration, dimennsions",
      "type": "object",
      "properties": {
        "BoxId": {
          "format": "int32",
          "description": "Unique box id.",
          "type": "integer"
        },
        "StockItemIntId": {
          "format": "int32",
          "description": "",
          "type": "integer"
        },
        "BoxName": {
          "description": "Box name max 16 characters",
          "type": "string"
        },
        "Width": {
          "format": "double",
          "description": "Width of the box",
          "type": "number"
        },
        "Height": {
          "format": "double",
          "description": "Height of the box",
          "type": "number"
        },
        "Length": {
          "format": "double",
          "description": "Depth of the box",
          "type": "number"
        },
        "Weight": {
          "format": "double",
          "description": "Total weight of the box.",
          "type": "number"
        },
        "ValuePercentage": {
          "format": "double",
          "description": "Value break down percentage",
          "type": "number"
        },
        "Barcode": {
          "description": "Box barcode, max 64 characters.",
          "type": "string"
        },
        "PackagingTypeId": {
          "format": "uuid",
          "description": "Packaging type id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "LogicalDelete": {
          "description": "IsDeleted flag.",
          "type": "boolean"
        }
      }
    },
    "GetOrderIdentifierRequest": {
      "type": "object",
      "properties": {
        "OrderIds": {
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        }
      }
    },
    "OrderIdentifier": {
      "type": "object",
      "properties": {
        "fkOrderId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "IdentifierId": {
          "format": "int32",
          "description": "Internal identifier id. Use to update image and name.",
          "type": "integer"
        },
        "IsCustom": {
          "description": "Is the tag user or system defined?",
          "type": "boolean"
        },
        "ImageId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ImageUrl": {
          "type": "string"
        },
        "Tag": {
          "description": "Internal tag for identification purposes",
          "type": "string"
        },
        "Name": {
          "description": "Name displayed where the tag is used",
          "type": "string"
        }
      }
    },
    "SaveIdentifiersRequest": {
      "description": "The identifier to save. For a new identifier, only the name, tag and image url are required.",
      "type": "object",
      "properties": {
        "Identifier": {
          "$ref": "#/definitions/Identifier"
        }
      }
    },
    "DeleteIdentifiersRequest": {
      "type": "object",
      "properties": {
        "Tag": {
          "description": "Tag of the order identifier to delete. E.g. CUSTOM_PRINT. It is not possible to delete a system tag such as AMAZON_PRIME",
          "type": "string"
        }
      }
    },
    "ChangeOrderIdentifierRequest": {
      "description": "Add/remove from all orders in the request body to the provided tag",
      "type": "object",
      "properties": {
        "OrderIds": {
          "description": "Primary key of the orders to assign/unassign the identifier to.",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "Tag": {
          "description": "Identifier tag to assign/unassign. E.g. AMAZON_PRIME",
          "type": "string"
        }
      }
    },
    "AssignResult": {
      "type": "object",
      "properties": {
        "Changed": {
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "NotChanged": {
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        }
      }
    },
    "GetOrdersLowFidelityRequest": {
      "type": "object",
      "properties": {
        "LocationId": {
          "format": "uuid",
          "description": "(Optional) Fulfilment location id. Defaults to Default location",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "GetOrdersLowFidelityResponse": {
      "type": "object",
      "properties": {
        "Orders": {
          "description": "List of low fidelity order headers with order items, composites and product identifiers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OpenOrderLowFidelity"
          }
        }
      }
    },
    "OpenOrderLowFidelity": {
      "description": "Open Order header - Low fidelity",
      "type": "object",
      "properties": {
        "Items": {
          "description": "Order items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OpenOrderItem"
          }
        },
        "OrderId": {
          "format": "int32",
          "description": "Order Id - numeric",
          "type": "integer"
        },
        "pkOrderID": {
          "format": "uuid",
          "description": "Unique order id.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Status": {
          "format": "int32",
          "description": "Order status as numeric field, 0 - unpaid, 1 - paid, 3 - resend",
          "type": "integer"
        },
        "ReferenceNum": {
          "description": "Order reference",
          "type": "string"
        },
        "ExternalReference": {
          "description": "ExternalReference order reference",
          "type": "string"
        },
        "PostalTrackingNumber": {
          "description": "Tracking number, (of the leading package)",
          "type": "string"
        },
        "OrderDate": {
          "format": "date-time",
          "description": "Order date, UTC time when the order was placed in the system",
          "type": "string"
        },
        "DispatchBy": {
          "format": "date-time",
          "description": "Dispatch by datetime UTC",
          "type": "string"
        }
      }
    },
    "OpenOrderItem": {
      "description": "Open Order Item - Low fidelity",
      "type": "object",
      "properties": {
        "CompositeChild": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderItemBase"
          }
        },
        "ProductIdentifiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductIdentifier"
          }
        },
        "ContainsComposites": {
          "type": "boolean",
          "readOnly": true
        },
        "StockItemId": {
          "format": "uuid",
          "description": "Unique stock item id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "SKU": {
          "description": "Stock Keeping Unit",
          "type": "string"
        },
        "BarcodeNumber": {
          "description": "Main product barcode number",
          "type": "string"
        },
        "ItemTitle": {
          "description": "Item title",
          "type": "string"
        },
        "Quantity": {
          "format": "int32",
          "description": "Quantity on order",
          "type": "integer"
        }
      }
    },
    "OrderItemBase": {
      "type": "object",
      "properties": {
        "ProductIdentifiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductIdentifier"
          }
        },
        "StockItemId": {
          "format": "uuid",
          "description": "Unique stock item id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "SKU": {
          "description": "Stock Keeping Unit",
          "type": "string"
        },
        "BarcodeNumber": {
          "description": "Main product barcode number",
          "type": "string"
        },
        "ItemTitle": {
          "description": "Item title",
          "type": "string"
        },
        "Quantity": {
          "format": "int32",
          "description": "Quantity on order",
          "type": "integer"
        }
      }
    },
    "ProductIdentifier": {
      "description": "Product Identifiers",
      "type": "object",
      "properties": {
        "Type": {
          "description": "Product identifier type",
          "type": "string"
        },
        "Value": {
          "description": "Product identifier value",
          "type": "string"
        },
        "Site": {
          "description": "Product identifier site",
          "type": "string"
        }
      }
    },
    "GetOpenOrdersDetailsRequest": {
      "type": "object",
      "properties": {
        "OrderIds": {
          "description": "List of order ids as unique identifiers",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "DetailLevel": {
          "description": "(optional) List of detail level limiters. If the list is null or empty Full details will be returned, as in all detail levels are applied",
          "type": "array",
          "items": {
            "enum": [
              "FOLDER",
              "NOTES",
              "IDENTIFIERS",
              "EXTENDEDPROPERTIES",
              "BINRACKS"
            ],
            "type": "string"
          }
        }
      }
    },
    "GetOpenOrdersDetailsResponse": {
      "type": "object",
      "properties": {
        "Orders": {
          "description": "List of orders",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderDetails"
          }
        }
      }
    },
    "OrderDetails": {
      "type": "object",
      "properties": {
        "OrderId": {
          "format": "uuid",
          "description": "Order ID (pkOrderId)",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "NumOrderId": {
          "format": "int32",
          "description": "Linnworks order number",
          "type": "integer"
        },
        "Processed": {
          "description": "If order is processed",
          "type": "boolean"
        },
        "ProcessedDateTime": {
          "format": "date-time",
          "description": "Date and time when order was processed",
          "type": "string"
        },
        "FulfilmentLocationId": {
          "format": "uuid",
          "description": "Location ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "GeneralInfo": {
          "$ref": "#/definitions/OrderGeneralInfo",
          "description": "General information about order"
        },
        "ShippingInfo": {
          "$ref": "#/definitions/OrderShippingInfo",
          "description": "Order shipping information"
        },
        "CustomerInfo": {
          "$ref": "#/definitions/OrderCustomerInfo",
          "description": "Order Customer information (Name, email etc)"
        },
        "TotalsInfo": {
          "$ref": "#/definitions/OrderTotalsInfo",
          "description": "Order totals information"
        },
        "ExtendedProperties": {
          "description": "Extended properties of an order",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtendedProperty"
          }
        },
        "FolderName": {
          "description": "Folder names assigned to an order",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Items": {
          "description": "List of order items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderItem"
          }
        },
        "Notes": {
          "description": "List of order notes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderNote"
          }
        },
        "PaidDateTime": {
          "format": "date-time",
          "description": "Date and time when the order was marked as paid",
          "type": "string"
        },
        "TaxId": {
          "description": "Buyer's tax number.",
          "type": "string"
        }
      }
    },
    "ExtendedProperty": {
      "type": "object",
      "properties": {
        "RowId": {
          "format": "uuid",
          "description": "Record row ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Name": {
          "description": "Extended property name",
          "type": "string"
        },
        "Value": {
          "description": "Extended property value",
          "type": "string"
        },
        "Type": {
          "description": "Extended property type",
          "type": "string"
        }
      }
    },
    "OrderNote": {
      "type": "object",
      "properties": {
        "OrderNoteId": {
          "format": "uuid",
          "description": "Order note ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "OrderId": {
          "format": "uuid",
          "description": "Order Id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "NoteDate": {
          "format": "date-time",
          "description": "Date and time when note was added",
          "type": "string"
        },
        "Internal": {
          "description": "order note type (Internal or External)",
          "type": "boolean"
        },
        "Note": {
          "description": "Note's text",
          "type": "string"
        },
        "CreatedBy": {
          "description": "User that created note",
          "type": "string"
        },
        "NoteTypeId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "AssignStockToOrdersRequest": {
      "type": "object",
      "properties": {
        "OrderIds": {
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "BatchAssignmentMode": {
          "enum": [
            "ALL",
            "AUTO_ONLY",
            "UNASSIGNED_ONLY"
          ],
          "type": "string"
        }
      }
    },
    "AssignStockToOrdersResponse_OrderItemBatchExtended_Guid": {
      "type": "object",
      "properties": {
        "BatchActionResult": {
          "$ref": "#/definitions/BatchActionResult_OrderItemBatchExtended_Guid"
        }
      }
    },
    "BatchActionResult_OrderItemBatchExtended_Guid": {
      "type": "object",
      "properties": {
        "ProcessedOrders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderItemBatchExtended"
          }
        },
        "UnprocessedOrders": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "format": "uuid",
              "type": "string",
              "example": "00000000-0000-0000-0000-000000000000"
            }
          }
        }
      }
    },
    "OrderItemBatchExtended": {
      "type": "object",
      "properties": {
        "pkOrderId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "OrderId": {
          "format": "uuid",
          "type": "string",
          "readOnly": true,
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Batches": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderItemBatch"
          }
        }
      }
    },
    "OrderItemBatch": {
      "type": "object",
      "properties": {
        "OrderItemBatchId": {
          "format": "int32",
          "type": "integer"
        },
        "OrderItemRowId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "BatchInventoryId": {
          "format": "int32",
          "type": "integer"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer"
        },
        "Batch": {
          "$ref": "#/definitions/StockItemBatch"
        },
        "DespatchUnitValue": {
          "format": "double",
          "type": "number",
          "readOnly": true
        },
        "AssignmentType": {
          "enum": [
            "AUTO",
            "MANUAL"
          ],
          "type": "string"
        }
      }
    },
    "StockItemBatch": {
      "type": "object",
      "properties": {
        "BatchId": {
          "format": "int32",
          "description": "Batch ID",
          "type": "integer"
        },
        "SKU": {
          "description": "Product SKU",
          "type": "string"
        },
        "InventoryTrackingType": {
          "format": "int32",
          "description": "0 - None, 1 - Order by sell by date, 2 - Ordered by priority sequence",
          "type": "integer"
        },
        "StockItemId": {
          "format": "uuid",
          "description": "Product ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "BatchNumber": {
          "description": "Batch number",
          "type": "string"
        },
        "ExpiresOn": {
          "format": "date-time",
          "description": "Batch expiry date",
          "type": "string"
        },
        "SellBy": {
          "format": "date-time",
          "description": "Batch sell by date",
          "type": "string"
        },
        "Inventory": {
          "description": "Batch records",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StockItemBatchInventory"
          }
        },
        "IsDeleted": {
          "description": "Is the batch deleted",
          "type": "boolean"
        }
      }
    },
    "StockItemBatchInventory": {
      "type": "object",
      "properties": {
        "BatchInventoryId": {
          "format": "int32",
          "description": "Stock item batch record ID",
          "type": "integer"
        },
        "BatchId": {
          "format": "int32",
          "description": "Batch ID",
          "type": "integer"
        },
        "StockLocationId": {
          "format": "uuid",
          "description": "Location ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "BinRack": {
          "description": "BinRack",
          "type": "string"
        },
        "PrioritySequence": {
          "format": "int32",
          "description": "Pick order",
          "type": "integer"
        },
        "Quantity": {
          "format": "int32",
          "description": "Quantity",
          "type": "integer"
        },
        "StockValue": {
          "format": "double",
          "description": "Current stock value",
          "type": "number"
        },
        "StartQuantity": {
          "format": "int32",
          "description": "Quantity originally booked in",
          "type": "integer",
          "readOnly": true
        },
        "PickedQuantity": {
          "format": "int32",
          "description": "Indicate how many units are now allocated in open orders",
          "type": "integer"
        },
        "BatchStatus": {
          "description": "Batch Status",
          "type": "string"
        },
        "IsDeleted": {
          "description": "Is BatchInventory deleted",
          "type": "boolean"
        },
        "WarehouseBinrackStandardType": {
          "format": "int32",
          "description": "Warehouse binrack standard type",
          "type": "integer"
        },
        "WarehouseBinrackTypeName": {
          "description": "Warehouse binrack type friendly name",
          "type": "string"
        },
        "InTransfer": {
          "format": "int32",
          "description": "Number of items in Transfer phase.",
          "type": "integer"
        },
        "BinRackId": {
          "format": "int32",
          "description": "Binrack Id (Use for WMS)",
          "type": "integer"
        },
        "WarehouseBinrackTypeId": {
          "format": "int32",
          "description": "Warehouse binrack type unique id.",
          "type": "integer"
        }
      }
    },
    "ClearStockAssignmentRequest": {
      "type": "object",
      "properties": {
        "OrderIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        }
      }
    },
    "AssignStockToOrdersResponse_Int32_Int32": {
      "type": "object",
      "properties": {
        "BatchActionResult": {
          "$ref": "#/definitions/BatchActionResult_Int32_Int32"
        }
      }
    },
    "BatchActionResult_Int32_Int32": {
      "type": "object",
      "properties": {
        "ProcessedOrders": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "UnprocessedOrders": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      }
    },
    "GetAvailableChannelsResponse": {
      "type": "object",
      "properties": {
        "Channels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceInformation"
          }
        }
      }
    },
    "ServiceInformation": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "Identifier": {
          "type": "string"
        },
        "Logo": {
          "type": "string"
        }
      }
    },
    "GetOrderItemIndicatorRequest": {
      "type": "object",
      "properties": {
        "LocationId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IndicatorRequest"
          }
        }
      }
    },
    "IndicatorRequest": {
      "type": "object",
      "properties": {
        "OrderItemId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "StockItemId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "GetOrderItemIndicatorResponse": {
      "type": "object",
      "properties": {
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderItemIndicator"
          }
        }
      }
    },
    "OrderItemIndicator": {
      "type": "object",
      "properties": {
        "OrderItemId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "StockItemId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Indicator": {
          "format": "int32",
          "type": "integer"
        },
        "FulfillmentState": {
          "enum": [
            "Unknown",
            "Insufficient_Stock",
            "Insufficient_To_Fulfill_All",
            "Sufficient_Stock"
          ],
          "type": "string"
        },
        "PurchaseOrderState": {
          "enum": [
            "Insufficient_PO",
            "Sufficient_PO"
          ],
          "type": "string"
        }
      }
    },
    "MarkReadyForCollectionRequest": {
      "type": "object",
      "properties": {
        "OrderIds": {
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        }
      }
    },
    "GenericOrderOperationResult": {
      "type": "object",
      "properties": {
        "SuccessfulOrders": {
          "description": "List of orders that were moved",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "KeyedErrors": {
          "description": "Dictionary of keyed errors. These are the same errors as per the Errors property, but indexable by orderId",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "token": {
      "type": "apiKey",
      "description": "Authorization Header",
      "name": "Authorization",
      "in": "header"
    }
  }
}