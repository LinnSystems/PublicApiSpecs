{
  "swagger": "2.0",
  "info": {
    "version": "returnsrefunds",
    "title": "Returns and Refunds API"
  },
  "host": "eu-ext.linnworks.net",
  "schemes": [
    "https"
  ],
  "paths": {
    "/api/ReturnsRefunds/GetRefundOptions": {
      "post": {
        "tags": [
          "ReturnsRefunds"
        ],
        "summary": "GetRefundOptions",
        "description": "Returns channel-specific information regarding the types of refund that can be applied to the given order\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.ReturnsRefunds.Refunds.ViewRefundsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetRefundOptions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ReturnsRefunds_GetRefundOptionsRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReturnsRefunds_GetRefundOptionsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetRefundOptionsResponse"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ReturnsRefunds/GetActionableRefundHeaders": {
      "post": {
        "tags": [
          "ReturnsRefunds"
        ],
        "summary": "GetActionableRefundHeaders",
        "description": "Returns a paged list of booked refund headers\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.ReturnsRefunds.Refunds.ViewRefundsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetActionableRefundHeaders",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ReturnsRefunds_GetActionableRefundHeadersRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReturnsRefunds_GetActionableRefundHeadersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetActionableRefundHeadersResponse"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ReturnsRefunds/GetProcessedOrAckedErrorRefundHeaders": {
      "post": {
        "tags": [
          "ReturnsRefunds"
        ],
        "summary": "GetProcessedOrAckedErrorRefundHeaders",
        "description": "Returns a paged list of processed or acknowledged error refund headers\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.ReturnsRefunds.Refunds.ViewRefundsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetProcessedOrAckedErrorRefundHeaders",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ReturnsRefunds_GetProcessedOrAckedErrorRefundHeadersRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReturnsRefunds_GetProcessedOrAckedErrorRefundHeadersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetProcessedOrAckedErrorRefundHeadersResponse"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ReturnsRefunds/GetRMAHeadersByOrderId": {
      "post": {
        "tags": [
          "ReturnsRefunds"
        ],
        "summary": "GetRMAHeadersByOrderId",
        "description": "Returns all RMA headers associated with the given order ID\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.ReturnsRefunds.Refunds.ViewRefundsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetRMAHeadersByOrderId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ReturnsRefunds_GetRMAHeadersByOrderIdRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReturnsRefunds_GetRMAHeadersByOrderIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetRMAHeadersByOrderIdResponse"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ReturnsRefunds/GetRefundHeadersByOrderId": {
      "post": {
        "tags": [
          "ReturnsRefunds"
        ],
        "summary": "GetRefundHeadersByOrderId",
        "description": "Returns all refund headers associated with the given order ID\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.ReturnsRefunds.Refunds.ViewRefundsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetRefundHeadersByOrderId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ReturnsRefunds_GetRefundHeadersByOrderIdRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReturnsRefunds_GetRefundHeadersByOrderIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetRefundHeadersByOrderIdResponse"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ReturnsRefunds/GetRefundLinesByHeaderId": {
      "post": {
        "tags": [
          "ReturnsRefunds"
        ],
        "summary": "GetRefundLinesByHeaderId",
        "description": "Returns a refund, given its header ID\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.ReturnsRefunds.Refunds.ViewRefundsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetRefundLinesByHeaderId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ReturnsRefunds_GetRefundLinesByHeaderIdRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReturnsRefunds_GetRefundLinesByHeaderIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetRefundLinesByHeaderIdResponse"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ReturnsRefunds/CreateRefund": {
      "post": {
        "tags": [
          "ReturnsRefunds"
        ],
        "summary": "CreateRefund",
        "description": "Creates a refund in the system for approval\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.ReturnsRefunds.Refunds.CreateRefundsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "CreateRefund",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ReturnsRefunds_CreateRefundRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReturnsRefunds_CreateRefundRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateRefundResponse"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ReturnsRefunds/UpdateRefund": {
      "post": {
        "tags": [
          "ReturnsRefunds"
        ],
        "summary": "UpdateRefund",
        "description": "Updates an existing refund in the system. Requires create and delete permissions\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.ReturnsRefunds.Refunds.CreateRefundsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "UpdateRefund",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ReturnsRefunds_UpdateRefundRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReturnsRefunds_UpdateRefundRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdateRefundResponse"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ReturnsRefunds/AcknowledgeRefundErrors": {
      "post": {
        "tags": [
          "ReturnsRefunds"
        ],
        "summary": "AcknowledgeRefundErrors",
        "description": "Acknowledges error responses for a given refund header\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.ReturnsRefunds.Refunds.ApproveRefundsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "AcknowledgeRefundErrors",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ReturnsRefunds_AcknowledgeRefundErrorsRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReturnsRefunds_AcknowledgeRefundErrorsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AcknowledgeRefundErrorsResponse"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ReturnsRefunds/AcknowledgeRMAErrors": {
      "post": {
        "tags": [
          "ReturnsRefunds"
        ],
        "summary": "AcknowledgeRMAErrors",
        "description": "Acknowledges all error responses for a given RMA header\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.ReturnsRefunds.ReturnsExchanges.AcceptReturnsExchangesNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "AcknowledgeRMAErrors",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ReturnsRefunds_AcknowledgeRMAErrorsRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReturnsRefunds_AcknowledgeRMAErrorsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AcknowledgeRMAErrorsResponse"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ReturnsRefunds/ActionRefund": {
      "post": {
        "tags": [
          "ReturnsRefunds"
        ],
        "summary": "ActionRefund",
        "description": "Sends a refund to the channel for actioning\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.ReturnsRefunds.Refunds.ApproveRefundsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "ActionRefund",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ReturnsRefunds_ActionRefundRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReturnsRefunds_ActionRefundRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ActionRefundResponse"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ReturnsRefunds/DeleteRefund": {
      "post": {
        "tags": [
          "ReturnsRefunds"
        ],
        "summary": "DeleteRefund",
        "description": "Deletes all lines from the given refund header that have not yet been processed, or acknowledged as errors, removing it from the \"Actionable Refunds\" screen. If no lines are left, the header row is deleted\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.ReturnsRefunds.Refunds.DeleteRefundsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "DeleteRefund",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ReturnsRefunds_DeleteRefundRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReturnsRefunds_DeleteRefundRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeleteRefundResponse"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ReturnsRefunds/DeleteRMA": {
      "post": {
        "tags": [
          "ReturnsRefunds"
        ],
        "summary": "DeleteRMA",
        "description": "Deletes all lines from the given RMA header that have not yet been processed, or acknowledged as errors, removing it from the \"RMA Bookings\" screen. If no lines are left, the header row is deleted\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.ReturnsRefunds.ReturnsExchanges.DeleteReturnsExchangesNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "DeleteRMA",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ReturnsRefunds_DeleteRMARequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReturnsRefunds_DeleteRMARequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeleteRMAResponse"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ReturnsRefunds/GetReturnOptions": {
      "post": {
        "tags": [
          "ReturnsRefunds"
        ],
        "summary": "GetReturnOptions",
        "description": "Returns channel-specific information regarding the types of refund that can be applied to the given order\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.ReturnsRefunds.ReturnsExchanges.ViewReturnsExchangesNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetReturnOptions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ReturnsRefunds_GetReturnOptionsRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReturnsRefunds_GetReturnOptionsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetReturnOptionsResponse"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ReturnsRefunds/GetActionableRMAHeaders": {
      "post": {
        "tags": [
          "ReturnsRefunds"
        ],
        "summary": "GetActionableRMAHeaders",
        "description": "Returns a paged list of booked refund headers\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.ReturnsRefunds.ReturnsExchanges.ViewReturnsExchangesNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetActionableRMAHeaders",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ReturnsRefunds_GetActionableRMAHeadersRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReturnsRefunds_GetActionableRMAHeadersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetActionableRMAHeadersResponse"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ReturnsRefunds/GetProcessedOrAckedErrorRMAHeaders": {
      "post": {
        "tags": [
          "ReturnsRefunds"
        ],
        "summary": "GetProcessedOrAckedErrorRMAHeaders",
        "description": "Returns a paged list of processed or acknowledged error RMA headers\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.ReturnsRefunds.ReturnsExchanges.ViewReturnsExchangesNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetProcessedOrAckedErrorRMAHeaders",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ReturnsRefunds_GetProcessedOrAckedErrorRMAHeadersRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReturnsRefunds_GetProcessedOrAckedErrorRMAHeadersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetProcessedOrAckedErrorRMAHeadersResponse"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ReturnsRefunds/CreateRMABooking": {
      "post": {
        "tags": [
          "ReturnsRefunds"
        ],
        "summary": "CreateRMABooking",
        "description": "Creates an RMA booking in the system\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.ReturnsRefunds.ReturnsExchanges.CreateReturnsExchangesNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "CreateRMABooking",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ReturnsRefunds_CreateRMABookingRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReturnsRefunds_CreateRMABookingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateRMABookingResponse"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ReturnsRefunds/UpdateRMABooking": {
      "post": {
        "tags": [
          "ReturnsRefunds"
        ],
        "summary": "UpdateRMABooking",
        "description": "Updates an RMA booking in the system. Requires create and delete permissions\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.ReturnsRefunds.ReturnsExchanges.CreateReturnsExchangesNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "UpdateRMABooking",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ReturnsRefunds_UpdateRMABookingRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReturnsRefunds_UpdateRMABookingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdateRMABookingResponse"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ReturnsRefunds/ActionRMABooking": {
      "post": {
        "tags": [
          "ReturnsRefunds"
        ],
        "summary": "ActionRMABooking",
        "description": "Accepts a booked return or exchange in the system\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.ReturnsRefunds.ReturnsExchanges.AcceptReturnsExchangesNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "ActionRMABooking",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ReturnsRefunds_ActionRMABookingRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReturnsRefunds_ActionRMABookingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ActionRMABookingResponse"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ReturnsRefunds/GetRefundOrders": {
      "get": {
        "tags": [
          "ReturnsRefunds"
        ],
        "summary": "GetRefundOrders",
        "description": "Gets all refund order items for all orders\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.ReturnsRefundsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetRefundOrders",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RefundOrder"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ReturnsRefunds/GetBookedReturnsExchangeOrders": {
      "get": {
        "tags": [
          "ReturnsRefunds"
        ],
        "summary": "GetBookedReturnsExchangeOrders",
        "description": "Gets all booked returns/exchange orders\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.ReturnsRefundsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetBookedReturnsExchangeOrders",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BookedReturnsExchangeOrder"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ReturnsRefunds/DeleteBookedOrder": {
      "post": {
        "tags": [
          "ReturnsRefunds"
        ],
        "summary": "DeleteBookedOrder",
        "description": "Deletes a returns/exchange order\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.ReturnsRefunds.ReturnsExchanges.DeleteReturnsExchangesNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "DeleteBookedOrder",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "ReturnsRefunds_DeleteBookedOrderRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReturnsRefunds_DeleteBookedOrderRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ReturnsRefunds/ActionBookedOrder": {
      "post": {
        "tags": [
          "ReturnsRefunds"
        ],
        "summary": "ActionBookedOrder",
        "description": "Action list of booked returns/exchange items for a given order ID. If the return is for a batched item, the batch must be booked in manually.\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.ReturnsRefundsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "ActionBookedOrder",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "ReturnsRefunds_ActionBookedOrderRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReturnsRefunds_ActionBookedOrderRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ReturnsRefunds/DeleteBookedItem": {
      "post": {
        "tags": [
          "ReturnsRefunds"
        ],
        "summary": "DeleteBookedItem",
        "description": "Delete a booked returns/exchange order item\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.ReturnsRefunds.ReturnsExchanges.DeleteReturnsExchangesNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "DeleteBookedItem",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "ReturnsRefunds_DeleteBookedItemRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReturnsRefunds_DeleteBookedItemRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ReturnsRefunds/RefundOrder": {
      "post": {
        "tags": [
          "ReturnsRefunds"
        ],
        "summary": "RefundOrder",
        "description": "Refund an order given the order ID\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.ReturnsRefundsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "RefundOrder",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "ReturnsRefunds_RefundOrderRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReturnsRefunds_RefundOrderRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ReturnsRefunds/GetWarehouseLocations": {
      "get": {
        "tags": [
          "ReturnsRefunds"
        ],
        "summary": "GetWarehouseLocations",
        "description": "Gets all warehouse locations\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.ReturnsRefundsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetWarehouseLocations",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WarehouseLocation"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ReturnsRefunds/EditBookedItemInfo": {
      "post": {
        "tags": [
          "ReturnsRefunds"
        ],
        "summary": "EditBookedItemInfo",
        "description": "Edit booked exchange/return item\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.ReturnsRefundsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "EditBookedItemInfo",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "ReturnsRefunds_EditBookedItemInfoRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReturnsRefunds_EditBookedItemInfoRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ReturnsRefunds/DeletePendingRefundItem": {
      "post": {
        "tags": [
          "ReturnsRefunds"
        ],
        "summary": "DeletePendingRefundItem",
        "description": "Delete a refund item\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.ReturnsRefunds.Refunds.DeleteRefundsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "DeletePendingRefundItem",
        "consumes": [
          "application/json"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "ReturnsRefunds_DeletePendingRefundItemRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReturnsRefunds_DeletePendingRefundItemRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "deprecated": true,
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ReturnsRefunds/GetTotalRefunds": {
      "get": {
        "tags": [
          "ReturnsRefunds"
        ],
        "summary": "GetTotalRefunds",
        "description": "Gets the refundable amount of an order\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.ReturnsRefundsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetTotalRefunds",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "fkOrderId",
            "in": "query",
            "description": "unique order ID of the order",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "double",
              "type": "number"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ReturnsRefunds/SearchReturnsRefundsPaged": {
      "get": {
        "tags": [
          "ReturnsRefunds"
        ],
        "summary": "SearchReturnsRefundsPaged",
        "description": "Searches through returns/refunds history that meets the parameters' criteria\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.ReturnsRefundsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "SearchReturnsRefundsPaged",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "The lower end of the date range to search. Can be null if searching for 'all dates'. Maximum range is 3 months.",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "to",
            "in": "query",
            "description": "The upper end of the date range to search. Can be null if searching for 'all dates'. Maximum range is 3 months.",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "dateType",
            "in": "query",
            "description": "The search type (e.g. ALLDATES)",
            "type": "string",
            "enum": [
              "ALLDATES",
              "RECEIVED",
              "PROCESSED",
              "BOOKED",
              "ACTIONED"
            ]
          },
          {
            "name": "searchField",
            "in": "query",
            "description": "The field to search by. Can be found by calling GetSearchTypes.",
            "type": "string"
          },
          {
            "name": "exactMatch",
            "in": "query",
            "description": "Set to true if an exact match is required for the search data.",
            "type": "boolean"
          },
          {
            "name": "searchTerm",
            "in": "query",
            "description": "The term which you are searching for.",
            "type": "string"
          },
          {
            "name": "pageNum",
            "in": "query",
            "description": "The page number of the request.",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "numEntriesPerPage",
            "in": "query",
            "description": "The number of entries required on a page. Maximum 200.",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "historyType",
            "in": "query",
            "description": "Search type. Allow RETURNS or REFUNDS",
            "type": "string",
            "enum": [
              "RETURNS",
              "REFUNDS",
              "CANCELLATIONS"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GenericPagedResult_ReturnsRefundsWeb"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ReturnsRefunds/CreateReturnsRefundsCSV": {
      "get": {
        "tags": [
          "ReturnsRefunds"
        ],
        "summary": "CreateReturnsRefundsCSV",
        "description": "Creates a CSV file of the search result for download\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.ReturnsRefundsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "CreateReturnsRefundsCSV",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "The lower end of the date range to search. Can be null if searching for 'all dates'. Maximum range is 3 months.",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "to",
            "in": "query",
            "description": "The upper end of the date range to search. Can be null if searching for 'all dates'. Maximum range is 3 months.",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "dateType",
            "in": "query",
            "description": "The search type (e.g. ALLDATES)",
            "type": "string",
            "enum": [
              "ALLDATES",
              "RECEIVED",
              "PROCESSED",
              "BOOKED",
              "ACTIONED"
            ]
          },
          {
            "name": "searchField",
            "in": "query",
            "description": "The field to search by. Can be found by calling GetSearchTypes.",
            "type": "string"
          },
          {
            "name": "exactMatch",
            "in": "query",
            "description": "Set to true if an exact match is required for the search data.",
            "type": "boolean"
          },
          {
            "name": "searchTerm",
            "in": "query",
            "description": "The term which you are searching for.",
            "type": "string"
          },
          {
            "name": "sortColumn",
            "in": "query",
            "description": "The column to sort by",
            "type": "string"
          },
          {
            "name": "sortDirection",
            "in": "query",
            "description": "The sort direction (true = ascending, false = descending).",
            "type": "boolean"
          },
          {
            "name": "historyType",
            "in": "query",
            "description": "Search type. Allow RETURNS or REFUNDS",
            "type": "string",
            "enum": [
              "RETURNS",
              "REFUNDS",
              "CANCELLATIONS"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    },
    "/api/ReturnsRefunds/GetSearchTypes": {
      "get": {
        "tags": [
          "ReturnsRefunds"
        ],
        "summary": "GetSearchTypes",
        "description": "Gets a list of valid search types. These are needed to search processed orders.\n<b>Permissions Required: </b> GlobalPermissions.OrderBook.ReturnsRefundsNode\n<b>Rate limit: </b><span style=\"background-color:#0272d9;color:white;padding:4px 8px;text-align:center;border-radius:5px; font-size: small;\"><b>150</b></span> / minute",
        "operationId": "GetSearchTypes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "historyType",
            "in": "query",
            "description": "Search type. Allow RETURNS or REFUNDS",
            "type": "string",
            "enum": [
              "RETURNS",
              "REFUNDS",
              "CANCELLATIONS"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SearchField"
              }
            }
          }
        },
        "security": [
          {
            "token": [
              "token"
            ]
          }
        ]
      }
    }
  },
  "definitions": {
    "ReturnsRefunds_GetRefundOptionsRequest": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/GetRefundOptionsRequest",
          "description": "The request class for this call"
        }
      }
    },
    "GetRefundOptionsRequest": {
      "type": "object",
      "properties": {
        "RefundHeaderId": {
          "format": "int32",
          "description": "If included, will return the relevant refund header as part of the RefundOptions object in the response",
          "type": "integer"
        },
        "OrderId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "GetRefundOptionsResponse": {
      "type": "object",
      "properties": {
        "RefundOptions": {
          "$ref": "#/definitions/RefundOptions"
        }
      }
    },
    "RefundOptions": {
      "type": "object",
      "properties": {
        "CanSendRejectionIfDeleted": {
          "type": "boolean"
        },
        "CanRefund": {
          "type": "boolean",
          "readOnly": true
        },
        "CanRefundInternally": {
          "type": "boolean",
          "readOnly": true
        },
        "CanRefundItems": {
          "type": "boolean",
          "readOnly": true
        },
        "CanRefundServices": {
          "type": "boolean",
          "readOnly": true
        },
        "CanRefundShipping": {
          "type": "boolean",
          "readOnly": true
        },
        "CanRefundShippingIndependently": {
          "type": "boolean",
          "readOnly": true
        },
        "CanRefundAdditionally": {
          "type": "boolean",
          "readOnly": true
        },
        "CanRefundFreeText": {
          "type": "boolean",
          "readOnly": true
        },
        "CanInsufficientRefundFreeText": {
          "type": "boolean",
          "readOnly": true
        },
        "RefundFreeTextOrNoteMaxLength": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "SubStatuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PostSaleSubStatus"
          },
          "readOnly": true
        },
        "InsufficientRefundReasons": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChannelReason"
          },
          "readOnly": true
        },
        "ItemRefundReasons": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChannelReason"
          },
          "readOnly": true
        },
        "ServiceRefundReasons": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChannelReason"
          },
          "readOnly": true
        },
        "ShippingRefundReasons": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChannelReason"
          },
          "readOnly": true
        },
        "ItemizedRefundReasons": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ItemizedRefundReason"
          },
          "readOnly": true
        },
        "RejectionReasons": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChannelReason"
          }
        },
        "CannotRefundReason": {
          "enum": [
            "None",
            "NotImplemented",
            "DisabledInConfig",
            "MissingOrderInLinnworks",
            "OpenOrderInLinnworks",
            "OrderIsFullyRefundedInLinnworks",
            "NoNewRefundsSpecified",
            "NoUpdatedRefundsSpecified",
            "MultipleReferences",
            "SubStatusTagNotInTheSystem",
            "SubStatusTagIsNotActionable",
            "MultipleSubStatusTags",
            "RefundNotInSystem",
            "Other"
          ],
          "type": "string"
        },
        "Order": {
          "$ref": "#/definitions/OrderDetails",
          "readOnly": true
        },
        "RefundHeader": {
          "$ref": "#/definitions/OrderRefundHeader"
        },
        "AllExistingRefunds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VerifiedRefund"
          }
        },
        "Errors": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "PostSaleSubStatus": {
      "type": "object",
      "properties": {
        "StatusTag": {
          "description": "For an individual refund line, this identifies the line's state on the channel. For the header, if all its lines have the same StatusTag, it will also have the same StatusTag. If not,\r\nit will determine an appropriate StatusTag based on those of its lines",
          "type": "string"
        },
        "StatusDescription": {
          "description": "A user-friendly descriptor of the StatusTag",
          "type": "string"
        },
        "Actionable": {
          "description": "Determines whether the refund is in a state where it requires action from the user",
          "type": "boolean"
        },
        "ActionDescription": {
          "description": "A user-friendly descriptor of what \"actioning\" the refund will do on the channel",
          "type": "string"
        },
        "EditableFields": {
          "description": "Where certain fields need to be modified for the refund to be successfully actioned, this list is populated with a list of the field names, allowing them to be edited as necessary",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ChannelReason": {
      "type": "object",
      "properties": {
        "Types": {
          "enum": [
            "None",
            "Cancellation",
            "ItemRefund",
            "ShippingRefund",
            "ServiceRefund",
            "ItemReturn",
            "InsufficientRefund",
            "AdditionalRefund",
            "RejectReturn",
            "RejectRefund"
          ],
          "type": "string"
        },
        "Tag": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "SubReasons": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChannelSubReason"
          }
        }
      }
    },
    "ItemizedRefundReason": {
      "type": "object",
      "properties": {
        "Type": {
          "enum": [
            "Item",
            "Shipping",
            "Service",
            "Additional"
          ],
          "type": "string"
        },
        "ItemId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Reasons": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChannelReasonBase"
          }
        }
      }
    },
    "OrderDetails": {
      "type": "object",
      "properties": {
        "OrderId": {
          "format": "uuid",
          "description": "Order ID (pkOrderId)",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "NumOrderId": {
          "format": "int32",
          "description": "Linnworks order number",
          "type": "integer"
        },
        "Processed": {
          "description": "If order is processed",
          "type": "boolean"
        },
        "ProcessedDateTime": {
          "format": "date-time",
          "description": "Date and time when order was processed",
          "type": "string"
        },
        "FulfilmentLocationId": {
          "format": "uuid",
          "description": "Location ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "GeneralInfo": {
          "$ref": "#/definitions/OrderGeneralInfo",
          "description": "General information about order"
        },
        "ShippingInfo": {
          "$ref": "#/definitions/OrderShippingInfo",
          "description": "Order shipping information"
        },
        "CustomerInfo": {
          "$ref": "#/definitions/OrderCustomerInfo",
          "description": "Order Customer information (Name, email etc)"
        },
        "TotalsInfo": {
          "$ref": "#/definitions/OrderTotalsInfo",
          "description": "Order totals information"
        },
        "ExtendedProperties": {
          "description": "Extended properties of an order",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtendedProperty"
          }
        },
        "FolderName": {
          "description": "Folder names assigned to an order",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Items": {
          "description": "List of order items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderItem"
          }
        },
        "Notes": {
          "description": "List of order notes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderNote"
          }
        },
        "PaidDateTime": {
          "format": "date-time",
          "description": "Date and time when the order was marked as paid",
          "type": "string"
        },
        "TaxId": {
          "description": "Buyer's tax number.",
          "type": "string"
        }
      }
    },
    "OrderRefundHeader": {
      "type": "object",
      "properties": {
        "RefundHeaderId": {
          "format": "int32",
          "type": "integer"
        },
        "Currency": {
          "type": "string"
        },
        "Amount": {
          "format": "double",
          "type": "number"
        },
        "RefundLines": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VerifiedRefund"
          }
        },
        "RefundLink": {
          "type": "string"
        },
        "OrderId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "NumOrderId": {
          "format": "int32",
          "type": "integer"
        },
        "Status": {
          "$ref": "#/definitions/PostSaleStatus"
        },
        "OrderSource": {
          "type": "string"
        },
        "OrderSubSource": {
          "type": "string"
        },
        "ExternalReference": {
          "type": "string"
        },
        "ChannelInitiated": {
          "type": "boolean"
        },
        "CreatedDate": {
          "format": "date-time",
          "type": "string"
        },
        "Actioned": {
          "type": "boolean"
        },
        "LastActionDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "VerifiedRefund": {
      "type": "object",
      "properties": {
        "RefundRowId": {
          "format": "uuid",
          "description": "A unique identifier for the refund line",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "RefundHeaderId": {
          "format": "int32",
          "description": "A unique identifier for the refund header this line belongs to",
          "type": "integer"
        },
        "Status": {
          "$ref": "#/definitions/PostSaleStatus",
          "description": "A detailed description of this refund line's status"
        },
        "RefundedUnit": {
          "description": "Identifies the type of refund for this line",
          "enum": [
            "Item",
            "Shipping",
            "Service",
            "Additional"
          ],
          "type": "string"
        },
        "IsShippingRefund": {
          "description": "Identifies whether the refund is a shipping refund",
          "type": "boolean",
          "readOnly": true
        },
        "IsAdditionalRefund": {
          "description": "Identifies whether the refund is an additional refund",
          "type": "boolean",
          "readOnly": true
        },
        "IsCancellation": {
          "description": "Identifies whether the refund row is a cancellation",
          "type": "boolean",
          "readOnly": true
        },
        "RefundedItem": {
          "$ref": "#/definitions/VerifiedRefundItem",
          "description": "Used mainly to associate an item with an error, this identifies the order item to which the refund line applies"
        },
        "ValidationError": {
          "description": "If validation has failed for this item, the field will be populated with the appropriate error message",
          "type": "string"
        },
        "Error": {
          "type": "string"
        },
        "Errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RefundError"
          }
        },
        "Actioned": {
          "description": "Line-level indicator of whether the refund has been actioned",
          "type": "boolean"
        },
        "ActionedDate": {
          "format": "date-time",
          "description": "If a refund has been actioned, this denotes the date it was actioned. For not actioned lines, this value is null",
          "type": "string"
        },
        "ChannelInitiated": {
          "description": "Identifies whether the refund was created manually in Linnworks, or downloaded from the channel automatically",
          "type": "boolean"
        },
        "Internal": {
          "description": "Identifies whether the line is processed only internally or also on a third-party channel",
          "type": "boolean"
        },
        "Deleted": {
          "description": "Identifies whether the line has been removed from the refund, and is pending an update to the database to reflect this",
          "type": "boolean"
        },
        "ExternalReference": {
          "description": "The channel reference number for this refund",
          "type": "string"
        },
        "IsFreeText": {
          "description": "Identifies whether the refund reason is provided in freetext, or as one of a predefined set of options",
          "type": "boolean",
          "readOnly": true
        },
        "FreeTextOrNote": {
          "description": "For freetext refund reasons, this is the reason that will be sent to the channel. Otherwise, it is considered an internal note",
          "type": "string"
        },
        "Amount": {
          "format": "double",
          "description": "The amount to be refunded for this line",
          "type": "number"
        },
        "Quantity": {
          "format": "int32",
          "description": "Used when the refund is part of a return",
          "type": "integer"
        },
        "ReasonTag": {
          "description": "For channels that support predefined refund reasons, this is the tag that identifies a predefined reason",
          "type": "string"
        },
        "SubReasonTag": {
          "description": "For channels that support a secondary predefined refund reason, this is the tag that identifies a predefined secondary reason",
          "type": "string"
        },
        "InsufficientRefundTag": {
          "description": "For channels that require a reason when the refund is lower than the full line amount, this is the tag that identifies a predefined insufficient refund reason",
          "type": "string"
        },
        "InsufficientRefundNote": {
          "description": "For channels that require a reason when the refund is lower than the full line amount, and support a freetext note, this field populates that note",
          "type": "string"
        },
        "ReasonCategory": {
          "description": "Internal reason category",
          "type": "string"
        }
      }
    },
    "ChannelSubReason": {
      "type": "object",
      "properties": {
        "Tag": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        }
      }
    },
    "ChannelReasonBase": {
      "type": "object",
      "properties": {
        "Tag": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "SubReasons": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChannelSubReason"
          }
        }
      }
    },
    "OrderGeneralInfo": {
      "description": "Order General Info class",
      "type": "object",
      "properties": {
        "Status": {
          "format": "int32",
          "description": "Order Status (0 = UNPAID, 1 = PAID,2 = RETURN,3 = PENDING,4 = RESEND)",
          "type": "integer"
        },
        "LabelPrinted": {
          "description": "Is label printed",
          "type": "boolean"
        },
        "LabelError": {
          "description": "Is there a label error",
          "type": "string"
        },
        "InvoicePrinted": {
          "description": "Is invoice printed",
          "type": "boolean"
        },
        "InvoicePrintError": {
          "description": "Is there invoice print error",
          "type": "string"
        },
        "PickListPrinted": {
          "description": "Is pick list printed",
          "type": "boolean"
        },
        "PickListPrintError": {
          "description": "Is there pick list print error",
          "type": "string"
        },
        "IsRuleRun": {
          "description": "If rules engine rule ran on an order",
          "type": "boolean"
        },
        "Notes": {
          "format": "int32",
          "description": "Quantity of order notes",
          "type": "integer"
        },
        "PartShipped": {
          "description": "If order partly shipped",
          "type": "boolean"
        },
        "Marker": {
          "format": "int32",
          "description": "Order marker (0 = NOT TAG,1 = Tag 1,2 = Tag 2,3 = Tag 3,4 = Tag 4,5 = Tag 5,6 = Tag 6,7 = Parked)",
          "type": "integer"
        },
        "IsParked": {
          "description": "Is the order parked?",
          "type": "boolean"
        },
        "Identifiers": {
          "description": "Order identifiers. [Prime | Scheduled]",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Identifier"
          }
        },
        "ReferenceNum": {
          "description": "Order reference number (Channel defined)",
          "type": "string"
        },
        "SecondaryReference": {
          "description": "An additional reference number for the orderr (Used by some channels)",
          "type": "string"
        },
        "ExternalReferenceNum": {
          "description": "This is an additional reference number from the sales channel, typically used by eBay",
          "type": "string"
        },
        "ReceivedDate": {
          "format": "date-time",
          "description": "The date and time at which the order was placed on the sales channel",
          "type": "string"
        },
        "Source": {
          "description": "Order ChannelName/Source (e.g. EBAY)",
          "type": "string"
        },
        "SubSource": {
          "description": "Order Subsource (e.g. EBAY1)",
          "type": "string"
        },
        "SiteCode": {
          "description": "SiteCode used to differentiate between different sites from a single channel (eg. Amazon UK, Amazon US, Amazon FR...)",
          "type": "string"
        },
        "HoldOrCancel": {
          "description": "This shows whether the order has been marked as on hold, for processed orders if the order has been cancelled OnHold = 1",
          "type": "boolean"
        },
        "DespatchByDate": {
          "format": "date-time",
          "description": "Despatch by Date",
          "type": "string"
        },
        "ScheduledDelivery": {
          "$ref": "#/definitions/ScheduledDelivery",
          "description": "Scheduled delivery dates. Take priority over despatch by date"
        },
        "HasScheduledDelivery": {
          "type": "boolean",
          "readOnly": true
        },
        "Location": {
          "format": "uuid",
          "description": "Order location ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "NumItems": {
          "format": "int32",
          "description": "Quantity of order items",
          "type": "integer"
        },
        "PickwaveIds": {
          "description": "All related Pickwave Ids",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "StockAllocationType": {
          "enum": [
            "NotAllocated",
            "Insuffient",
            "Partial",
            "Full",
            "OverAllocated"
          ],
          "type": "string"
        }
      }
    },
    "OrderShippingInfo": {
      "type": "object",
      "properties": {
        "Vendor": {
          "description": "Courier name (e.g. Royal Mail)",
          "type": "string"
        },
        "PostalServiceId": {
          "format": "uuid",
          "description": "Postal service ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "PostalServiceName": {
          "description": "Postal service name (e.g. Next day delivery)",
          "type": "string"
        },
        "TotalWeight": {
          "format": "double",
          "description": "Order total weight",
          "type": "number"
        },
        "ItemWeight": {
          "format": "double",
          "description": "If order is processed",
          "type": "number"
        },
        "PackageCategoryId": {
          "format": "uuid",
          "description": "Package category ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "PackageCategory": {
          "description": "Package category name",
          "type": "string"
        },
        "PackageTypeId": {
          "format": "uuid",
          "description": "Package type ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "PackageType": {
          "description": "Package type name",
          "type": "string"
        },
        "PostageCost": {
          "format": "double",
          "description": "Order postage cost",
          "type": "number"
        },
        "PostageCostExTax": {
          "format": "double",
          "description": "Order postage cost excluding tax",
          "type": "number"
        },
        "TrackingNumber": {
          "description": "Order tracking number provided by courier",
          "type": "string"
        },
        "ManualAdjust": {
          "description": "If there is an adjustment to shipping cost was made",
          "type": "boolean"
        }
      }
    },
    "OrderCustomerInfo": {
      "type": "object",
      "properties": {
        "ChannelBuyerName": {
          "description": "Username of customer (Comes from channel)",
          "type": "string"
        },
        "Address": {
          "$ref": "#/definitions/CustomerAddress",
          "description": "Customer address"
        },
        "BillingAddress": {
          "$ref": "#/definitions/CustomerAddress",
          "description": "Customer billing address"
        }
      }
    },
    "OrderTotalsInfo": {
      "type": "object",
      "properties": {
        "Subtotal": {
          "format": "double",
          "description": "Order subtotal",
          "type": "number"
        },
        "PostageCost": {
          "format": "double",
          "description": "Order postage cost",
          "type": "number"
        },
        "PostageCostExTax": {
          "format": "double",
          "description": "Order postage cost ex. tax",
          "type": "number"
        },
        "Tax": {
          "format": "double",
          "description": "Tax",
          "type": "number"
        },
        "TotalCharge": {
          "format": "double",
          "description": "Total charge",
          "type": "number"
        },
        "PaymentMethod": {
          "description": "Payment method",
          "type": "string"
        },
        "PaymentMethodId": {
          "format": "uuid",
          "description": "Payment method ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ProfitMargin": {
          "format": "double",
          "description": "Profit margin",
          "type": "number",
          "readOnly": true
        },
        "TotalDiscount": {
          "format": "double",
          "description": "Total discount applied to the order",
          "type": "number"
        },
        "Currency": {
          "description": "Order currency",
          "type": "string"
        },
        "CountryTaxRate": {
          "format": "double",
          "description": "Country tax rate",
          "type": "number"
        },
        "ConversionRate": {
          "format": "double",
          "description": "Currency conversion rate. Set at point of save by the currency",
          "type": "number"
        }
      }
    },
    "ExtendedProperty": {
      "type": "object",
      "properties": {
        "RowId": {
          "format": "uuid",
          "description": "Record row ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Name": {
          "description": "Extended property name",
          "type": "string"
        },
        "Value": {
          "description": "Extended property value",
          "type": "string"
        },
        "Type": {
          "description": "Extended property type",
          "type": "string"
        }
      }
    },
    "OrderItem": {
      "description": "Order item object",
      "type": "object",
      "properties": {
        "ItemId": {
          "format": "uuid",
          "description": "Stock Item ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ItemNumber": {
          "description": "Item number as on channel",
          "type": "string"
        },
        "SKU": {
          "description": "Product SKU",
          "type": "string"
        },
        "ItemSource": {
          "description": "Item source / channel name",
          "type": "string"
        },
        "Title": {
          "description": "Item title",
          "type": "string"
        },
        "Quantity": {
          "format": "int32",
          "description": "Quantity",
          "type": "integer"
        },
        "CategoryName": {
          "description": "Product category",
          "type": "string"
        },
        "CompositeAvailablity": {
          "format": "int32",
          "description": "Composite availability",
          "type": "integer"
        },
        "StockLevelsSpecified": {
          "description": "If stock level specified",
          "type": "boolean"
        },
        "OnOrder": {
          "format": "int32",
          "description": "Level due in purchase orders",
          "type": "integer"
        },
        "OnPurchaseOrder": {
          "$ref": "#/definitions/OrderItemOnOrder",
          "description": "Purchase order bound to this item"
        },
        "InOrderBook": {
          "format": "int32",
          "description": "Quantity currently in open orders",
          "type": "integer"
        },
        "Level": {
          "format": "int32",
          "description": "Current stock level",
          "type": "integer"
        },
        "MinimumLevel": {
          "format": "int32",
          "description": "Minimum level",
          "type": "integer"
        },
        "AvailableStock": {
          "format": "int32",
          "description": "Currently available stock level (Level-InOrderBook)",
          "type": "integer"
        },
        "PricePerUnit": {
          "format": "double",
          "description": "Unit price",
          "type": "number"
        },
        "UnitCost": {
          "format": "double",
          "description": "Unit cost",
          "type": "number"
        },
        "DespatchStockUnitCost": {
          "format": "double",
          "description": "Despatch stock unit cost",
          "type": "number"
        },
        "Discount": {
          "format": "double",
          "description": "Percentage (0%, 10%, 20%, etc...)",
          "type": "number"
        },
        "Tax": {
          "format": "double",
          "description": "Actual tax value on an item",
          "type": "number",
          "readOnly": true
        },
        "TaxRate": {
          "format": "double",
          "description": "Tax rate",
          "type": "number"
        },
        "Cost": {
          "format": "double",
          "description": "Total item cost (exc tax)",
          "type": "number"
        },
        "CostIncTax": {
          "format": "double",
          "description": "Total item cost (inc tax)",
          "type": "number"
        },
        "CompositeSubItems": {
          "description": "List of order items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderItem"
          }
        },
        "IsService": {
          "description": "if item is a service",
          "type": "boolean"
        },
        "SalesTax": {
          "format": "double",
          "description": "Sales Tax",
          "type": "number"
        },
        "TaxCostInclusive": {
          "description": "If tax is included in a cost",
          "type": "boolean"
        },
        "PartShipped": {
          "description": "If order is partly shipped",
          "type": "boolean"
        },
        "Weight": {
          "format": "double",
          "description": "Order weight",
          "type": "number"
        },
        "BarcodeNumber": {
          "description": "Product barcode",
          "type": "string"
        },
        "Market": {
          "format": "int32",
          "description": "Market",
          "type": "integer"
        },
        "ChannelSKU": {
          "description": "Channel product SKU",
          "type": "string"
        },
        "ChannelTitle": {
          "description": "Channel product title",
          "type": "string"
        },
        "DiscountValue": {
          "format": "double",
          "type": "number",
          "readOnly": true
        },
        "HasImage": {
          "description": "If item got an image",
          "type": "boolean",
          "readOnly": true
        },
        "ImageId": {
          "format": "uuid",
          "description": "Image ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "AdditionalInfo": {
          "description": "List of order item options",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderItemOption"
          }
        },
        "StockLevelIndicator": {
          "format": "int32",
          "description": "Stock level indicator",
          "type": "integer"
        },
        "ShippingCost": {
          "format": "double",
          "description": "If batch number scan required",
          "type": "number"
        },
        "PartShippedQty": {
          "format": "int32",
          "description": "ShippingCost",
          "type": "integer"
        },
        "ItemName": {
          "description": "PartShippedQty",
          "type": "string"
        },
        "BatchNumberScanRequired": {
          "description": "ItemName",
          "type": "boolean"
        },
        "SerialNumberScanRequired": {
          "description": "If serial number scan required",
          "type": "boolean"
        },
        "BinRack": {
          "description": "Binrack location",
          "type": "string"
        },
        "BinRacks": {
          "description": "List of BinRacks used for OrderItem",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderItemBinRack"
          }
        },
        "InventoryTrackingType": {
          "format": "int32",
          "description": "Identifies whether the item has a sell by date or other defined order in which inventory is to be sold",
          "type": "integer"
        },
        "isBatchedStockItem": {
          "description": "If item has batches",
          "type": "boolean",
          "readOnly": true
        },
        "IsWarehouseManaged": {
          "type": "boolean"
        },
        "IsUnlinked": {
          "type": "boolean",
          "readOnly": true
        },
        "StockItemIntId": {
          "format": "int32",
          "type": "integer"
        },
        "Boxes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StockItemBoxConfiguration"
          }
        },
        "AddedDate": {
          "format": "date-time",
          "type": "string"
        },
        "RowId": {
          "format": "uuid",
          "description": "Record row ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "OrderId": {
          "format": "uuid",
          "description": "Order ID (pkOrderID)",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "StockItemId": {
          "format": "uuid",
          "description": "Stock Item ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "OrderNote": {
      "type": "object",
      "properties": {
        "OrderNoteId": {
          "format": "uuid",
          "description": "Order note ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "OrderId": {
          "format": "uuid",
          "description": "Order Id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "NoteDate": {
          "format": "date-time",
          "description": "Date and time when note was added",
          "type": "string"
        },
        "Internal": {
          "description": "order note type (Internal or External)",
          "type": "boolean"
        },
        "Note": {
          "description": "Note's text",
          "type": "string"
        },
        "CreatedBy": {
          "description": "User that created note",
          "type": "string"
        },
        "NoteTypeId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "PostSaleStatus": {
      "type": "object",
      "properties": {
        "StatusHeader": {
          "description": "Identifies whether the refund is open, processed, or in an erroneous state",
          "enum": [
            "OPEN",
            "PROCESSED",
            "ERROR",
            "ERROR_ACKED",
            "PENDING"
          ],
          "type": "string"
        },
        "StatusDetail": {
          "$ref": "#/definitions/PostSaleSubStatus",
          "description": "Further identifies the state the refund is in, along with whether it can be actioned"
        }
      }
    },
    "VerifiedRefundItem": {
      "type": "object",
      "properties": {
        "OrderItemRowId": {
          "format": "uuid",
          "description": "The unique order item identifier",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ReturnRowId": {
          "format": "int32",
          "description": "A unique identifier for the return line this refund relates to. If null, it is an independent refund",
          "type": "integer"
        },
        "ItemSKU": {
          "description": "The Linnworks SKU for the item, assuming it is linked. If it is not, this matches the channel SKU",
          "type": "string"
        },
        "ChannelSKU": {
          "description": "The channel's SKU for the item",
          "type": "string"
        },
        "ItemTitle": {
          "description": "For a linked item, the Linnworks item title for this channel (or the default item title where a specific channel title does not exist). For an unlinked item, this is the title\r\nprovided by the channel",
          "type": "string"
        },
        "Cost": {
          "format": "double",
          "description": "The tax-inclusive cost for this line",
          "type": "number"
        },
        "CancelledQuantity": {
          "format": "int32",
          "description": "If a refund is linked to a cancellation request, this field denotes the amount of the item cancelled",
          "type": "integer"
        }
      }
    },
    "RefundError": {
      "type": "object",
      "properties": {
        "RefundRowId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ErrorMessage": {
          "type": "string"
        },
        "DateStamp": {
          "format": "date-time",
          "type": "string"
        },
        "Acknowledged": {
          "type": "boolean"
        }
      }
    },
    "Identifier": {
      "type": "object",
      "properties": {
        "IdentifierId": {
          "format": "int32",
          "description": "Internal identifier id. Use to update image and name.",
          "type": "integer"
        },
        "IsCustom": {
          "description": "Is the tag user or system defined?",
          "type": "boolean"
        },
        "ImageId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ImageUrl": {
          "type": "string"
        },
        "Tag": {
          "description": "Internal tag for identification purposes",
          "type": "string"
        },
        "Name": {
          "description": "Name displayed where the tag is used",
          "type": "string"
        }
      }
    },
    "ScheduledDelivery": {
      "type": "object",
      "properties": {
        "From": {
          "format": "date-time",
          "type": "string"
        },
        "To": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "CustomerAddress": {
      "type": "object",
      "properties": {
        "EmailAddress": {
          "description": "Customer's email address.",
          "type": "string"
        },
        "Address1": {
          "description": "First line of customer address.",
          "type": "string"
        },
        "Address2": {
          "description": "Second line of customer address.",
          "type": "string"
        },
        "Address3": {
          "description": "Third line of customer address.",
          "type": "string"
        },
        "Town": {
          "description": "Customer's town.",
          "type": "string"
        },
        "Region": {
          "description": "Customer's region.",
          "type": "string"
        },
        "PostCode": {
          "description": "Customer's postcode.",
          "type": "string"
        },
        "Country": {
          "description": "Customer's country.",
          "type": "string"
        },
        "Continent": {
          "description": "Customer's continent",
          "type": "string"
        },
        "FullName": {
          "description": "Customer's first and second name.",
          "type": "string"
        },
        "Company": {
          "description": "Customer's company name.",
          "type": "string"
        },
        "PhoneNumber": {
          "description": "Customer's telephone number.",
          "type": "string"
        },
        "CountryId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "OrderItemOnOrder": {
      "type": "object",
      "properties": {
        "pkPurchaseItemId": {
          "format": "uuid",
          "description": "Primary key of the bound",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Rowid": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "pkPurchaseId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ExternalInvoiceNumber": {
          "type": "string"
        },
        "fkSupplierId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "DateOfDelivery": {
          "format": "date-time",
          "type": "string"
        },
        "QuotedDeliveryDate": {
          "format": "date-time",
          "type": "string"
        },
        "SupplierName": {
          "type": "string"
        },
        "fkLocationId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "OrderItemOption": {
      "type": "object",
      "properties": {
        "pkOptionId": {
          "format": "uuid",
          "description": "Option ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Property": {
          "description": "Option property",
          "type": "string"
        },
        "Value": {
          "description": "Value of the option",
          "type": "string"
        }
      }
    },
    "OrderItemBinRack": {
      "description": "OrderItem BinRack",
      "type": "object",
      "properties": {
        "Quantity": {
          "format": "int32",
          "description": "Quantity for BinRack per Location",
          "type": "integer"
        },
        "BinRack": {
          "description": "BinRack",
          "type": "string"
        },
        "Location": {
          "format": "uuid",
          "description": "LocationId of the BinRack",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "BatchId": {
          "format": "int32",
          "description": "If the item is batched, identifies the batch number",
          "type": "integer"
        },
        "OrderItemBatchId": {
          "format": "int32",
          "description": "If the item is batched, identifies the unique order item batch row",
          "type": "integer"
        }
      }
    },
    "StockItemBoxConfiguration": {
      "description": "Stock item box configuration, dimennsions",
      "type": "object",
      "properties": {
        "BoxId": {
          "format": "int32",
          "description": "Unique box id.",
          "type": "integer"
        },
        "StockItemIntId": {
          "format": "int32",
          "description": "",
          "type": "integer"
        },
        "BoxName": {
          "description": "Box name max 16 characters",
          "type": "string"
        },
        "Width": {
          "format": "double",
          "description": "Width of the box",
          "type": "number"
        },
        "Height": {
          "format": "double",
          "description": "Height of the box",
          "type": "number"
        },
        "Length": {
          "format": "double",
          "description": "Depth of the box",
          "type": "number"
        },
        "Weight": {
          "format": "double",
          "description": "Total weight of the box.",
          "type": "number"
        },
        "ValuePercentage": {
          "format": "double",
          "description": "Value break down percentage",
          "type": "number"
        },
        "Barcode": {
          "description": "Box barcode, max 64 characters.",
          "type": "string"
        },
        "PackagingTypeId": {
          "format": "uuid",
          "description": "Packaging type id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "LogicalDelete": {
          "description": "IsDeleted flag.",
          "type": "boolean"
        }
      }
    },
    "ReturnsRefunds_GetActionableRefundHeadersRequest": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/GetActionableRefundHeadersRequest",
          "description": "The request class for this call"
        }
      }
    },
    "GetActionableRefundHeadersRequest": {
      "type": "object",
      "properties": {
        "Page": {
          "format": "int32",
          "description": "The page number to return for a given set of filters",
          "type": "integer"
        },
        "Filters": {
          "$ref": "#/definitions/ActionablePostSaleSearchFilters",
          "description": "A set of filters to restrict the refund headers output by the call"
        }
      }
    },
    "ActionablePostSaleSearchFilters": {
      "type": "object",
      "properties": {
        "Actionable": {
          "type": "boolean",
          "readOnly": true
        },
        "Type": {
          "enum": [
            "HEADER_ID",
            "ORDER_ID",
            "HEADER_REFERENCE",
            "ORDER_REFERENCES",
            "ORDER_TRACKING",
            "ITEM_INFO",
            "CUSTOMER_INFO"
          ],
          "type": "string"
        },
        "Value": {
          "type": "string"
        }
      }
    },
    "GetActionableRefundHeadersResponse": {
      "type": "object",
      "properties": {
        "Page": {
          "format": "int32",
          "description": "The page number returned",
          "type": "integer"
        },
        "TotalHeaders": {
          "format": "int32",
          "description": "A count of the total number of refund headers matching the filter set by the request",
          "type": "integer"
        },
        "HeadersPerPage": {
          "format": "int32",
          "description": "A count of the number of refund headers returned per page",
          "type": "integer"
        },
        "RefundHeaders": {
          "description": "A collection of refund headers matching the filter set by the request",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderRefundHeader"
          }
        }
      }
    },
    "ReturnsRefunds_GetProcessedOrAckedErrorRefundHeadersRequest": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/GetProcessedOrAckedErrorRefundHeadersRequest",
          "description": "The request class for this call"
        }
      }
    },
    "GetProcessedOrAckedErrorRefundHeadersRequest": {
      "type": "object",
      "properties": {
        "Page": {
          "format": "int32",
          "description": "The page number to return for a given set of filters",
          "type": "integer"
        },
        "Filters": {
          "$ref": "#/definitions/ProcessedPostSaleSearchFilters",
          "description": "A set of filters to restrict the refund headers output by the call"
        }
      }
    },
    "ProcessedPostSaleSearchFilters": {
      "type": "object",
      "properties": {
        "Actionable": {
          "type": "boolean",
          "readOnly": true
        },
        "Type": {
          "enum": [
            "HEADER_ID",
            "ORDER_ID",
            "HEADER_REFERENCE",
            "ORDER_REFERENCES",
            "ORDER_TRACKING",
            "ITEM_INFO",
            "CUSTOMER_INFO"
          ],
          "type": "string"
        },
        "Value": {
          "type": "string"
        }
      }
    },
    "GetProcessedOrAckedErrorRefundHeadersResponse": {
      "type": "object",
      "properties": {
        "Page": {
          "format": "int32",
          "description": "The page number returned",
          "type": "integer"
        },
        "TotalHeaders": {
          "format": "int32",
          "description": "A count of the total number of refund headers matching the filter set by the request",
          "type": "integer"
        },
        "HeadersPerPage": {
          "format": "int32",
          "description": "A count of the number of refund headers returned per page",
          "type": "integer"
        },
        "RefundHeaders": {
          "description": "A collection of refund headers matching the filter set by the request",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderRefundHeader"
          }
        }
      }
    },
    "ReturnsRefunds_GetRMAHeadersByOrderIdRequest": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/GetRMAHeadersByOrderIdRequest",
          "description": "The request class for this call"
        }
      }
    },
    "GetRMAHeadersByOrderIdRequest": {
      "type": "object",
      "properties": {
        "OrderId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "GetRMAHeadersByOrderIdResponse": {
      "type": "object",
      "properties": {
        "RMAHeaders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderRMAHeader"
          }
        }
      }
    },
    "OrderRMAHeader": {
      "type": "object",
      "properties": {
        "RMAHeaderId": {
          "format": "int32",
          "type": "integer"
        },
        "RMALines": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VerifiedRMAItem"
          }
        },
        "OrderId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "NumOrderId": {
          "format": "int32",
          "type": "integer"
        },
        "Status": {
          "$ref": "#/definitions/PostSaleStatus"
        },
        "OrderSource": {
          "type": "string"
        },
        "OrderSubSource": {
          "type": "string"
        },
        "ExternalReference": {
          "type": "string"
        },
        "ChannelInitiated": {
          "type": "boolean"
        },
        "CreatedDate": {
          "format": "date-time",
          "type": "string"
        },
        "Actioned": {
          "type": "boolean"
        },
        "LastActionDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "VerifiedRMAItem": {
      "type": "object",
      "properties": {
        "RMARowId": {
          "format": "int32",
          "description": "A unique identifier for the RMA line",
          "type": "integer"
        },
        "RMAHeaderId": {
          "format": "int32",
          "description": "A unique identifier for the header this RMA line belongs to",
          "type": "integer"
        },
        "Type": {
          "description": "Identifies the type of RMA for this line",
          "enum": [
            "Return",
            "Exchange",
            "Resend"
          ],
          "type": "string"
        },
        "Status": {
          "$ref": "#/definitions/PostSaleStatus",
          "description": "A detailed description of this RMA line's status"
        },
        "ExternalReference": {
          "description": "The channel reference number for this RMA",
          "type": "string"
        },
        "CreatedDate": {
          "format": "date-time",
          "description": "The timestamp for when the RMA was created",
          "type": "string"
        },
        "Actioned": {
          "description": "Line-level indicator of whether the refund has been actioned",
          "type": "boolean"
        },
        "ActionedDate": {
          "format": "date-time",
          "description": "If an RMA has been actioned, this denotes the date it was actioned. For not actioned lines, this value is null",
          "type": "string"
        },
        "Deleted": {
          "description": "Identifies whether the line has been removed from the RMA, and is pending an update to the database to reflect this",
          "type": "boolean"
        },
        "ResendQuantity": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "NewOrderId": {
          "format": "uuid",
          "description": "In the case of an exchange or resend line, this is the identifier for the created order",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ValidationError": {
          "description": "Identifies any validation or submission errors for this RMA item",
          "type": "string"
        },
        "Error": {
          "type": "string"
        },
        "Errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RMAError"
          }
        },
        "Info": {
          "description": "Identifies any validation or submission information for this RMA item",
          "type": "string"
        },
        "ExchangeStockItemId": {
          "format": "uuid",
          "description": "The stock item ID for the item that will replace the returned item",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ExchangeSKU": {
          "description": "Identifies the SKU of the item that will replace the returned item",
          "type": "string"
        },
        "ExchangeTitle": {
          "description": "Identifies the title of the item that will replace the returned item",
          "type": "string"
        },
        "ExchangeQuantity": {
          "format": "int32",
          "description": "The number of this item to send as part of the exchange",
          "type": "integer"
        },
        "DespatchLocationId": {
          "format": "uuid",
          "description": "The identifier for the location to create the exchange order in. This is where the item will have its stock deducted from",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "AdditionalCost": {
          "format": "double",
          "description": "This field denotes the additional cost that will be incurred to the customer for this exchange",
          "type": "number"
        },
        "OrderItemRowId": {
          "format": "uuid",
          "description": "The unique ID of the order item to be returned. Note: This field is ignored when part of an Update call",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ReturnItemSKU": {
          "description": "The SKU of the order item to be returned. Read-only",
          "type": "string"
        },
        "ReturnItemTitle": {
          "description": "The title of the order item to be returned. Read-only",
          "type": "string"
        },
        "BatchInventoryId": {
          "format": "int32",
          "description": "If the item is batched, this identifies the batch inventory row the item will be returned to",
          "type": "integer"
        },
        "ReturnLocation": {
          "format": "uuid",
          "description": "The unique identifier for the Linnworks location to return the item to",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ReturnQuantity": {
          "format": "int32",
          "description": "The amount of the item to be returned",
          "type": "integer"
        },
        "RefundAmount": {
          "format": "double",
          "description": "Where applicable, the amount to refund the customer as part of this RMA",
          "type": "number"
        },
        "RefundRowId": {
          "format": "uuid",
          "description": "Where applicable, the row id for the created refund line associated with this RMA",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ScrapQuantity": {
          "format": "int32",
          "description": "Where applicable, the amount of returned items to be scrapped",
          "type": "integer"
        },
        "ReasonCategory": {
          "description": "The category for the return/exchange reason (e.g. Faulty Item)",
          "type": "string"
        },
        "IsFreeText": {
          "description": "Defines whether the channel RMA reason is being sent as freetext (where supported). Automatically set",
          "type": "boolean",
          "readOnly": true
        },
        "Reason": {
          "description": "A freetext internal reason for the return/exchange",
          "type": "string"
        },
        "ReasonTag": {
          "description": "For channels that support predefined RMA reasons, this is the tag that identifies a predefined reason",
          "type": "string"
        },
        "SubReasonTag": {
          "description": "For channels that support a secondary predefined RMA reason, this is the tag that identifies a predefined secondary reason",
          "type": "string"
        },
        "BinrackOverride": {
          "description": "Used specifically with batch composite parents, this will ensure that all children are returned to the binrack of choice (acts the same as batchinventoryid for single items)",
          "type": "string"
        }
      }
    },
    "RMAError": {
      "type": "object",
      "properties": {
        "RMARowId": {
          "format": "int32",
          "type": "integer"
        },
        "ErrorMessage": {
          "type": "string"
        },
        "DateStamp": {
          "format": "date-time",
          "type": "string"
        },
        "Acknowledged": {
          "type": "boolean"
        }
      }
    },
    "ReturnsRefunds_GetRefundHeadersByOrderIdRequest": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/GetRefundHeadersByOrderIdRequest",
          "description": "The request class for this call"
        }
      }
    },
    "GetRefundHeadersByOrderIdRequest": {
      "type": "object",
      "properties": {
        "OrderId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "GetRefundHeadersByOrderIdResponse": {
      "type": "object",
      "properties": {
        "RefundHeaders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderRefundHeader"
          }
        }
      }
    },
    "ReturnsRefunds_GetRefundLinesByHeaderIdRequest": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/GetRefundLinesByHeaderIdRequest",
          "description": "The request class for this call"
        }
      }
    },
    "GetRefundLinesByHeaderIdRequest": {
      "type": "object",
      "properties": {
        "RefundHeaderId": {
          "format": "int32",
          "description": "The unique identifier for the refund header to load",
          "type": "integer"
        },
        "OrderId": {
          "format": "uuid",
          "description": "The unique identifier for the order this refund pertains to. Used as a safety to ensure the correct refund is being worked with",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "GetRefundLinesByHeaderIdResponse": {
      "type": "object",
      "properties": {
        "RefundHeaderId": {
          "format": "int32",
          "description": "The unique identifier for the loaded refund",
          "type": "integer"
        },
        "RefundLines": {
          "description": "A collection of all refunds associated with the loaded header",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VerifiedRefund"
          }
        },
        "RefundOptions": {
          "$ref": "#/definitions/RefundOptions",
          "description": "Channel-specific information about refund requirements, e.g. accepted refund reasons"
        }
      }
    },
    "ReturnsRefunds_CreateRefundRequest": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/CreateRefundRequest",
          "description": "The request class for this call"
        }
      }
    },
    "CreateRefundRequest": {
      "type": "object",
      "properties": {
        "ChannelInitiated": {
          "description": "Determines whether the refund was initiated on the channel, or within Linnworks",
          "type": "boolean"
        },
        "OrderId": {
          "format": "uuid",
          "description": "The unique identifier for the order this refund is associated with",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "RefundLines": {
          "description": "A collection of line-level refunds detailing the refund as a whole",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NewRefundLine"
          }
        }
      }
    },
    "NewRefundLine": {
      "type": "object",
      "properties": {
        "ReturnRowId": {
          "format": "int32",
          "description": "If the refund line pertains to an existing order return, this field should be populated with the unique identifier for the relevant return line",
          "type": "integer"
        },
        "OrderItemRowId": {
          "format": "uuid",
          "description": "If the refund line pertains to an order item, this field should be populated with the unique identifier of that order item. Can be left null for shipping/additional refunds",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "RefundedUnit": {
          "description": "Identifies the type of refund for this line",
          "enum": [
            "Item",
            "Shipping",
            "Service",
            "Additional"
          ],
          "type": "string"
        },
        "CancelledQuantity": {
          "format": "int32",
          "description": "If the refund is being created as part of a cancellation request, this field denotes the number of the item that were cancelled",
          "type": "integer"
        },
        "ExternalReference": {
          "description": "The channel reference number for this refund",
          "type": "string"
        },
        "IsFreeText": {
          "description": "Identifies whether the refund reason is provided in freetext, or as one of a predefined set of options",
          "type": "boolean",
          "readOnly": true
        },
        "FreeTextOrNote": {
          "description": "For freetext refund reasons, this is the reason that will be sent to the channel. Otherwise, it is considered an internal note",
          "type": "string"
        },
        "Amount": {
          "format": "double",
          "description": "The amount to be refunded for this line",
          "type": "number"
        },
        "Quantity": {
          "format": "int32",
          "description": "Used when the refund is part of a return",
          "type": "integer"
        },
        "ReasonTag": {
          "description": "For channels that support predefined refund reasons, this is the tag that identifies a predefined reason",
          "type": "string"
        },
        "SubReasonTag": {
          "description": "For channels that support a secondary predefined refund reason, this is the tag that identifies a predefined secondary reason",
          "type": "string"
        },
        "InsufficientRefundTag": {
          "description": "For channels that require a reason when the refund is lower than the full line amount, this is the tag that identifies a predefined insufficient refund reason",
          "type": "string"
        },
        "InsufficientRefundNote": {
          "description": "For channels that require a reason when the refund is lower than the full line amount, and support a freetext note, this field populates that note",
          "type": "string"
        },
        "ReasonCategory": {
          "description": "Internal reason category",
          "type": "string"
        }
      }
    },
    "CreateRefundResponse": {
      "type": "object",
      "properties": {
        "RefundHeaderId": {
          "format": "int32",
          "description": "The unique identifier for the refund header.",
          "type": "integer"
        },
        "RefundReference": {
          "description": "An automatically generated string to help identify the refund",
          "type": "string"
        },
        "Status": {
          "$ref": "#/definitions/PostSaleStatus",
          "description": "Identifies the overall state of the refund and its approval on the channel"
        },
        "CannotRefundReason": {
          "description": "If the validation has failed at any stage, this field identifies the cause of the failure",
          "enum": [
            "None",
            "NotImplemented",
            "DisabledInConfig",
            "MissingOrderInLinnworks",
            "OpenOrderInLinnworks",
            "OrderIsFullyRefundedInLinnworks",
            "NoNewRefundsSpecified",
            "NoUpdatedRefundsSpecified",
            "MultipleReferences",
            "SubStatusTagNotInTheSystem",
            "SubStatusTagIsNotActionable",
            "MultipleSubStatusTags",
            "RefundNotInSystem",
            "Other"
          ],
          "type": "string"
        },
        "Errors": {
          "description": "Any global validation errors are added to this list, as well as any errors from the RefundLines collection",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "RefundLines": {
          "description": "A collection of validated line-level refunds, with any applicable errors included",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VerifiedRefund"
          }
        }
      }
    },
    "ReturnsRefunds_UpdateRefundRequest": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/UpdateRefundRequest",
          "description": "The request class for this call"
        }
      }
    },
    "UpdateRefundRequest": {
      "type": "object",
      "properties": {
        "RefundHeaderId": {
          "format": "int32",
          "description": "The identifier for the refund header to update",
          "type": "integer"
        },
        "OrderId": {
          "format": "uuid",
          "description": "The unique identifier for the order the refund lines pertain to",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "RefundLines": {
          "description": "A list of refund lines to update within the given refund",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UpdatedRefundLine"
          }
        }
      }
    },
    "UpdatedRefundLine": {
      "type": "object",
      "properties": {
        "RefundRowId": {
          "format": "uuid",
          "description": "Identifies the refund line",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "RemoveFromRefund": {
          "description": "Determines whether to remove the line from the refund",
          "type": "boolean"
        },
        "ExternalReference": {
          "description": "The channel reference number for this refund",
          "type": "string"
        },
        "IsFreeText": {
          "description": "Identifies whether the refund reason is provided in freetext, or as one of a predefined set of options",
          "type": "boolean",
          "readOnly": true
        },
        "FreeTextOrNote": {
          "description": "For freetext refund reasons, this is the reason that will be sent to the channel. Otherwise, it is considered an internal note",
          "type": "string"
        },
        "Amount": {
          "format": "double",
          "description": "The amount to be refunded for this line",
          "type": "number"
        },
        "Quantity": {
          "format": "int32",
          "description": "Used when the refund is part of a return",
          "type": "integer"
        },
        "ReasonTag": {
          "description": "For channels that support predefined refund reasons, this is the tag that identifies a predefined reason",
          "type": "string"
        },
        "SubReasonTag": {
          "description": "For channels that support a secondary predefined refund reason, this is the tag that identifies a predefined secondary reason",
          "type": "string"
        },
        "InsufficientRefundTag": {
          "description": "For channels that require a reason when the refund is lower than the full line amount, this is the tag that identifies a predefined insufficient refund reason",
          "type": "string"
        },
        "InsufficientRefundNote": {
          "description": "For channels that require a reason when the refund is lower than the full line amount, and support a freetext note, this field populates that note",
          "type": "string"
        },
        "ReasonCategory": {
          "description": "Internal reason category",
          "type": "string"
        }
      }
    },
    "UpdateRefundResponse": {
      "type": "object",
      "properties": {
        "RefundHeaderId": {
          "format": "int32",
          "description": "The unique identifier for the refund header.",
          "type": "integer"
        },
        "RefundReference": {
          "description": "An automatically generated string to help identify the refund",
          "type": "string"
        },
        "Status": {
          "$ref": "#/definitions/PostSaleStatus",
          "description": "Identifies the overall state of the refund and its approval on the channel"
        },
        "CannotRefundReason": {
          "description": "If the validation has failed at any stage, this field identifies the cause of the failure",
          "enum": [
            "None",
            "NotImplemented",
            "DisabledInConfig",
            "MissingOrderInLinnworks",
            "OpenOrderInLinnworks",
            "OrderIsFullyRefundedInLinnworks",
            "NoNewRefundsSpecified",
            "NoUpdatedRefundsSpecified",
            "MultipleReferences",
            "SubStatusTagNotInTheSystem",
            "SubStatusTagIsNotActionable",
            "MultipleSubStatusTags",
            "RefundNotInSystem",
            "Other"
          ],
          "type": "string"
        },
        "Errors": {
          "description": "Any global validation errors are added to this list, as well as any errors from the RefundLines collection",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "RefundLines": {
          "description": "A collection of validated line-level refunds, with any applicable errors included",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VerifiedRefund"
          }
        }
      }
    },
    "ReturnsRefunds_AcknowledgeRefundErrorsRequest": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/AcknowledgeRefundErrorsRequest",
          "description": "The request class for this call"
        }
      }
    },
    "AcknowledgeRefundErrorsRequest": {
      "type": "object",
      "properties": {
        "RefundHeaderId": {
          "format": "int32",
          "description": "The unique identifier for the refund header whose errors will be acknowledged",
          "type": "integer"
        },
        "RefundRowIds": {
          "description": "A list of row ids to acknowledge errors for. Can be left empty when \"AcknowledgeAllErrors\" is set to true",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "AcknowledgeAllErrors": {
          "description": "Ignores the RefundRowIds list and acknowledges all errors for the given refund header id",
          "type": "boolean"
        }
      }
    },
    "AcknowledgeRefundErrorsResponse": {
      "type": "object",
      "properties": {
        "EntireRefundHeaderSetToErrorAcked": {
          "description": "Determines whether the entire refund header was set to \"ERROR_ACKED\" state as a result of this call (will be found in the History tab)",
          "type": "boolean"
        },
        "RefundHeaderId": {
          "format": "int32",
          "description": "The unique identifier for the refund header.",
          "type": "integer"
        },
        "RefundReference": {
          "description": "An automatically generated string to help identify the refund",
          "type": "string"
        },
        "Status": {
          "$ref": "#/definitions/PostSaleStatus",
          "description": "Identifies the overall state of the refund and its approval on the channel"
        },
        "CannotRefundReason": {
          "description": "If the validation has failed at any stage, this field identifies the cause of the failure",
          "enum": [
            "None",
            "NotImplemented",
            "DisabledInConfig",
            "MissingOrderInLinnworks",
            "OpenOrderInLinnworks",
            "OrderIsFullyRefundedInLinnworks",
            "NoNewRefundsSpecified",
            "NoUpdatedRefundsSpecified",
            "MultipleReferences",
            "SubStatusTagNotInTheSystem",
            "SubStatusTagIsNotActionable",
            "MultipleSubStatusTags",
            "RefundNotInSystem",
            "Other"
          ],
          "type": "string"
        },
        "Errors": {
          "description": "Any global validation errors are added to this list, as well as any errors from the RefundLines collection",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "RefundLines": {
          "description": "A collection of validated line-level refunds, with any applicable errors included",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VerifiedRefund"
          }
        }
      }
    },
    "ReturnsRefunds_AcknowledgeRMAErrorsRequest": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/AcknowledgeRMAErrorsRequest",
          "description": "The request class for this call"
        }
      }
    },
    "AcknowledgeRMAErrorsRequest": {
      "type": "object",
      "properties": {
        "RMAHeaderId": {
          "format": "int32",
          "description": "The unique identifier for the RMA header whose errors will be acknowledged",
          "type": "integer"
        },
        "RMARowIds": {
          "description": "A list of row ids to acknowledge errors for",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "AcknowledgeAllErrors": {
          "description": "Ignores the RefundRowIds list and acknowledges all errors for the given rma header id",
          "type": "boolean"
        }
      }
    },
    "AcknowledgeRMAErrorsResponse": {
      "type": "object",
      "properties": {
        "EntireRMAHeaderSetToErrorAcked": {
          "description": "Determines whether the entire RMA header was set to \"ERROR_ACKED\" state as a result of this call (will be found in the History tab)",
          "type": "boolean"
        },
        "RMAHeaderId": {
          "format": "int32",
          "description": "An identifier for the RMA request header being worked with. Newly created RMA headers will have this field populated as part of the \"Create\" request",
          "type": "integer"
        },
        "Items": {
          "description": "A collection of verified and validated items that have been added to this RMA request",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VerifiedRMAItem"
          }
        },
        "Errors": {
          "description": "Any global validation errors are included in this collection, along with a concatenation of any errors found in an individual item",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Info": {
          "description": "Any global validation information is included in this collection, along with a concatenation of any information found in an individual item",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ReturnsRefunds_ActionRefundRequest": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/ActionRefundRequest",
          "description": "The request class for this call"
        }
      }
    },
    "ActionRefundRequest": {
      "type": "object",
      "properties": {
        "RefundHeaderId": {
          "format": "int32",
          "description": "The unique identifier for the refund header to action",
          "type": "integer"
        },
        "OrderId": {
          "format": "uuid",
          "description": "The order ID this refund header pertains to. Used as a double-step verification to ensure the right refund header is being actioned",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Request": {
          "$ref": "#/definitions/ActionForm",
          "description": "When actioning a refund beyond the initial approval, the channel may require additional information, which can be passed via this field. Not required"
        }
      }
    },
    "ActionForm": {
      "type": "object",
      "properties": {
        "caption": {
          "type": "string"
        },
        "controls": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ActionFormControl"
          }
        }
      }
    },
    "ActionFormControl": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "caption": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "group": {
          "type": "string"
        }
      }
    },
    "ActionRefundResponse": {
      "type": "object",
      "properties": {
        "SuccessfullyActioned": {
          "description": "Determines whether the header was marked as actioned in the database",
          "type": "boolean"
        },
        "RefundHeaderId": {
          "format": "int32",
          "description": "The unique identifier for the refund header.",
          "type": "integer"
        },
        "RefundReference": {
          "description": "An automatically generated string to help identify the refund",
          "type": "string"
        },
        "Status": {
          "$ref": "#/definitions/PostSaleStatus",
          "description": "Identifies the overall state of the refund and its approval on the channel"
        },
        "CannotRefundReason": {
          "description": "If the validation has failed at any stage, this field identifies the cause of the failure",
          "enum": [
            "None",
            "NotImplemented",
            "DisabledInConfig",
            "MissingOrderInLinnworks",
            "OpenOrderInLinnworks",
            "OrderIsFullyRefundedInLinnworks",
            "NoNewRefundsSpecified",
            "NoUpdatedRefundsSpecified",
            "MultipleReferences",
            "SubStatusTagNotInTheSystem",
            "SubStatusTagIsNotActionable",
            "MultipleSubStatusTags",
            "RefundNotInSystem",
            "Other"
          ],
          "type": "string"
        },
        "Errors": {
          "description": "Any global validation errors are added to this list, as well as any errors from the RefundLines collection",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "RefundLines": {
          "description": "A collection of validated line-level refunds, with any applicable errors included",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VerifiedRefund"
          }
        }
      }
    },
    "ReturnsRefunds_DeleteRefundRequest": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/DeleteRefundRequest",
          "description": "The request class for this call"
        }
      }
    },
    "DeleteRefundRequest": {
      "type": "object",
      "properties": {
        "RefundHeaderId": {
          "format": "int32",
          "description": "Identifies the refund header to be deleted",
          "type": "integer"
        },
        "ReasonTag": {
          "description": "Reason for deleting the refund. Channel Dependant",
          "type": "string"
        },
        "RejectOnChannel": {
          "description": "Bool to say whether rejection note should be sent to the channel",
          "type": "boolean"
        }
      }
    },
    "DeleteRefundResponse": {
      "type": "object",
      "properties": {}
    },
    "ReturnsRefunds_DeleteRMARequest": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/DeleteRMARequest",
          "description": "The request class for this call"
        }
      }
    },
    "DeleteRMARequest": {
      "type": "object",
      "properties": {
        "RMAHeaderId": {
          "format": "int32",
          "description": "Identifies the RMA header to be deleted",
          "type": "integer"
        },
        "ReasonTag": {
          "description": "Reason for deleting the RMA. Channel Dependant",
          "type": "string"
        },
        "RejectOnChannel": {
          "description": "Bool to say whether rejection note should be sent to the channel",
          "type": "boolean"
        }
      }
    },
    "DeleteRMAResponse": {
      "type": "object",
      "properties": {}
    },
    "ReturnsRefunds_GetReturnOptionsRequest": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/GetReturnOptionsRequest",
          "description": "The request class for this call"
        }
      }
    },
    "GetReturnOptionsRequest": {
      "type": "object",
      "properties": {
        "OrderId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "RMAHeaderId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "GetReturnOptionsResponse": {
      "type": "object",
      "properties": {
        "ReturnOptions": {
          "$ref": "#/definitions/ReturnOptions"
        }
      }
    },
    "ReturnOptions": {
      "type": "object",
      "properties": {
        "CanSendRejectionIfDeleted": {
          "type": "boolean"
        },
        "CanReturn": {
          "type": "boolean",
          "readOnly": true
        },
        "CanReturnInternally": {
          "type": "boolean",
          "readOnly": true
        },
        "MustHaveRefund": {
          "type": "boolean",
          "readOnly": true
        },
        "RefundAutoPopulated": {
          "type": "boolean",
          "readOnly": true
        },
        "CanHaveRefund": {
          "type": "boolean",
          "readOnly": true
        },
        "ReturnReasons": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChannelReason"
          },
          "readOnly": true
        },
        "RejectionReasons": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChannelReason"
          }
        },
        "SubStatuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PostSaleSubStatus"
          },
          "readOnly": true
        },
        "RefundOptions": {
          "$ref": "#/definitions/RefundOptions"
        },
        "CannotReturnReason": {
          "enum": [
            "None",
            "NotImplemented",
            "DisabledInConfig",
            "MissingOrderInLinnworks",
            "OpenOrderInLinnworks",
            "AlreadyReturnedOnChannel",
            "AlreadyReturnedInLinnworks",
            "NoNewRMAsSpecified",
            "SubStatusTagNotInTheSystem",
            "SubStatusTagIsNotActionable",
            "MultipleSubStatusTags",
            "Other"
          ],
          "type": "string"
        },
        "Order": {
          "$ref": "#/definitions/OrderDetails",
          "readOnly": true
        },
        "RMAHeader": {
          "$ref": "#/definitions/OrderRMAHeader"
        },
        "AllExistingRMAs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VerifiedRMAItem"
          },
          "readOnly": true
        },
        "Errors": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "Info": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "ReturnsRefunds_GetActionableRMAHeadersRequest": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/GetActionableRMAHeadersRequest",
          "description": "The request class for this call"
        }
      }
    },
    "GetActionableRMAHeadersRequest": {
      "type": "object",
      "properties": {
        "Page": {
          "format": "int32",
          "description": "The page number to return for a given set of filters",
          "type": "integer"
        },
        "Filters": {
          "$ref": "#/definitions/ActionablePostSaleSearchFilters",
          "description": "A set of filters to restrict the RMA headers output by the call"
        }
      }
    },
    "GetActionableRMAHeadersResponse": {
      "type": "object",
      "properties": {
        "Page": {
          "format": "int32",
          "description": "The page number returned",
          "type": "integer"
        },
        "TotalHeaders": {
          "format": "int32",
          "description": "A count of the total number of RMA headers matching the filter set by the request",
          "type": "integer"
        },
        "HeadersPerPage": {
          "format": "int32",
          "description": "A count of the number of RMA headers returned per page",
          "type": "integer"
        },
        "RMAHeaders": {
          "description": "A collection of RMA headers matching the filter set by the request",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderRMAHeader"
          }
        }
      }
    },
    "ReturnsRefunds_GetProcessedOrAckedErrorRMAHeadersRequest": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/GetProcessedOrAckedErrorRMAHeadersRequest",
          "description": "The request class for this call"
        }
      }
    },
    "GetProcessedOrAckedErrorRMAHeadersRequest": {
      "type": "object",
      "properties": {
        "Page": {
          "format": "int32",
          "description": "The page number to return for a given set of filters",
          "type": "integer"
        },
        "Filters": {
          "$ref": "#/definitions/ProcessedPostSaleSearchFilters",
          "description": "A set of filters to restrict the refund headers output by the call"
        }
      }
    },
    "GetProcessedOrAckedErrorRMAHeadersResponse": {
      "type": "object",
      "properties": {
        "Page": {
          "format": "int32",
          "description": "The page number returned",
          "type": "integer"
        },
        "TotalHeaders": {
          "format": "int32",
          "description": "A count of the total number of RMA headers matching the filter set by the request",
          "type": "integer"
        },
        "HeadersPerPage": {
          "format": "int32",
          "description": "A count of the number of RMA headers returned per page",
          "type": "integer"
        },
        "RMAHeaders": {
          "description": "A collection of RMA headers matching the filter set by the request",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderRMAHeader"
          }
        }
      }
    },
    "ReturnsRefunds_CreateRMABookingRequest": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/CreateRMABookingRequest",
          "description": "The request class for this call"
        }
      }
    },
    "CreateRMABookingRequest": {
      "type": "object",
      "properties": {
        "ChannelInitiated": {
          "description": "Determines whether the RMA request was initiated on the channel, or within Linnworks",
          "type": "boolean"
        },
        "OrderId": {
          "format": "uuid",
          "description": "The unique identifier for the order a return booking is being created for",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ReturnItems": {
          "description": "A collection of items to be returned as part of this booking",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReturnItem"
          }
        },
        "ExchangeItems": {
          "description": "A collection of items to be exchanged as part of this booking",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangeItem"
          }
        },
        "ResendItems": {
          "description": "A collection of items to be resent as part of this booking",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResendItem"
          }
        },
        "Reference": {
          "description": "(Optional) If provided, sets the External Reference of the RMA header to the provided value. Otherwise, this value is automatically generated",
          "type": "string"
        }
      }
    },
    "ReturnItem": {
      "type": "object",
      "properties": {
        "OrderItemRowId": {
          "format": "uuid",
          "description": "The unique ID of the order item to be returned. Note: This field is ignored when part of an Update call",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ReturnItemSKU": {
          "description": "The SKU of the order item to be returned. Read-only",
          "type": "string"
        },
        "ReturnItemTitle": {
          "description": "The title of the order item to be returned. Read-only",
          "type": "string"
        },
        "BatchInventoryId": {
          "format": "int32",
          "description": "If the item is batched, this identifies the batch inventory row the item will be returned to",
          "type": "integer"
        },
        "ReturnLocation": {
          "format": "uuid",
          "description": "The unique identifier for the Linnworks location to return the item to",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ReturnQuantity": {
          "format": "int32",
          "description": "The amount of the item to be returned",
          "type": "integer"
        },
        "RefundAmount": {
          "format": "double",
          "description": "Where applicable, the amount to refund the customer as part of this RMA",
          "type": "number"
        },
        "RefundRowId": {
          "format": "uuid",
          "description": "Where applicable, the row id for the created refund line associated with this RMA",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ScrapQuantity": {
          "format": "int32",
          "description": "Where applicable, the amount of returned items to be scrapped",
          "type": "integer"
        },
        "ReasonCategory": {
          "description": "The category for the return/exchange reason (e.g. Faulty Item)",
          "type": "string"
        },
        "IsFreeText": {
          "description": "Defines whether the channel RMA reason is being sent as freetext (where supported). Automatically set",
          "type": "boolean",
          "readOnly": true
        },
        "Reason": {
          "description": "A freetext internal reason for the return/exchange",
          "type": "string"
        },
        "ReasonTag": {
          "description": "For channels that support predefined RMA reasons, this is the tag that identifies a predefined reason",
          "type": "string"
        },
        "SubReasonTag": {
          "description": "For channels that support a secondary predefined RMA reason, this is the tag that identifies a predefined secondary reason",
          "type": "string"
        },
        "Status": {
          "$ref": "#/definitions/PostSaleStatus",
          "description": "A detailed description of this RMA line's status"
        },
        "BinrackOverride": {
          "description": "Used specifically with batch composite parents, this will ensure that all children are returned to the binrack of choice (acts the same as batchinventoryid for single items)",
          "type": "string"
        }
      }
    },
    "ExchangeItem": {
      "type": "object",
      "properties": {
        "ExchangeStockItemId": {
          "format": "uuid",
          "description": "The stock item ID for the item that will replace the returned item",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ExchangeSKU": {
          "description": "Identifies the SKU of the item that will replace the returned item",
          "type": "string"
        },
        "ExchangeTitle": {
          "description": "Identifies the title of the item that will replace the returned item",
          "type": "string"
        },
        "ExchangeQuantity": {
          "format": "int32",
          "description": "The number of this item to send as part of the exchange",
          "type": "integer"
        },
        "DespatchLocationId": {
          "format": "uuid",
          "description": "The identifier for the location to create the exchange order in. This is where the item will have its stock deducted from",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "AdditionalCost": {
          "format": "double",
          "description": "This field denotes the additional cost that will be incurred to the customer for this exchange",
          "type": "number"
        },
        "OrderItemRowId": {
          "format": "uuid",
          "description": "The unique ID of the order item to be returned. Note: This field is ignored when part of an Update call",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ReturnItemSKU": {
          "description": "The SKU of the order item to be returned. Read-only",
          "type": "string"
        },
        "ReturnItemTitle": {
          "description": "The title of the order item to be returned. Read-only",
          "type": "string"
        },
        "BatchInventoryId": {
          "format": "int32",
          "description": "If the item is batched, this identifies the batch inventory row the item will be returned to",
          "type": "integer"
        },
        "ReturnLocation": {
          "format": "uuid",
          "description": "The unique identifier for the Linnworks location to return the item to",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ReturnQuantity": {
          "format": "int32",
          "description": "The amount of the item to be returned",
          "type": "integer"
        },
        "RefundAmount": {
          "format": "double",
          "description": "Where applicable, the amount to refund the customer as part of this RMA",
          "type": "number"
        },
        "RefundRowId": {
          "format": "uuid",
          "description": "Where applicable, the row id for the created refund line associated with this RMA",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ScrapQuantity": {
          "format": "int32",
          "description": "Where applicable, the amount of returned items to be scrapped",
          "type": "integer"
        },
        "ReasonCategory": {
          "description": "The category for the return/exchange reason (e.g. Faulty Item)",
          "type": "string"
        },
        "IsFreeText": {
          "description": "Defines whether the channel RMA reason is being sent as freetext (where supported). Automatically set",
          "type": "boolean",
          "readOnly": true
        },
        "Reason": {
          "description": "A freetext internal reason for the return/exchange",
          "type": "string"
        },
        "ReasonTag": {
          "description": "For channels that support predefined RMA reasons, this is the tag that identifies a predefined reason",
          "type": "string"
        },
        "SubReasonTag": {
          "description": "For channels that support a secondary predefined RMA reason, this is the tag that identifies a predefined secondary reason",
          "type": "string"
        },
        "Status": {
          "$ref": "#/definitions/PostSaleStatus",
          "description": "A detailed description of this RMA line's status"
        },
        "BinrackOverride": {
          "description": "Used specifically with batch composite parents, this will ensure that all children are returned to the binrack of choice (acts the same as batchinventoryid for single items)",
          "type": "string"
        }
      }
    },
    "ResendItem": {
      "type": "object",
      "properties": {
        "ResendQuantity": {
          "format": "int32",
          "description": "The quantity of the selected item to resend",
          "type": "integer"
        },
        "DespatchLocationId": {
          "format": "uuid",
          "description": "The identifier for the location to create the resend order in. This is where the item will have its stock deducted from",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "AdditionalCost": {
          "format": "double",
          "description": "This field denotes the additional cost that will be incurred to the customer for this resend",
          "type": "number"
        },
        "OrderItemRowId": {
          "format": "uuid",
          "description": "The unique ID of the order item to be returned. Note: This field is ignored when part of an Update call",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ReturnItemSKU": {
          "description": "The SKU of the order item to be returned. Read-only",
          "type": "string"
        },
        "ReturnItemTitle": {
          "description": "The title of the order item to be returned. Read-only",
          "type": "string"
        },
        "BatchInventoryId": {
          "format": "int32",
          "description": "If the item is batched, this identifies the batch inventory row the item will be returned to",
          "type": "integer"
        },
        "ReturnLocation": {
          "format": "uuid",
          "description": "The unique identifier for the Linnworks location to return the item to",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ReturnQuantity": {
          "format": "int32",
          "description": "The amount of the item to be returned",
          "type": "integer"
        },
        "RefundAmount": {
          "format": "double",
          "description": "Where applicable, the amount to refund the customer as part of this RMA",
          "type": "number"
        },
        "RefundRowId": {
          "format": "uuid",
          "description": "Where applicable, the row id for the created refund line associated with this RMA",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ScrapQuantity": {
          "format": "int32",
          "description": "Where applicable, the amount of returned items to be scrapped",
          "type": "integer"
        },
        "ReasonCategory": {
          "description": "The category for the return/exchange reason (e.g. Faulty Item)",
          "type": "string"
        },
        "IsFreeText": {
          "description": "Defines whether the channel RMA reason is being sent as freetext (where supported). Automatically set",
          "type": "boolean",
          "readOnly": true
        },
        "Reason": {
          "description": "A freetext internal reason for the return/exchange",
          "type": "string"
        },
        "ReasonTag": {
          "description": "For channels that support predefined RMA reasons, this is the tag that identifies a predefined reason",
          "type": "string"
        },
        "SubReasonTag": {
          "description": "For channels that support a secondary predefined RMA reason, this is the tag that identifies a predefined secondary reason",
          "type": "string"
        },
        "Status": {
          "$ref": "#/definitions/PostSaleStatus",
          "description": "A detailed description of this RMA line's status"
        },
        "BinrackOverride": {
          "description": "Used specifically with batch composite parents, this will ensure that all children are returned to the binrack of choice (acts the same as batchinventoryid for single items)",
          "type": "string"
        }
      }
    },
    "CreateRMABookingResponse": {
      "type": "object",
      "properties": {
        "RMAHeaderId": {
          "format": "int32",
          "description": "An identifier for the RMA request header being worked with. Newly created RMA headers will have this field populated as part of the \"Create\" request",
          "type": "integer"
        },
        "Items": {
          "description": "A collection of verified and validated items that have been added to this RMA request",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VerifiedRMAItem"
          }
        },
        "Errors": {
          "description": "Any global validation errors are included in this collection, along with a concatenation of any errors found in an individual item",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Info": {
          "description": "Any global validation information is included in this collection, along with a concatenation of any information found in an individual item",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ReturnsRefunds_UpdateRMABookingRequest": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/UpdateRMABookingRequest",
          "description": "The request class for this call"
        }
      }
    },
    "UpdateRMABookingRequest": {
      "type": "object",
      "properties": {
        "OrderId": {
          "format": "uuid",
          "description": "The unique identifier for the order the return lines pertain to",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "RMAHeaderId": {
          "format": "int32",
          "description": "The unique identifier for the RMA header to update",
          "type": "integer"
        },
        "ReturnItems": {
          "description": "A collection of updated return items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UpdatedReturnItem"
          }
        },
        "ExchangeItems": {
          "description": "A collection of updated exchange items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UpdatedExchangeItem"
          }
        },
        "ResendItems": {
          "description": "A collection of updated resend items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UpdatedResendItem"
          }
        },
        "AllowCreationOfNewOrder": {
          "description": "If an existing RMA order has been deleted or cancelled, this flag determines whether a new one should be created, or an error should be returned",
          "type": "boolean"
        }
      }
    },
    "UpdatedReturnItem": {
      "type": "object",
      "properties": {
        "RMARowId": {
          "format": "int32",
          "description": "The RMA row identifier for this line",
          "type": "integer"
        },
        "RemoveFromBooking": {
          "description": "If set to true, will remove the line from the booking",
          "type": "boolean"
        },
        "OrderItemRowId": {
          "format": "uuid",
          "description": "The unique ID of the order item to be returned. Note: This field is ignored when part of an Update call",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ReturnItemSKU": {
          "description": "The SKU of the order item to be returned. Read-only",
          "type": "string"
        },
        "ReturnItemTitle": {
          "description": "The title of the order item to be returned. Read-only",
          "type": "string"
        },
        "BatchInventoryId": {
          "format": "int32",
          "description": "If the item is batched, this identifies the batch inventory row the item will be returned to",
          "type": "integer"
        },
        "ReturnLocation": {
          "format": "uuid",
          "description": "The unique identifier for the Linnworks location to return the item to",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ReturnQuantity": {
          "format": "int32",
          "description": "The amount of the item to be returned",
          "type": "integer"
        },
        "RefundAmount": {
          "format": "double",
          "description": "Where applicable, the amount to refund the customer as part of this RMA",
          "type": "number"
        },
        "RefundRowId": {
          "format": "uuid",
          "description": "Where applicable, the row id for the created refund line associated with this RMA",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ScrapQuantity": {
          "format": "int32",
          "description": "Where applicable, the amount of returned items to be scrapped",
          "type": "integer"
        },
        "ReasonCategory": {
          "description": "The category for the return/exchange reason (e.g. Faulty Item)",
          "type": "string"
        },
        "IsFreeText": {
          "description": "Defines whether the channel RMA reason is being sent as freetext (where supported). Automatically set",
          "type": "boolean",
          "readOnly": true
        },
        "Reason": {
          "description": "A freetext internal reason for the return/exchange",
          "type": "string"
        },
        "ReasonTag": {
          "description": "For channels that support predefined RMA reasons, this is the tag that identifies a predefined reason",
          "type": "string"
        },
        "SubReasonTag": {
          "description": "For channels that support a secondary predefined RMA reason, this is the tag that identifies a predefined secondary reason",
          "type": "string"
        },
        "Status": {
          "$ref": "#/definitions/PostSaleStatus",
          "description": "A detailed description of this RMA line's status"
        },
        "BinrackOverride": {
          "description": "Used specifically with batch composite parents, this will ensure that all children are returned to the binrack of choice (acts the same as batchinventoryid for single items)",
          "type": "string"
        }
      }
    },
    "UpdatedExchangeItem": {
      "type": "object",
      "properties": {
        "RMARowId": {
          "format": "int32",
          "description": "The RMA row identifier for this line",
          "type": "integer"
        },
        "RemoveFromBooking": {
          "description": "If set to true, will remove the line from the booking",
          "type": "boolean"
        },
        "ExchangeStockItemId": {
          "format": "uuid",
          "description": "The stock item ID for the item that will replace the returned item",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ExchangeSKU": {
          "description": "Identifies the SKU of the item that will replace the returned item",
          "type": "string"
        },
        "ExchangeTitle": {
          "description": "Identifies the title of the item that will replace the returned item",
          "type": "string"
        },
        "ExchangeQuantity": {
          "format": "int32",
          "description": "The number of this item to send as part of the exchange",
          "type": "integer"
        },
        "DespatchLocationId": {
          "format": "uuid",
          "description": "The identifier for the location to create the exchange order in. This is where the item will have its stock deducted from",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "AdditionalCost": {
          "format": "double",
          "description": "This field denotes the additional cost that will be incurred to the customer for this exchange",
          "type": "number"
        },
        "OrderItemRowId": {
          "format": "uuid",
          "description": "The unique ID of the order item to be returned. Note: This field is ignored when part of an Update call",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ReturnItemSKU": {
          "description": "The SKU of the order item to be returned. Read-only",
          "type": "string"
        },
        "ReturnItemTitle": {
          "description": "The title of the order item to be returned. Read-only",
          "type": "string"
        },
        "BatchInventoryId": {
          "format": "int32",
          "description": "If the item is batched, this identifies the batch inventory row the item will be returned to",
          "type": "integer"
        },
        "ReturnLocation": {
          "format": "uuid",
          "description": "The unique identifier for the Linnworks location to return the item to",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ReturnQuantity": {
          "format": "int32",
          "description": "The amount of the item to be returned",
          "type": "integer"
        },
        "RefundAmount": {
          "format": "double",
          "description": "Where applicable, the amount to refund the customer as part of this RMA",
          "type": "number"
        },
        "RefundRowId": {
          "format": "uuid",
          "description": "Where applicable, the row id for the created refund line associated with this RMA",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ScrapQuantity": {
          "format": "int32",
          "description": "Where applicable, the amount of returned items to be scrapped",
          "type": "integer"
        },
        "ReasonCategory": {
          "description": "The category for the return/exchange reason (e.g. Faulty Item)",
          "type": "string"
        },
        "IsFreeText": {
          "description": "Defines whether the channel RMA reason is being sent as freetext (where supported). Automatically set",
          "type": "boolean",
          "readOnly": true
        },
        "Reason": {
          "description": "A freetext internal reason for the return/exchange",
          "type": "string"
        },
        "ReasonTag": {
          "description": "For channels that support predefined RMA reasons, this is the tag that identifies a predefined reason",
          "type": "string"
        },
        "SubReasonTag": {
          "description": "For channels that support a secondary predefined RMA reason, this is the tag that identifies a predefined secondary reason",
          "type": "string"
        },
        "Status": {
          "$ref": "#/definitions/PostSaleStatus",
          "description": "A detailed description of this RMA line's status"
        },
        "BinrackOverride": {
          "description": "Used specifically with batch composite parents, this will ensure that all children are returned to the binrack of choice (acts the same as batchinventoryid for single items)",
          "type": "string"
        }
      }
    },
    "UpdatedResendItem": {
      "type": "object",
      "properties": {
        "RMARowId": {
          "format": "int32",
          "description": "The RMA row identifier for this line",
          "type": "integer"
        },
        "RemoveFromBooking": {
          "description": "If set to true, will remove the line from the booking",
          "type": "boolean"
        },
        "ResendQuantity": {
          "format": "int32",
          "description": "The quantity of the selected item to resend",
          "type": "integer"
        },
        "DespatchLocationId": {
          "format": "uuid",
          "description": "The identifier for the location to create the resend order in. This is where the item will have its stock deducted from",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "AdditionalCost": {
          "format": "double",
          "description": "This field denotes the additional cost that will be incurred to the customer for this resend",
          "type": "number"
        },
        "OrderItemRowId": {
          "format": "uuid",
          "description": "The unique ID of the order item to be returned. Note: This field is ignored when part of an Update call",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ReturnItemSKU": {
          "description": "The SKU of the order item to be returned. Read-only",
          "type": "string"
        },
        "ReturnItemTitle": {
          "description": "The title of the order item to be returned. Read-only",
          "type": "string"
        },
        "BatchInventoryId": {
          "format": "int32",
          "description": "If the item is batched, this identifies the batch inventory row the item will be returned to",
          "type": "integer"
        },
        "ReturnLocation": {
          "format": "uuid",
          "description": "The unique identifier for the Linnworks location to return the item to",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ReturnQuantity": {
          "format": "int32",
          "description": "The amount of the item to be returned",
          "type": "integer"
        },
        "RefundAmount": {
          "format": "double",
          "description": "Where applicable, the amount to refund the customer as part of this RMA",
          "type": "number"
        },
        "RefundRowId": {
          "format": "uuid",
          "description": "Where applicable, the row id for the created refund line associated with this RMA",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ScrapQuantity": {
          "format": "int32",
          "description": "Where applicable, the amount of returned items to be scrapped",
          "type": "integer"
        },
        "ReasonCategory": {
          "description": "The category for the return/exchange reason (e.g. Faulty Item)",
          "type": "string"
        },
        "IsFreeText": {
          "description": "Defines whether the channel RMA reason is being sent as freetext (where supported). Automatically set",
          "type": "boolean",
          "readOnly": true
        },
        "Reason": {
          "description": "A freetext internal reason for the return/exchange",
          "type": "string"
        },
        "ReasonTag": {
          "description": "For channels that support predefined RMA reasons, this is the tag that identifies a predefined reason",
          "type": "string"
        },
        "SubReasonTag": {
          "description": "For channels that support a secondary predefined RMA reason, this is the tag that identifies a predefined secondary reason",
          "type": "string"
        },
        "Status": {
          "$ref": "#/definitions/PostSaleStatus",
          "description": "A detailed description of this RMA line's status"
        },
        "BinrackOverride": {
          "description": "Used specifically with batch composite parents, this will ensure that all children are returned to the binrack of choice (acts the same as batchinventoryid for single items)",
          "type": "string"
        }
      }
    },
    "UpdateRMABookingResponse": {
      "type": "object",
      "properties": {
        "RMAHeaderId": {
          "format": "int32",
          "description": "An identifier for the RMA request header being worked with. Newly created RMA headers will have this field populated as part of the \"Create\" request",
          "type": "integer"
        },
        "Items": {
          "description": "A collection of verified and validated items that have been added to this RMA request",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VerifiedRMAItem"
          }
        },
        "Errors": {
          "description": "Any global validation errors are included in this collection, along with a concatenation of any errors found in an individual item",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Info": {
          "description": "Any global validation information is included in this collection, along with a concatenation of any information found in an individual item",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ReturnsRefunds_ActionRMABookingRequest": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/ActionRMABookingRequest",
          "description": "The request class for this call"
        }
      }
    },
    "ActionRMABookingRequest": {
      "type": "object",
      "properties": {
        "RMAHeaderId": {
          "format": "int32",
          "description": "The unique identifier for the RMA header to action",
          "type": "integer"
        },
        "OrderId": {
          "format": "uuid",
          "description": "The order ID this RMA header pertains to. Used as a double-step verification to ensure the right RMA header is being actioned",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Request": {
          "$ref": "#/definitions/ActionForm",
          "description": "When actioning an RMA beyond the initial approval, the channel may require additional information, which can be passed via this field. Not required"
        }
      }
    },
    "ActionRMABookingResponse": {
      "type": "object",
      "properties": {
        "RefundHeaderId": {
          "format": "int32",
          "description": "If a refund was created as part of accepting the return/exchange booking, this identifies the created header",
          "type": "integer"
        },
        "Status": {
          "$ref": "#/definitions/PostSaleStatus",
          "description": "For the header that was actioned, returns its status"
        },
        "SuccessfullyActioned": {
          "description": "Determines whether the header was marked as actioned in the database",
          "type": "boolean"
        },
        "RMAHeaderId": {
          "format": "int32",
          "description": "An identifier for the RMA request header being worked with. Newly created RMA headers will have this field populated as part of the \"Create\" request",
          "type": "integer"
        },
        "Items": {
          "description": "A collection of verified and validated items that have been added to this RMA request",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VerifiedRMAItem"
          }
        },
        "Errors": {
          "description": "Any global validation errors are included in this collection, along with a concatenation of any errors found in an individual item",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Info": {
          "description": "Any global validation information is included in this collection, along with a concatenation of any information found in an individual item",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "RefundOrder": {
      "type": "object",
      "properties": {
        "pkOrderID": {
          "format": "uuid",
          "description": "Order ID (unique order identifier)",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "nOrderId": {
          "format": "int32",
          "description": "Linnworks order ID",
          "type": "integer"
        },
        "cFullName": {
          "description": "Customer name",
          "type": "string"
        },
        "Source": {
          "description": "ChannelName/Source (e.g. AMAZON)",
          "type": "string"
        },
        "SubSource": {
          "type": "string"
        },
        "Amount": {
          "format": "double",
          "description": "Refund amount",
          "type": "number"
        },
        "IssueRefundUrl": {
          "description": "Refund URL",
          "type": "string"
        },
        "cCurrency": {
          "description": "Refund currency",
          "type": "string"
        },
        "ReferenceNum": {
          "description": "Order reference number",
          "type": "string"
        },
        "SecondaryReference": {
          "description": "Order secondary reference number",
          "type": "string"
        },
        "RefundReference": {
          "description": "Refund reference number",
          "type": "string"
        },
        "RefundDate": {
          "format": "date-time",
          "description": "Date when refund were made",
          "type": "string"
        },
        "SubTotal": {
          "format": "double",
          "type": "number"
        },
        "Total": {
          "format": "double",
          "type": "number"
        },
        "TaxRate": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "BookedReturnsExchangeOrder": {
      "type": "object",
      "properties": {
        "pkOrderID": {
          "format": "uuid",
          "description": "Order ID (unique order identifier)",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "nOrderId": {
          "format": "int32",
          "description": "Linnworks order number",
          "type": "integer"
        },
        "ReferenceNum": {
          "description": "Order reference number",
          "type": "string"
        },
        "SecondaryReference": {
          "description": "Order seconary reference (Comes from the channel)",
          "type": "string"
        },
        "cFullName": {
          "description": "Customer full name",
          "type": "string"
        },
        "ReturnDate": {
          "format": "date-time",
          "description": "Return date time",
          "type": "string"
        }
      }
    },
    "ReturnsRefunds_DeleteBookedOrderRequest": {
      "type": "object",
      "properties": {
        "pkOrderId": {
          "format": "uuid",
          "description": "unique ID of the order",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "ReturnsRefunds_ActionBookedOrderRequest": {
      "type": "object",
      "properties": {
        "pkOrderId": {
          "format": "uuid",
          "description": "unique ID of the order",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "bookedItems": {
          "description": "list of returns/exchange items to be actioned",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BookedReturnsExchangeItem"
          }
        }
      }
    },
    "BookedReturnsExchangeItem": {
      "type": "object",
      "properties": {
        "fkOrderItemRowId": {
          "format": "uuid",
          "description": "Order item record row ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "OrderItemBatchId": {
          "format": "int32",
          "description": "Order item batch id",
          "type": "integer"
        },
        "StockItemId": {
          "format": "uuid",
          "description": "Stock Item Id",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "BatchInventoryId": {
          "format": "int32",
          "description": "Batch Inventory Id",
          "type": "integer"
        },
        "BatchNumber": {
          "description": "Batch number",
          "type": "string"
        },
        "RowType": {
          "description": "Record type",
          "type": "string"
        },
        "SKU": {
          "description": "Product SKU",
          "type": "string"
        },
        "ItemTitle": {
          "description": "Product title",
          "type": "string"
        },
        "ReturnQty": {
          "format": "int32",
          "description": "Return quantity",
          "type": "integer"
        },
        "MaxReturnQty": {
          "format": "int32",
          "description": "Maximum returned quantity",
          "type": "integer"
        },
        "NewQty": {
          "format": "int32",
          "description": "New quantity after return",
          "type": "integer"
        },
        "NewSKU": {
          "description": "New product SKU after return",
          "type": "string"
        },
        "NewTitle": {
          "description": "New product title after return",
          "type": "string"
        },
        "fkNewStockItemId": {
          "format": "uuid",
          "description": "New returned stock item ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Category": {
          "description": "Product category",
          "type": "string"
        },
        "Reason": {
          "description": "Return result",
          "type": "string"
        },
        "fkReturnLocationId": {
          "format": "uuid",
          "description": "In which location item was returned (Location ID)",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ReturnLocation": {
          "description": "In which location item was returned (Location name)",
          "type": "string"
        },
        "PendingRefundAmount": {
          "format": "double",
          "description": "Refund amount still pending",
          "type": "number"
        },
        "Scrapped": {
          "description": "If return scraped",
          "type": "boolean"
        },
        "ScrapQty": {
          "format": "int32",
          "description": "Scraped quantity",
          "type": "integer"
        },
        "ParentOrderItemRowId": {
          "format": "uuid",
          "description": "Parent prder item record row ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "AdditionalCost": {
          "format": "double",
          "description": "Additional cost value",
          "type": "number"
        },
        "cCurrency": {
          "description": "Currency",
          "type": "string"
        },
        "pkReturnId": {
          "format": "int32",
          "description": "Return ID",
          "type": "integer"
        },
        "ChannelReason": {
          "description": "Channel return ID",
          "type": "string"
        },
        "ChannelReasonSec": {
          "description": "Channel secondary reason ID",
          "type": "string"
        },
        "ReturnDate": {
          "format": "date-time",
          "description": "When return was made",
          "type": "string"
        },
        "DespatchUnitValue": {
          "format": "double",
          "description": "Unit value of item at time of despatch",
          "type": "number"
        },
        "BatchInventory": {
          "$ref": "#/definitions/StockItemBatchInventory",
          "description": "The batch inventory selected"
        }
      }
    },
    "StockItemBatchInventory": {
      "type": "object",
      "properties": {
        "BatchInventoryId": {
          "format": "int32",
          "description": "Stock item batch record ID",
          "type": "integer"
        },
        "BatchId": {
          "format": "int32",
          "description": "Batch ID",
          "type": "integer"
        },
        "StockLocationId": {
          "format": "uuid",
          "description": "Location ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "BinRack": {
          "description": "BinRack",
          "type": "string"
        },
        "PrioritySequence": {
          "format": "int32",
          "description": "Pick order",
          "type": "integer"
        },
        "Quantity": {
          "format": "int32",
          "description": "Quantity",
          "type": "integer"
        },
        "StockValue": {
          "format": "double",
          "description": "Current stock value",
          "type": "number"
        },
        "StartQuantity": {
          "format": "int32",
          "description": "Quantity originally booked in",
          "type": "integer",
          "readOnly": true
        },
        "PickedQuantity": {
          "format": "int32",
          "description": "Indicate how many units are now allocated in open orders",
          "type": "integer"
        },
        "BatchStatus": {
          "description": "Batch Status",
          "type": "string"
        },
        "IsDeleted": {
          "description": "Is BatchInventory deleted",
          "type": "boolean"
        },
        "WarehouseBinrackStandardType": {
          "format": "int32",
          "description": "Warehouse binrack standard type",
          "type": "integer"
        },
        "WarehouseBinrackTypeName": {
          "description": "Warehouse binrack type friendly name",
          "type": "string"
        },
        "InTransfer": {
          "format": "int32",
          "description": "Number of items in Transfer phase.",
          "type": "integer"
        },
        "BinRackId": {
          "format": "int32",
          "description": "Binrack Id (Use for WMS)",
          "type": "integer"
        },
        "WarehouseBinrackTypeId": {
          "format": "int32",
          "description": "Warehouse binrack type unique id.",
          "type": "integer"
        }
      }
    },
    "ReturnsRefunds_DeleteBookedItemRequest": {
      "type": "object",
      "properties": {
        "pkOrderId": {
          "format": "uuid",
          "description": "unique ID of the order",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "pkReturnId": {
          "format": "int32",
          "description": "unique row ID of the return/exchange item",
          "type": "integer"
        }
      }
    },
    "ReturnsRefunds_RefundOrderRequest": {
      "type": "object",
      "properties": {
        "pkOrderId": {
          "format": "uuid",
          "description": "unique ID of the order",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "refundReference": {
          "description": "Refund Reference Id",
          "type": "string"
        }
      }
    },
    "WarehouseLocation": {
      "type": "object",
      "properties": {
        "LocationName": {
          "description": "Location name",
          "type": "string"
        },
        "pkStockLocationId": {
          "format": "uuid",
          "description": "Stock location ID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "ReturnsRefunds_EditBookedItemInfoRequest": {
      "type": "object",
      "properties": {
        "pkOrderId": {
          "format": "uuid",
          "description": "unique ID of the order",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "bookedReturnsExchangeItem": {
          "$ref": "#/definitions/BookedReturnsExchangeItem",
          "description": "The updated booked return/exchange item object"
        }
      }
    },
    "ReturnsRefunds_DeletePendingRefundItemRequest": {
      "type": "object",
      "properties": {
        "fkOrderId": {
          "format": "uuid",
          "description": "unique order ID of the refund order",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "pkRefundRowId": {
          "format": "uuid",
          "description": "unique refund row ID of the refund item to delete",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "GenericPagedResult_ReturnsRefundsWeb": {
      "description": "Order item object",
      "type": "object",
      "properties": {
        "PageNumber": {
          "format": "int32",
          "description": "Result page number",
          "type": "integer"
        },
        "EntriesPerPage": {
          "format": "int32",
          "description": "Result page size, quantity of records per page",
          "type": "integer"
        },
        "TotalEntries": {
          "format": "int64",
          "description": "Total records",
          "type": "integer"
        },
        "TotalPages": {
          "format": "int32",
          "description": "Total pages",
          "type": "integer",
          "readOnly": true
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReturnsRefundsWeb"
          }
        }
      }
    },
    "ReturnsRefundsWeb": {
      "type": "object",
      "properties": {
        "Row": {
          "format": "int32",
          "type": "integer"
        },
        "pkOrderID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "cShippingAddress": {
          "type": "string"
        },
        "dProcessedOn": {
          "format": "date-time",
          "type": "string"
        },
        "fPostageCost": {
          "format": "double",
          "type": "number"
        },
        "fTotalCharge": {
          "format": "double",
          "type": "number"
        },
        "PostageCostExTax": {
          "format": "double",
          "type": "number"
        },
        "Subtotal": {
          "format": "double",
          "type": "number"
        },
        "fTax": {
          "format": "double",
          "type": "number"
        },
        "TotalDiscount": {
          "format": "double",
          "type": "number"
        },
        "CountryTaxRate": {
          "format": "double",
          "type": "number"
        },
        "nOrderId": {
          "format": "int32",
          "type": "integer"
        },
        "cCurrency": {
          "type": "string"
        },
        "PostalTrackingNumber": {
          "type": "string"
        },
        "cCountry": {
          "type": "string"
        },
        "Source": {
          "type": "string"
        },
        "PostalServiceName": {
          "type": "string"
        },
        "PostalServiceCode": {
          "type": "string"
        },
        "Vendor": {
          "type": "string"
        },
        "ReferenceNum": {
          "type": "string"
        },
        "SecondaryReference": {
          "type": "string"
        },
        "ExternalReference": {
          "type": "string"
        },
        "Address1": {
          "type": "string"
        },
        "Address2": {
          "type": "string"
        },
        "Address3": {
          "type": "string"
        },
        "Town": {
          "type": "string"
        },
        "Region": {
          "type": "string"
        },
        "BuyerPhoneNumber": {
          "type": "string"
        },
        "Company": {
          "type": "string"
        },
        "SubSource": {
          "type": "string"
        },
        "ChannelBuyerName": {
          "type": "string"
        },
        "AccountName": {
          "type": "string"
        },
        "cFullName": {
          "type": "string"
        },
        "cEmailAddress": {
          "type": "string"
        },
        "cPostCode": {
          "type": "string"
        },
        "dPaidOn": {
          "format": "date-time",
          "type": "string"
        },
        "cBillingAddress": {
          "type": "string"
        },
        "BillingName": {
          "type": "string"
        },
        "BillingCompany": {
          "type": "string"
        },
        "BillingAddress1": {
          "type": "string"
        },
        "BillingAddress2": {
          "type": "string"
        },
        "BillingAddress3": {
          "type": "string"
        },
        "BillingTown": {
          "type": "string"
        },
        "BillingRegion": {
          "type": "string"
        },
        "BillingPostCode": {
          "type": "string"
        },
        "BillingCountryName": {
          "type": "string"
        },
        "BillingPhoneNumber": {
          "type": "string"
        },
        "cItemNumber": {
          "type": "string"
        },
        "cItemName": {
          "type": "string"
        },
        "pkReturnId": {
          "format": "int32",
          "type": "integer"
        },
        "RowType": {
          "type": "string"
        },
        "ReturnReference": {
          "type": "string"
        },
        "PendingRefundAmount": {
          "format": "double",
          "type": "number"
        },
        "LastDate": {
          "format": "date-time",
          "type": "string"
        },
        "Reason": {
          "type": "string"
        },
        "ChannelReason": {
          "type": "string"
        },
        "ChannelReasonSec": {
          "type": "string"
        },
        "Category": {
          "type": "string"
        },
        "ReturnQty": {
          "format": "int32",
          "type": "integer"
        },
        "fkReturnLocationId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Scrapped": {
          "type": "boolean"
        },
        "ScrapQty": {
          "format": "int32",
          "type": "integer"
        },
        "ReturnDate": {
          "format": "date-time",
          "type": "string"
        },
        "Location": {
          "type": "string"
        },
        "ItemNumber": {
          "type": "string"
        },
        "ItemTitle": {
          "type": "string"
        },
        "NewQty": {
          "format": "int32",
          "type": "integer"
        },
        "RefundReference": {
          "type": "string"
        },
        "pkRefundRowId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Amount": {
          "format": "double",
          "type": "number"
        },
        "CreateDate": {
          "format": "date-time",
          "type": "string"
        },
        "CancellationQuantity": {
          "format": "int32",
          "type": "integer"
        },
        "fkOrderItemReturnId": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ActionDate": {
          "format": "date-time",
          "type": "string"
        },
        "RefundStatus": {
          "enum": [
            "OPEN",
            "PROCESSED",
            "ERROR",
            "ERROR_ACKED",
            "PENDING"
          ],
          "type": "string"
        }
      }
    },
    "SearchField": {
      "description": "Class represents the list of fields to be included it the where clause for searching",
      "type": "object",
      "properties": {
        "Field": {
          "description": "Search field",
          "type": "string"
        },
        "Name": {
          "description": "Name",
          "type": "string"
        },
        "AllowForAllDates": {
          "description": "If search for all dates",
          "type": "boolean"
        },
        "ExactSearchOptional": {
          "description": "If search is exact",
          "type": "boolean"
        }
      }
    }
  },
  "securityDefinitions": {
    "token": {
      "type": "apiKey",
      "description": "Authorization Header",
      "name": "Authorization",
      "in": "header"
    }
  }
}